{
  "version": 3,
  "sources": ["../../../../client/src/game/helpers.js"],
  "sourcesContent": ["import seededRandom from 'random-seed'\n\nclass Helpers {\n\n    rotateCarrierTowardsWaypoint (carrier, stars, graphics) {\n        // If the carrier has waypoints, get the first one and calculate the angle\n        // between the carrier's current position and the destination.\n        if (carrier.waypoints.length) {\n            let waypoint = carrier.waypoints[0]\n            let starDestination = stars.find(s => s._id === waypoint.destination)\n\n            if (!starDestination) {\n                const sourceStar = stars.find(s => s._id === waypoint.source)\n                if (!sourceStar) {\n                    return\n                }\n\n                const angle = this.getAngleTowardsLocation(carrier.location, sourceStar.location)\n                graphics.angle = (angle * (180 / Math.PI)) - 90\n                return\n            }\n\n            let destination = starDestination.location\n\n            let angle = this.getAngleTowardsLocation(carrier.location, destination)\n\n            graphics.angle = (angle * (180 / Math.PI)) + 90\n        }\n    }\n\n    getAngleTowardsLocation (source, destination) {\n      let deltaX = destination.x - source.x\n      let deltaY = destination.y - source.y\n  \n      return Math.atan2(deltaY, deltaX)\n    }\n\n    calculateDepthModifier (userSettings, seed) {\n        if (userSettings.map.objectsDepth === 'disabled') {\n            return 1\n        }\n\n        const min = 50\n        const max = 100\n\n        const seededRNG = seededRandom.create()\n        seededRNG.seed(seed)\n\n        const alpha = (Math.floor(seededRNG.random() * (max - min + 1) + min)) / 100\n\n        return alpha\n    }\n\n    calculateDepthModifiers (userSettings, seeds) {\n        if (userSettings.map.objectsDepth === 'disabled') {\n            return 1\n        }\n\n        const sum = seeds.reduce((a, b) => this.calculateDepthModifier(userSettings, a) + this.calculateDepthModifier(userSettings, b))\n        const avg = sum / seeds.length\n        \n        return avg\n    }\n\n}\n\nexport default new Helpers()"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAyB;AAEzB,MAAM,QAAQ;AAAA,EAEV,6BAA8B,SAAS,OAAO,UAAU;AAGpD,QAAI,QAAQ,UAAU,QAAQ;AAC1B,UAAI,WAAW,QAAQ,UAAU;AACjC,UAAI,kBAAkB,MAAM,KAAK,OAAK,EAAE,QAAQ,SAAS,WAAW;AAEpE,UAAI,CAAC,iBAAiB;AAClB,cAAM,aAAa,MAAM,KAAK,OAAK,EAAE,QAAQ,SAAS,MAAM;AAC5D,YAAI,CAAC,YAAY;AACb;AAAA,QACJ;AAEA,cAAMA,SAAQ,KAAK,wBAAwB,QAAQ,UAAU,WAAW,QAAQ;AAChF,iBAAS,QAASA,UAAS,MAAM,KAAK,MAAO;AAC7C;AAAA,MACJ;AAEA,UAAI,cAAc,gBAAgB;AAElC,UAAI,QAAQ,KAAK,wBAAwB,QAAQ,UAAU,WAAW;AAEtE,eAAS,QAAS,SAAS,MAAM,KAAK,MAAO;AAAA,IACjD;AAAA,EACJ;AAAA,EAEA,wBAAyB,QAAQ,aAAa;AAC5C,QAAI,SAAS,YAAY,IAAI,OAAO;AACpC,QAAI,SAAS,YAAY,IAAI,OAAO;AAEpC,WAAO,KAAK,MAAM,QAAQ,MAAM;AAAA,EAClC;AAAA,EAEA,uBAAwB,cAAc,MAAM;AACxC,QAAI,aAAa,IAAI,iBAAiB,YAAY;AAC9C,aAAO;AAAA,IACX;AAEA,UAAM,MAAM;AACZ,UAAM,MAAM;AAEZ,UAAM,YAAY,mBAAAC,QAAa,OAAO;AACtC,cAAU,KAAK,IAAI;AAEnB,UAAM,QAAS,KAAK,MAAM,UAAU,OAAO,KAAK,MAAM,MAAM,KAAK,GAAG,IAAK;AAEzE,WAAO;AAAA,EACX;AAAA,EAEA,wBAAyB,cAAc,OAAO;AAC1C,QAAI,aAAa,IAAI,iBAAiB,YAAY;AAC9C,aAAO;AAAA,IACX;AAEA,UAAM,MAAM,MAAM,OAAO,CAAC,GAAG,MAAM,KAAK,uBAAuB,cAAc,CAAC,IAAI,KAAK,uBAAuB,cAAc,CAAC,CAAC;AAC9H,UAAM,MAAM,MAAM,MAAM;AAExB,WAAO;AAAA,EACX;AAEJ;AAEA,IAAO,kBAAQ,IAAI,QAAQ;",
  "names": ["angle", "seededRandom"]
}
