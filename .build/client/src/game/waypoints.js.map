{
  "version": 3,
  "sources": ["../../../../client/src/game/waypoints.js"],
  "sourcesContent": ["import * as PIXI from 'pixi.js-legacy'\nimport EventEmitter from 'events'\nimport GameHelper from '../services/gameHelper'\nimport WaypointHelper from '../services/waypointHelper'\n\nclass Waypoints extends EventEmitter {\n  constructor () {\n    super()\n\n    this.container = new PIXI.Container()\n  }\n\n  setup (game) {\n    this.game = game\n    this.lightYearDistance = game.constants.distances.lightYear\n  }\n\n  clear () {\n    this.container.removeChildren()\n  }\n\n  draw (carrier) {\n    this.clear()\n\n    this.carrier = carrier\n\n    this.drawHyperspaceRange()\n    this.drawLastWaypoint()\n    this.drawNextWaypoints()\n    this.drawPaths()\n  }\n\n  drawLastWaypoint () {\n    // If there are no waypoints at all\n    // then deem the current location as the waypoint.\n    let lastLocation = this._getLastLocation()\n\n    // Draw a big selected highlight around the last waypoint.\n    this._highlightLocation(lastLocation, 0.8)\n  }\n\n  drawNextWaypoints () {\n    // Draw all of the available waypoints that the last waypoint can reach.\n    let lastLocation = this._getLastLocation()\n    let userPlayer = this.game.galaxy.players.find(p => p.userId)\n\n    // Calculate which stars are in reach and draw highlights around them\n    const hyperspaceDistance = GameHelper.getHyperspaceDistance(this.game, userPlayer, this.carrier)\n\n    for (let i = 0; i < this.game.galaxy.stars.length; i++) {\n      let s = this.game.galaxy.stars[i]\n\n      let distance = GameHelper.getDistanceBetweenLocations(lastLocation, s.location)\n\n      if (distance <= hyperspaceDistance) {\n        this._highlightLocation(s.location, 0.5)\n      } else {\n        this._highlightLocation(s.location, 0.2)\n      }\n    }\n  }\n\n  drawPaths () {\n    if (!this.carrier.waypoints.length) {\n      return\n    }\n\n    // Draw all paths to each waypoint the carrier currently has.\n    // Start with the first waypoint's source location and then\n    // go through each waypoint draw a line to their destinations.\n\n    let graphics = new PIXI.Graphics()\n\n    // Start the line from where the carrier currently is.\n    let star\n\n    graphics.moveTo(this.carrier.location.x, this.carrier.location.y)\n    graphics.lineStyle(1, 0xFFFFFF, 0.8)\n\n    // Draw a line to each destination along the waypoints.\n    for (let i = 0; i < this.carrier.waypoints.length; i++) {\n      let waypoint = this.carrier.waypoints[i]\n      star = this.game.galaxy.stars.find(s => s._id === waypoint.destination)\n\n      graphics.lineTo(star.location.x, star.location.y)\n    }\n\n    this.container.addChild(graphics)\n  }\n\n  drawHyperspaceRange () {\n    let graphics = new PIXI.Graphics()\n    // TODO: This is causing errors when a star is revealed in dark mode.\n    let lastLocationStar = this._getLastLocationStar()\n    let player = this.game.galaxy.players.find(p => p.userId)\n\n    let radius = ((this.carrier.effectiveTechs.hyperspace || 1) + 1.5) * this.lightYearDistance\n\n    graphics.lineStyle(1, player.colour.value, 0.2)\n    graphics.beginFill(player.colour.value, 0.15)\n    graphics.drawStar(lastLocationStar.location.x, lastLocationStar.location.y, radius, radius, radius - 3)\n    graphics.endFill()\n\n    this.container.addChild(graphics)\n  }\n\n  _highlightLocation (location, opacity) {\n    let graphics = new PIXI.Graphics()\n    let radius = 12\n\n    graphics.lineStyle(1, 0xFFFFFF, opacity)\n    graphics.drawStar(location.x, location.y, radius, radius, radius - 3)\n\n    this.container.addChild(graphics)\n  }\n\n  onStarClicked (e) {\n    if (!this.carrier) {\n      return\n    }\n\n    // If the selected star is inside of hyperspace range then\n    // simply create a waypoint to it. Otherwise try to calculate the\n    // shortest route to it.\n    const userPlayer = this.game.galaxy.players.find(p => p.userId)\n    const hyperspaceDistance = GameHelper.getHyperspaceDistance(this.game, userPlayer, this.carrier)\n\n    const lastLocationStar = this._getLastLocationStar()\n    const lastLocation = lastLocationStar == null ? null : lastLocationStar.location\n    const distance = GameHelper.getDistanceBetweenLocations(lastLocation, e.location)\n\n    let canCreateWaypoint = distance <= hyperspaceDistance\n\n    if (!canCreateWaypoint && lastLocationStar && lastLocationStar.wormHoleToStarId) {\n      const wormHolePairStar = GameHelper.getStarById(this.game, lastLocationStar.wormHoleToStarId)\n\n      canCreateWaypoint = wormHolePairStar && wormHolePairStar._id === e._id\n    }\n\n    if (canCreateWaypoint) {\n      this._createWaypoint(e._id)\n    } else {\n      this._createWaypointRoute(lastLocationStar._id, e._id)\n    }\n  }\n\n  _createWaypoint (destinationStarId) {\n    let newWaypoint = {\n      destination: destinationStarId,\n      action: 'collectAll',\n      actionShips: 0,\n      delayTicks: 0\n    }\n\n    // If the carrier has waypoints, create a new waypoint from the last destination.\n    if (this.carrier.waypoints.length) {\n      const lastWaypoint = this._getLastWaypoint()\n\n      // // The waypoint cannot be the same as the previous waypoint.\n      // if (newWaypoint.destination === lastWaypoint.destination) {\n      //   return\n      // }\n\n      newWaypoint.source = lastWaypoint.destination\n    } else { // Otherwise use the current orbiting star\n      newWaypoint.source = this.carrier.orbiting\n    }\n\n    this.carrier.waypoints.push(newWaypoint)\n\n    this.draw(this.carrier)\n\n    this.emit('onWaypointCreated', newWaypoint)\n  }\n\n  _createWaypointRoute (sourceStarId, destinStarId) {\n    const route = WaypointHelper.calculateShortestRoute(this.game, this.carrier, sourceStarId, destinStarId)\n\n    if (route.length > 1) {\n      for (let i = 1; i < route.length; i++) {\n        let waypointStar = route[i]\n        \n        this._createWaypoint(waypointStar._id)\n      }\n    } else {\n      this.emit('onWaypointOutOfRange', null)\n    }\n  }\n\n  _getLastWaypoint () {\n    return this.carrier.waypoints[this.carrier.waypoints.length - 1]\n  }\n\n  _getLastLocation () {\n    let lastLocationStar = this._getLastLocationStar()\n\n    if (lastLocationStar) {\n      return lastLocationStar.location\n    }\n\n    return null\n  }\n\n  _getLastLocationStar () {\n    if (this.carrier.waypoints.length) {\n      let lastWaypointStarId = this.carrier.waypoints[this.carrier.waypoints.length - 1].destination\n\n      return this.game.galaxy.stars.find(s => s._id === lastWaypointStarId)\n    } else {\n      return this.game.galaxy.stars.find(s => s._id === this.carrier.orbiting)\n    }\n  }\n}\n\nexport default Waypoints\n"],
  "mappings": "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",
  "names": ["EventEmitter", "GameHelper", "WaypointHelper"]
}
