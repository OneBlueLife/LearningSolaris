{
  "version": 3,
  "sources": ["../../../../client/src/game/carrier.js"],
  "sourcesContent": ["import * as PIXI from 'pixi.js-legacy'\nimport EventEmitter from 'events'\nimport TextureService from './texture'\nimport Helpers from './helpers'\n\nclass Carrier extends EventEmitter {\n\n  static culling_margin = 16\n\n  static zoomLevel = 140\n\n  constructor ( pathManager ) {\n    super()\n\n    this.container = new PIXI.Container()\n    this.fixedContainer = new PIXI.Container() // this container isnt affected by culling or user setting scalling\n    this.container.interactive = true\n    this.container.interactiveChildren = false\n    this.container.buttonMode = true\n\n    this.graphics_colour = new PIXI.Sprite()\n    this.graphics_selected = new PIXI.Graphics()\n    this.graphics_ship = new PIXI.Graphics()\n\n    this.container.addChild(this.graphics_colour)\n    this.container.addChild(this.graphics_selected)\n    this.container.addChild(this.graphics_ship)\n\n    this.container.on('pointerup', this.onClicked.bind(this))\n    this.container.on('mouseover', this.onMouseOver.bind(this))\n    this.container.on('mouseout', this.onMouseOut.bind(this))\n\n    this.pathManager = pathManager\n    this.sharedPathsIDs = Array()\n    this.uniquePaths = Array()\n\n    this.isMouseOver = false\n    this.zoomPercent = 100\n  }\n\n  setup (data, userSettings, stars, player, lightYearDistance) {\n    this.data = data\n    this.stars = stars\n    this.player = player\n    this.colour = player.colour.value\n    this.lightYearDistance = lightYearDistance\n\n    this.container.position.x = data.location.x\n    this.container.position.y = data.location.y\n    // Add a larger hit radius so that the star is easily clickable\n    this.container.hitArea = new PIXI.Circle(0, 0, 10)\n\n    this.userSettings = userSettings\n\n    this.clampedScaling = this.userSettings.map.objectsScaling == 'clamped'\n    this.baseScale = 1\n    this.minScale = this.userSettings.map.objectsMinimumScale/4.0\n    this.maxScale = this.userSettings.map.objectsMaximumScale/4.0\n\n    Carrier.zoomLevel = userSettings.map.zoomLevels.carrierShips\n\n    this.clearPaths() // clear on setup since this is used to reset waypoints\n    this.enableInteractivity()\n  }\n\n  draw () {\n    this.drawColour()\n    this.drawSelectedCircle()\n    this.drawCarrier()\n    this.drawShips()\n    this.drawSpecialist()\n    this.drawCarrierWaypoints()\n    this.drawDepth()\n  }\n\n  drawActive () {\n    this.drawShips()\n  }\n\n  drawShape() {\n    if (this.graphics_colour) {\n      this.container.removeChild(this.graphics_colour)\n      this.graphics_colour = null\n    }\n\n    if (Object.keys(TextureService.PLAYER_SYMBOLS).includes(this.player.shape)) {\n      this.graphics_colour = new PIXI.Sprite(TextureService.PLAYER_SYMBOLS[this.player.shape][4])\n\n    }\n\n    this.graphics_colour.anchor.set(0.5)\n    this.graphics_colour.width = 12\n    this.graphics_colour.height = 12\n    this.graphics_colour.tint = this.colour\n\n    this.container.addChild(this.graphics_colour)\n  }\n\n  drawColour () {\n    if (this.graphics_colour) {\n      this.container.removeChild(this.graphics_colour)\n      this.graphics_colour = null\n    }\n    \n    if (!this.data.orbiting) {\n      this.drawShape();\n    }\n  }\n\n  drawCarrier () {\n    if (this.graphics_ship) {\n      this.container.removeChild(this.graphics_ship)\n    }\n\n    this.graphics_ship = new PIXI.Sprite(TextureService.CARRIER_TEXTURE)\n    this.graphics_ship.anchor.set(0.5)\n    this.graphics_ship.width = 10\n    this.graphics_ship.height = 10\n    this.container.addChild(this.graphics_ship)\n\n    Helpers.rotateCarrierTowardsWaypoint(this.data, this.stars.map(s => s.data), this.graphics_ship)\n  }\n\n  drawShips () {\n    if (this.text_ships) {\n      this.container.removeChild(this.text_ships)\n      this.text_ships = null\n    }\n\n    if (!this.text_ships) {\n      let totalShips = this.data.ships == null ? '???' : this.data.ships\n\n      let shipsText = totalShips.toString()\n\n      let bitmapFont = {fontName: \"chakrapetch\", fontSize: 4}\n      this.text_ships = new PIXI.BitmapText(shipsText, bitmapFont)\n\n      this.text_ships.x = -(this.text_ships.width / 2.0)\n      this.text_ships.y = 5\n\n      this.container.addChild(this.text_ships)\n      if( this.data.isGift ) {\n        let style = new PIXI.TextStyle({\n          fontFamily: `Chakra Petch,sans-serif;`,\n          fill: 0xFFFFFF,\n          padding: 3,\n          fontSize: 4,\n          fontWeight: 'bold'\n        })\n        let giftText = new PIXI.Text('\uD83C\uDF81', style)\n        giftText.resolution = 12\n        giftText.position.x = this.text_ships.width\n        giftText.position.y = -1\n        this.text_ships.addChild(giftText)\n      }\n    }\n  }\n\n  drawSpecialist () {\n    if (this.specialistSprite) {\n      this.container.removeChild(this.specialistSprite)\n      this.specialistSprite = null\n    }\n\n    if (!this.hasSpecialist() || this.data.orbiting) {\n      return\n    }\n\n    let specialistTexture = TextureService.getSpecialistTexture(this.data.specialist.key)\n    this.specialistSprite = new PIXI.Sprite(specialistTexture)\n    this.specialistSprite.width = 6\n    this.specialistSprite.height = 6\n    this.specialistSprite.x = -3\n    this.specialistSprite.y = -3\n\n    this.container.addChild(this.specialistSprite)\n  }\n\n  hasSpecialist () {\n    return this.data.specialistId && this.data.specialistId > 0 && this.data.specialist\n  }\n\n  clearPaths() {\n    for(let path of this.uniquePaths) {\n      this.pathManager.removeUniquePath(path)\n    }\n    for(let pathID of this.sharedPathsIDs) {\n      this.pathManager.removeSharedPath(pathID, this)\n    }\n    this.uniquePaths = Array()\n    this.sharedPathsIDs = Array()\n  }\n\n  _isSourceLastDestination() {\n    let numof_waypoints = this.data.waypoints.length\n    let lastWaypoint = this.data.waypoints[numof_waypoints-1]\n    if (numof_waypoints<2) return false;\n    return (this.data.waypoints[0].source === lastWaypoint.destination)\n  }\n\n  drawCarrierWaypoints () {\n    this.clearPaths()\n\n    const PATH_WIDTH = 0.5*this.userSettings.map.carrierPathWidth\n\n    let lineWidth = this.data.waypointsLooped ? PATH_WIDTH : PATH_WIDTH\n    let lineAlpha = this.data.waypointsLooped ? 0.3 : 0.5\n    let lastPoint = this\n    let sourceIsLastDestination = false\n    sourceIsLastDestination = this._isSourceLastDestination()\n    // if looping and source is last destination, begin drawing path from the star instead of carrier\n    if ( this.data.waypointsLooped ) {\n      if (sourceIsLastDestination)  {\n        lastPoint = this.stars.find(s => s.data._id === this.data.waypoints[0].source)\n      }\n    }\n    let star\n    for (let i = 0; i < this.data.waypoints.length; i++) {\n      let waypoint = this.data.waypoints[i]\n      // Draw a line to each destination along the waypoints.\n      star = this.stars.find(s => s.data._id === waypoint.destination)\n      if (!star) { break; }\n\n      if ( this.data.waypointsLooped ) {\n        if (lastPoint === this) {\n          this.uniquePaths.push( this.pathManager.addUniquePath( lastPoint, star, true, this.colour ) )\n        }\n        else {\n          this.sharedPathsIDs.push( this.pathManager.addSharedPath( lastPoint, star, this ) )\n        }\n      }\n      else {\n        this.uniquePaths.push( this.pathManager.addUniquePath( lastPoint, star, false, this.colour ) )\n      }\n\n      lastPoint = star\n    }\n    //draw path back to the first destination\n    if ( this.data.waypointsLooped ) {\n      if (!sourceIsLastDestination && this.data.waypoints && this.data.waypoints.length) {\n        let firstPoint = this.stars.find(s => s.data._id === this.data.waypoints[0].destination)\n        if( firstPoint && lastPoint && firstPoint !== lastPoint ) {\n          this.sharedPathsIDs.push( this.pathManager.addSharedPath( star, firstPoint, this ) )\n        }\n      }\n    }\n  }\n\n  drawSelectedCircle () {\n    this.graphics_selected.clear()\n\n    if (this.isSelected) {\n      this.graphics_selected.lineStyle(0.5, 0xFFFFFF)\n      this.graphics_selected.alpha = 0.3\n      this.graphics_selected.drawCircle(0, 0, 15)\n    }\n  }\n\n  drawDepth () {\n    if (!this.data.orbiting) {\n      const waypoint = this.data.waypoints[0]\n      const seeds = [waypoint.source, waypoint.destination]\n      const depth = Helpers.calculateDepthModifiers(this.userSettings, seeds)\n\n      this.container.alpha = depth\n      this.baseScale = depth * (this.userSettings.map.objectsDepth === 'disabled' ? 1 : 1.5)\n    } else {\n      this.container.alpha = 1\n    }\n  }\n\n  enableInteractivity() {\n    // Can only be interactive if its in transit\n    if (!this.data.orbiting) {\n      this.container.interactive = true\n      this.container.buttonMode = true\n    } else {\n      this.container.interactive = false\n      this.container.buttonMode = false\n    }\n  }\n\n  disableInteractivity() {\n    this.container.interactive = false\n    this.container.buttonMode = false\n  }\n\n  onZoomChanging(zoomPercent) {\n   this.zoomPercent = zoomPercent\n   this.setScale(zoomPercent)\n   this.updateVisibility()//TODO see how this behaves on mobile - does it updated when pinching or only when pinching stops?\n  }\n\n  setScale( zoomPercent ) {\n    if(this.clampedScaling) {\n      let currentScale = zoomPercent/100\n      if (currentScale < this.minScale) {\n        this.container.scale.x = (1/currentScale)*this.minScale\n        this.container.scale.y = (1/currentScale)*this.minScale\n      } else if (currentScale > this.maxScale) {\n        this.container.scale.x = (1/currentScale)*this.maxScale\n        this.container.scale.y = (1/currentScale)*this.maxScale\n      }\n      else {\n        this.container.scale.x = this.baseScale\n        this.container.scale.y = this.baseScale\n      }\n    }\n    else {\n      this.container.scale.x = this.baseScale\n      this.container.scale.y = this.baseScale\n    }\n  }\n\n  onClicked (e) {\n    if (e && e.data && e.data.originalEvent && e.data.originalEvent.button === 2) {\n      this.emit('onCarrierRightClicked', this.data)\n    } else {\n      let eventData = e ? e.data : null\n\n      this.emit('onCarrierClicked', {carrierData: this.data, eventData})\n\n      // Need to do this otherwise sometimes text gets highlighted.\n      this.deselectAllText()\n    }\n  }\n\n  updateVisibility() {\n    if (this.graphics_ship) this.graphics_ship.visible = !this.data.orbiting && !this.hasSpecialist()\n    if (this.text_ships) this.text_ships.visible = !this.data.orbiting && (this.zoomPercent >= Carrier.zoomLevel || (this.isSelected && this.zoomPercent > Carrier.zoomLevel ) || (this.isMouseOver && this.zoomPercent > Carrier.zoomLevel))\n  }\n\n  deselectAllText () {\n    if (window.getSelection) {window.getSelection().removeAllRanges();}\n    else if (document.selection) {document.selection.empty();}\n  }\n\n  onMouseOver (e) {\n    this.isMouseOver = true\n\n    this.emit('onCarrierMouseOver', this)\n  }\n\n  onMouseOut (e) {\n    this.isMouseOver = false\n\n    this.emit('onCarrierMouseOut', this)\n  }\n\n  refreshZoom (zoomPercent) {\n    this.zoomPercent = zoomPercent\n  }\n\n  cleanupEventHandlers () {\n    this.container.off('pointerup', this.onClicked.bind(this))\n    this.container.off('mouseover', this.onMouseOver.bind(this))\n    this.container.off('mouseout', this.onMouseOut.bind(this))\n  }\n\n  destroy () {\n    this.container.destroy()\n    this.fixedContainer.destroy()\n  }\n\n  select () {\n    this.isSelected = true\n    this.drawSelectedCircle()\n    this.emit('onSelected', this.data)\n    this.updateVisibility()\n  }\n\n  unselect () {\n    this.isSelected = false\n    this.drawSelectedCircle()\n    this.emit('onUnselected', this.data)\n    this.updateVisibility()\n  }\n\n  toggleSelected () {\n    if (this.isSelected) {\n      this.unselect()\n    } else {\n      this.select()\n    }\n  }\n}\n\nexport default Carrier\n"],
  "mappings": "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",
  "names": ["EventEmitter", "TextureService", "Helpers"]
}
