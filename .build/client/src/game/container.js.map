{
  "version": 3,
  "sources": ["../../../../client/src/game/container.js"],
  "sourcesContent": ["import * as PIXI from 'pixi.js-legacy'\nimport { Viewport } from 'pixi-viewport'\nimport Map from './map'\nimport gameHelper from '../services/gameHelper'\nimport textureService from './texture'\n\nclass GameContainer {\n\n\n  constructor () {\n    PIXI.settings.SORTABLE_CHILDREN = true\n    PIXI.GRAPHICS_CURVES.minSegments = 20 // Smooth arcs\n\n    this.frames = 0\n    this.dtAccum = 33.0*16\n    this.lowest = 1000\n    this.previousDTs = [ 33.0, 33.0, 33.0, 33.0, 33.0, 33.0, 33.0, 33.0, 33.0, 33.0, 33.0, 33.0, 33.0, 33.0, 33.0, 33.0 ]\n    this.ma32accum = 0\n  }\n\n  calcFPS(deltaTime) {\n    let elapsed = this.app.ticker.elapsedMS\n    this.frames+=1\n    this.previousDTs.pop()\n    this.previousDTs.unshift(elapsed)\n\n    this.dtAccum = this.previousDTs.reduce( (total, current) => { return total+current } )\n    this.ma32accum += elapsed\n\n    let movingAverageDT = this.dtAccum/16.0\n    let movingAverageFPS = 1000.0/movingAverageDT\n    let ma32DT = this.ma32accum/32.0\n\n    let fps = 1000.0/elapsed\n    if( fps < this.lowest ) { this.lowest = fps }\n    if (this.fpsNowText) {\n      this.fpsNowText.text = ( 'fps: ' + fps.toFixed(0) )\n    }\n\n    if(this.frames==31) {\n      let ma32FPS = 1000.0/ma32DT\n      \n      if (this.fpsMAText) {\n        this.fpsMAText.text =  ( 'fpsMA: ' + movingAverageFPS.toFixed(0) )\n      }\n      \n      if (this.fpsMA32Text) {\n        this.fpsMA32Text.text = ( 'fpsMA32: ' + ma32FPS.toFixed(0) )\n      }\n      \n      if (this.jitterText) {\n        this.jitterText.text = ( 'jitter: ' + (movingAverageFPS-this.lowest).toFixed(0) )\n      }\n\n      if (this.lowestText) {\n        this.lowestText.text = ( 'lowest: '+ this.lowest.toFixed(0) )\n      }\n\n      if (this.zoomText) {\n        this.zoomText.text = ( 'zoom%: '+ this.map.zoomPercent.toFixed(0) )\n      }\n\n      this.frames = 0\n      this.lowest = 1000\n      this.ma32accum = 0\n    }\n  }\n\n  setupApp (store, userSettings) {\n    this.store = store\n\n    // Cleanup if the app already exists.\n    this.destroy()\n\n    let antialiasing = userSettings.map.antiAliasing === 'enabled';\n\n    this.app = new PIXI.Application({\n      width: window.innerWidth, // window.innerWidth,\n      height: window.innerHeight, // window.innerHeight,\n      backgroundColor: 0x000000, // black hexadecimal\n      resolution: window.devicePixelRatio || 1,\n      antialias: antialiasing,\n      autoResize: true\n    })\n\n    this.app.ticker.add(this.onTick.bind(this))\n    this.app.ticker.maxFPS = 0\n\n    if ( process.env.NODE_ENV == 'development') {\n      this.app.ticker.add(this.calcFPS.bind(this))\n    }\n\n    // create viewport\n    this.viewport = new Viewport({\n      screenWidth: window.innerWidth,\n      screenHeight: window.innerHeight,\n\n      // yolo\n      worldWidth: Number.MAX_VALUE,\n      worldHeight: Number.MAX_VALUE,\n\n      divWheel: this.app.renderer.view, // Ensures that when using the scroll wheel it only takes affect when the mouse is over the canvas (prevents scrolling in overlaying divs from scrolling the canvas)\n      stopPropagation: true,\n      passiveWheel: true,\n\n      interaction: this.app.renderer.plugins.interaction, // the interaction module is important for wheel() to work properly when renderer.view is placed or scaled\n      disableOnContextMenu: true\n    })\n\n    // add the viewport to the stage\n    this.app.stage.addChild(this.viewport)\n\n    // Add a new map to the viewport\n    this.map = new Map(this.app, this.store, this)\n    this.viewport.addChild(this.map.container)\n  }\n\n  destroy () {\n    // Cleanup if the app already exists.\n    if (this.app) {\n      this.app.destroy(false, {\n        children: true\n      })\n\n      this.app = null\n    }\n\n    if (this.viewport) {\n      this.viewport.destroy()\n      this.viewport = null\n    }\n  }\n\n  zoomIn () {\n    this.viewport.zoomPercent(0.5, true)\n  }\n\n  zoomOut () {\n    this.viewport.zoomPercent(-0.3, true)\n  }\n\n  setupViewport (game) {\n    this.game = game\n\n    this.starFieldLeft = gameHelper.calculateMinStarX(game) - 1500\n    this.starFieldRight = gameHelper.calculateMaxStarX(game) + 1500\n    this.starFieldTop = gameHelper.calculateMinStarY(game) - 750\n    this.starFieldBottom = gameHelper.calculateMaxStarY(game) + 750\n\n    // activate plugins\n    this.viewport\n      .drag()\n      .pinch()\n      .wheel({\n        // percent: 2,\n        smooth: 5\n      })\n      .decelerate({ friction: 0.9 })\n      .clamp({\n        left: this.starFieldLeft,\n        right: this.starFieldRight,\n        top: this.starFieldTop,\n        bottom: this.starFieldBottom\n      })\n      .clampZoom({\n        minWidth: 50,\n        minHeight: 50,\n        maxWidth: (Math.abs(this.starFieldLeft) + Math.abs(this.starFieldRight)),\n        maxHeight: (Math.abs(this.starFieldBottom) + Math.abs(this.starFieldTop))\n      })\n\n    this.viewport.on('zoomed-end', this.onViewportZoomed.bind(this))\n    this.viewport.on('pointerdown', this.map.onViewportPointerDown.bind(this.map))\n  }\n\n  setup (game, userSettings) {\n    this.userSettings = userSettings\n    textureService.initialize()\n\n    this.map.setup(this.game, userSettings)\n  }\n\n  draw () {\n    this.map.draw()\n\n    if ( process.env.NODE_ENV == 'development' && true) {\n      let bitmapFont = {fontName: \"chakrapetch\", fontSize: 16}\n      let left = 64\n      let top = 32\n\n      this.fpsNowText = new PIXI.BitmapText(\"\", bitmapFont)\n      this.fpsMAText = new PIXI.BitmapText(\"\", bitmapFont)\n      this.fpsMA32Text = new PIXI.BitmapText(\"\", bitmapFont)\n      this.jitterText = new PIXI.BitmapText(\"\", bitmapFont)\n      this.lowestText = new PIXI.BitmapText(\"\", bitmapFont)\n      this.zoomText = new PIXI.BitmapText(\"\", bitmapFont)\n      this.fpsNowText.x = left\n      this.fpsNowText.y = 128+16\n      this.fpsMAText.x = left\n      this.fpsMAText.y = this.fpsNowText.y + top+2\n      this.fpsMA32Text.x = left\n      this.fpsMA32Text.y = this.fpsMAText.y +top+2\n      this.jitterText.x = left\n      this.jitterText.y = this.fpsMA32Text.y + top+2\n      this.lowestText.x = left\n      this.lowestText.y = this.jitterText.y +top+2\n      this.zoomText.x = left\n      this.zoomText.y = this.lowestText.y +top+2\n      this.app.stage.addChild(this.fpsNowText)\n      this.app.stage.addChild(this.jitterText)\n      this.app.stage.addChild(this.lowestText)\n      this.app.stage.addChild(this.fpsMAText)\n      this.app.stage.addChild(this.fpsMA32Text)\n      this.app.stage.addChild(this.zoomText)\n    }\n  }\n\n  drawWaypoints () {\n    this.map.drawWaypoints()\n  }\n\n  reloadGame (game, userSettings) {\n    this.game = game\n    this.userSettings = userSettings\n    this.map.reloadGame(game, userSettings)\n  }\n\n  reloadTerritories () {\n    this.map.drawTerritories(this.userSettings)\n  }\n\n  reloadStar (star) {\n    let starObject = this.map.setupStar(this.game, this.userSettings, star)\n    this.map.drawStar(starObject)\n    this.map.addContainerToChunk(starObject, this.map.chunks, this.map.firstChunkX, this.map.firstChunkY)\n  }\n\n  reloadCarrier (carrier) {\n    let carrierObject = this.map.setupCarrier(this.game, this.userSettings, carrier)\n    this.map.drawCarrier(carrierObject)\n    this.map.addContainerToChunk(carrierObject, this.map.chunks, this.map.firstChunkX, this.map.firstChunkY)\n  }\n\n  undrawCarrier (carrier) {\n    this.map.undrawCarrier(carrier)\n  }\n\n  getViewportZoomPercentage () {\n    let viewportWidth = this.viewport.right - this.viewport.left\n    let viewportPercent = (this.viewport.screenWidth / viewportWidth) * 100\n\n    return viewportPercent\n  }\n\n  onTick (deltaTime) {\n    this.map.onTick(deltaTime)\n  }\n\n  onViewportZoomed (e) {\n    let zoomPercent = this.getViewportZoomPercentage()\n\n    this.map.refreshZoom(zoomPercent)\n  }\n\n  setMode (mode, args) {\n    this.map.setMode(mode, args)\n  }\n\n  resetMode () {\n    this.map.resetMode()\n  }\n\n  resize () {\n    this.app.renderer.resize(\n      window.innerWidth,\n      window.innerHeight\n    )\n\n    this.viewport.resize(\n      window.innerWidth,\n      window.innerHeight,\n      Number.MAX_VALUE,\n      Number.MAX_VALUE\n    )\n  }\n\n}\n\nexport default new GameContainer()\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsB;AACtB,2BAAyB;AACzB,iBAAgB;AAChB,wBAAuB;AACvB,qBAA2B;AAE3B,MAAM,cAAc;AAAA,EAGlB,cAAe;AACb,SAAK,SAAS,oBAAoB;AAClC,SAAK,gBAAgB,cAAc;AAEnC,SAAK,SAAS;AACd,SAAK,UAAU,KAAK;AACpB,SAAK,SAAS;AACd,SAAK,cAAc,CAAE,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,EAAK;AACpH,SAAK,YAAY;AAAA,EACnB;AAAA,EAEA,QAAQ,WAAW;AACjB,QAAI,UAAU,KAAK,IAAI,OAAO;AAC9B,SAAK,UAAQ;AACb,SAAK,YAAY,IAAI;AACrB,SAAK,YAAY,QAAQ,OAAO;AAEhC,SAAK,UAAU,KAAK,YAAY,OAAQ,CAAC,OAAO,YAAY;AAAE,aAAO,QAAM;AAAA,IAAQ,CAAE;AACrF,SAAK,aAAa;AAElB,QAAI,kBAAkB,KAAK,UAAQ;AACnC,QAAI,mBAAmB,MAAO;AAC9B,QAAI,SAAS,KAAK,YAAU;AAE5B,QAAI,MAAM,MAAO;AACjB,QAAI,MAAM,KAAK,QAAS;AAAE,WAAK,SAAS;AAAA,IAAI;AAC5C,QAAI,KAAK,YAAY;AACnB,WAAK,WAAW,OAAS,UAAU,IAAI,QAAQ,CAAC;AAAA,IAClD;AAEA,QAAG,KAAK,UAAQ,IAAI;AAClB,UAAI,UAAU,MAAO;AAErB,UAAI,KAAK,WAAW;AAClB,aAAK,UAAU,OAAU,YAAY,iBAAiB,QAAQ,CAAC;AAAA,MACjE;AAEA,UAAI,KAAK,aAAa;AACpB,aAAK,YAAY,OAAS,cAAc,QAAQ,QAAQ,CAAC;AAAA,MAC3D;AAEA,UAAI,KAAK,YAAY;AACnB,aAAK,WAAW,OAAS,cAAc,mBAAiB,KAAK,QAAQ,QAAQ,CAAC;AAAA,MAChF;AAEA,UAAI,KAAK,YAAY;AACnB,aAAK,WAAW,OAAS,aAAY,KAAK,OAAO,QAAQ,CAAC;AAAA,MAC5D;AAEA,UAAI,KAAK,UAAU;AACjB,aAAK,SAAS,OAAS,YAAW,KAAK,IAAI,YAAY,QAAQ,CAAC;AAAA,MAClE;AAEA,WAAK,SAAS;AACd,WAAK,SAAS;AACd,WAAK,YAAY;AAAA,IACnB;AAAA,EACF;AAAA,EAEA,SAAU,OAAO,cAAc;AAC7B,SAAK,QAAQ;AAGb,SAAK,QAAQ;AAEb,QAAI,eAAe,aAAa,IAAI,iBAAiB;AAErD,SAAK,MAAM,IAAI,KAAK,YAAY;AAAA,MAC9B,OAAO,OAAO;AAAA,MACd,QAAQ,OAAO;AAAA,MACf,iBAAiB;AAAA,MACjB,YAAY,OAAO,oBAAoB;AAAA,MACvC,WAAW;AAAA,MACX,YAAY;AAAA,IACd,CAAC;AAED,SAAK,IAAI,OAAO,IAAI,KAAK,OAAO,KAAK,IAAI,CAAC;AAC1C,SAAK,IAAI,OAAO,SAAS;AAEzB,QAAK,QAAQ,IAAI,YAAY,eAAe;AAC1C,WAAK,IAAI,OAAO,IAAI,KAAK,QAAQ,KAAK,IAAI,CAAC;AAAA,IAC7C;AAGA,SAAK,WAAW,IAAI,8BAAS;AAAA,MAC3B,aAAa,OAAO;AAAA,MACpB,cAAc,OAAO;AAAA,MAGrB,YAAY,OAAO;AAAA,MACnB,aAAa,OAAO;AAAA,MAEpB,UAAU,KAAK,IAAI,SAAS;AAAA,MAC5B,iBAAiB;AAAA,MACjB,cAAc;AAAA,MAEd,aAAa,KAAK,IAAI,SAAS,QAAQ;AAAA,MACvC,sBAAsB;AAAA,IACxB,CAAC;AAGD,SAAK,IAAI,MAAM,SAAS,KAAK,QAAQ;AAGrC,SAAK,MAAM,IAAI,WAAAA,QAAI,KAAK,KAAK,KAAK,OAAO,IAAI;AAC7C,SAAK,SAAS,SAAS,KAAK,IAAI,SAAS;AAAA,EAC3C;AAAA,EAEA,UAAW;AAET,QAAI,KAAK,KAAK;AACZ,WAAK,IAAI,QAAQ,OAAO;AAAA,QACtB,UAAU;AAAA,MACZ,CAAC;AAED,WAAK,MAAM;AAAA,IACb;AAEA,QAAI,KAAK,UAAU;AACjB,WAAK,SAAS,QAAQ;AACtB,WAAK,WAAW;AAAA,IAClB;AAAA,EACF;AAAA,EAEA,SAAU;AACR,SAAK,SAAS,YAAY,KAAK,IAAI;AAAA,EACrC;AAAA,EAEA,UAAW;AACT,SAAK,SAAS,YAAY,MAAM,IAAI;AAAA,EACtC;AAAA,EAEA,cAAe,MAAM;AACnB,SAAK,OAAO;AAEZ,SAAK,gBAAgB,kBAAAC,QAAW,kBAAkB,IAAI,IAAI;AAC1D,SAAK,iBAAiB,kBAAAA,QAAW,kBAAkB,IAAI,IAAI;AAC3D,SAAK,eAAe,kBAAAA,QAAW,kBAAkB,IAAI,IAAI;AACzD,SAAK,kBAAkB,kBAAAA,QAAW,kBAAkB,IAAI,IAAI;AAG5D,SAAK,SACF,KAAK,EACL,MAAM,EACN,MAAM;AAAA,MAEL,QAAQ;AAAA,IACV,CAAC,EACA,WAAW,EAAE,UAAU,IAAI,CAAC,EAC5B,MAAM;AAAA,MACL,MAAM,KAAK;AAAA,MACX,OAAO,KAAK;AAAA,MACZ,KAAK,KAAK;AAAA,MACV,QAAQ,KAAK;AAAA,IACf,CAAC,EACA,UAAU;AAAA,MACT,UAAU;AAAA,MACV,WAAW;AAAA,MACX,UAAW,KAAK,IAAI,KAAK,aAAa,IAAI,KAAK,IAAI,KAAK,cAAc;AAAA,MACtE,WAAY,KAAK,IAAI,KAAK,eAAe,IAAI,KAAK,IAAI,KAAK,YAAY;AAAA,IACzE,CAAC;AAEH,SAAK,SAAS,GAAG,cAAc,KAAK,iBAAiB,KAAK,IAAI,CAAC;AAC/D,SAAK,SAAS,GAAG,eAAe,KAAK,IAAI,sBAAsB,KAAK,KAAK,GAAG,CAAC;AAAA,EAC/E;AAAA,EAEA,MAAO,MAAM,cAAc;AACzB,SAAK,eAAe;AACpB,mBAAAC,QAAe,WAAW;AAE1B,SAAK,IAAI,MAAM,KAAK,MAAM,YAAY;AAAA,EACxC;AAAA,EAEA,OAAQ;AACN,SAAK,IAAI,KAAK;AAEd,QAAK,QAAQ,IAAI,YAAY,iBAAiB,MAAM;AAClD,UAAI,aAAa,EAAC,UAAU,eAAe,UAAU,GAAE;AACvD,UAAI,OAAO;AACX,UAAI,MAAM;AAEV,WAAK,aAAa,IAAI,KAAK,WAAW,IAAI,UAAU;AACpD,WAAK,YAAY,IAAI,KAAK,WAAW,IAAI,UAAU;AACnD,WAAK,cAAc,IAAI,KAAK,WAAW,IAAI,UAAU;AACrD,WAAK,aAAa,IAAI,KAAK,WAAW,IAAI,UAAU;AACpD,WAAK,aAAa,IAAI,KAAK,WAAW,IAAI,UAAU;AACpD,WAAK,WAAW,IAAI,KAAK,WAAW,IAAI,UAAU;AAClD,WAAK,WAAW,IAAI;AACpB,WAAK,WAAW,IAAI,MAAI;AACxB,WAAK,UAAU,IAAI;AACnB,WAAK,UAAU,IAAI,KAAK,WAAW,IAAI,MAAI;AAC3C,WAAK,YAAY,IAAI;AACrB,WAAK,YAAY,IAAI,KAAK,UAAU,IAAG,MAAI;AAC3C,WAAK,WAAW,IAAI;AACpB,WAAK,WAAW,IAAI,KAAK,YAAY,IAAI,MAAI;AAC7C,WAAK,WAAW,IAAI;AACpB,WAAK,WAAW,IAAI,KAAK,WAAW,IAAG,MAAI;AAC3C,WAAK,SAAS,IAAI;AAClB,WAAK,SAAS,IAAI,KAAK,WAAW,IAAG,MAAI;AACzC,WAAK,IAAI,MAAM,SAAS,KAAK,UAAU;AACvC,WAAK,IAAI,MAAM,SAAS,KAAK,UAAU;AACvC,WAAK,IAAI,MAAM,SAAS,KAAK,UAAU;AACvC,WAAK,IAAI,MAAM,SAAS,KAAK,SAAS;AACtC,WAAK,IAAI,MAAM,SAAS,KAAK,WAAW;AACxC,WAAK,IAAI,MAAM,SAAS,KAAK,QAAQ;AAAA,IACvC;AAAA,EACF;AAAA,EAEA,gBAAiB;AACf,SAAK,IAAI,cAAc;AAAA,EACzB;AAAA,EAEA,WAAY,MAAM,cAAc;AAC9B,SAAK,OAAO;AACZ,SAAK,eAAe;AACpB,SAAK,IAAI,WAAW,MAAM,YAAY;AAAA,EACxC;AAAA,EAEA,oBAAqB;AACnB,SAAK,IAAI,gBAAgB,KAAK,YAAY;AAAA,EAC5C;AAAA,EAEA,WAAY,MAAM;AAChB,QAAI,aAAa,KAAK,IAAI,UAAU,KAAK,MAAM,KAAK,cAAc,IAAI;AACtE,SAAK,IAAI,SAAS,UAAU;AAC5B,SAAK,IAAI,oBAAoB,YAAY,KAAK,IAAI,QAAQ,KAAK,IAAI,aAAa,KAAK,IAAI,WAAW;AAAA,EACtG;AAAA,EAEA,cAAe,SAAS;AACtB,QAAI,gBAAgB,KAAK,IAAI,aAAa,KAAK,MAAM,KAAK,cAAc,OAAO;AAC/E,SAAK,IAAI,YAAY,aAAa;AAClC,SAAK,IAAI,oBAAoB,eAAe,KAAK,IAAI,QAAQ,KAAK,IAAI,aAAa,KAAK,IAAI,WAAW;AAAA,EACzG;AAAA,EAEA,cAAe,SAAS;AACtB,SAAK,IAAI,cAAc,OAAO;AAAA,EAChC;AAAA,EAEA,4BAA6B;AAC3B,QAAI,gBAAgB,KAAK,SAAS,QAAQ,KAAK,SAAS;AACxD,QAAI,kBAAmB,KAAK,SAAS,cAAc,gBAAiB;AAEpE,WAAO;AAAA,EACT;AAAA,EAEA,OAAQ,WAAW;AACjB,SAAK,IAAI,OAAO,SAAS;AAAA,EAC3B;AAAA,EAEA,iBAAkB,GAAG;AACnB,QAAI,cAAc,KAAK,0BAA0B;AAEjD,SAAK,IAAI,YAAY,WAAW;AAAA,EAClC;AAAA,EAEA,QAAS,MAAM,MAAM;AACnB,SAAK,IAAI,QAAQ,MAAM,IAAI;AAAA,EAC7B;AAAA,EAEA,YAAa;AACX,SAAK,IAAI,UAAU;AAAA,EACrB;AAAA,EAEA,SAAU;AACR,SAAK,IAAI,SAAS;AAAA,MAChB,OAAO;AAAA,MACP,OAAO;AAAA,IACT;AAEA,SAAK,SAAS;AAAA,MACZ,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,IACT;AAAA,EACF;AAEF;AAEA,IAAO,oBAAQ,IAAI,cAAc;",
  "names": ["Map", "gameHelper", "textureService"]
}
