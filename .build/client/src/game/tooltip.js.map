{
  "version": 3,
  "sources": ["../../../../client/src/game/tooltip.js"],
  "sourcesContent": ["import * as PIXI from 'pixi.js-legacy'\nimport GameHelper from '../services/gameHelper'\n\nexport default class {\n    constructor() {\n        this.container = new PIXI.Container()\n        this.container.interactive = false\n        this.container.buttonMode = false\n    }\n\n    setup (game) {\n        this.game = game\n    }\n\n    clear () {\n        if (this.intervalDraw) {\n            clearInterval(this.intervalDraw)\n            this.intervalDraw = null\n        }\n\n        this.container.removeChildren()\n        this.tooltip = null\n    }\n\n    _drawTooltip (tooltipData) {\n        this.container.removeChildren()\n        this.tooltip = null\n\n        const player = GameHelper.getPlayerById(this.game, tooltipData.playerId)\n\n        const paddingX = 2\n        const paddingY = 2\n\n        const internalContainer = new PIXI.Container()\n        internalContainer.x = paddingX\n        internalContainer.y = paddingY\n    \n        let textStyle = new PIXI.TextStyle({\n            fontFamily: `Chakra Petch,sans-serif;`,\n            fill: 0xFFFFFF,\n            fontSize: 6,\n            fontWeight: 'bold'\n        })\n\n        for (let i = 0; i < tooltipData.detail.length; i++) {\n            const text = new PIXI.Text(tooltipData.detail[i], textStyle)\n            text.resolution = 12\n\n            const prev = internalContainer.children[i - 1]\n\n            if (prev) {\n                text.y = prev.y + prev.height\n            } else {\n                text.y = 0\n            }\n\n            internalContainer.addChild(text)\n        }\n\n        let graphics = new PIXI.Graphics()\n        graphics.lineStyle(1, player.colour.value)\n        graphics.beginFill(0x000000)\n        graphics.drawRoundedRect(0, 0, internalContainer.width + (paddingX*2), internalContainer.height + (paddingY*2), 1)\n        graphics.endFill()\n\n        this.container.addChild(graphics)    \n        this.container.addChild(internalContainer)\n\n        if (tooltipData.offset.relative) {\n            this.container.x = tooltipData.location.x + tooltipData.offset.x\n            this.container.y = tooltipData.location.y - (this.container.height / 2) + tooltipData.offset.y\n        } else {\n            this.container.x = tooltipData.location.x + tooltipData.offset.x\n            this.container.y = tooltipData.location.y + tooltipData.offset.y\n        }\n    }\n\n    drawTooltipCarrier (carrier) {\n        this.clear()\n\n        // Note: We have to do this in order to account\n        // for carrier ETAs in real time.\n        const redraw = () => {\n            const isOwnedByUserPlayer = GameHelper.isOwnedByUserPlayer(this.game, carrier)\n    \n            const detail = [\n                `\u23F1\uFE0F ` + GameHelper.getCountdownTimeStringByTicks(this.game, carrier.ticksEta)\n            ]\n    \n            if (isOwnedByUserPlayer) {\n                detail.push(`${carrier.waypointsLooped ? '\uD83D\uDD04' : '\uD83D\uDCCD'} ${carrier.waypoints.length} waypoint${carrier.waypoints.length !== 1 ? 's' : ''}`)\n            }\n    \n            this._drawTooltip({\n                playerId: carrier.ownedByPlayerId,\n                location: carrier.location,\n                detail,\n                offset: {\n                    relative: true,\n                    x: 6,\n                    y: 2\n                }\n            })\n        }\n\n        this.intervalDraw = setInterval(redraw, 250)\n        redraw()\n    }\n\n    drawTooltipStar (star) {\n        this.clear()\n        \n        const carriers = GameHelper.getCarriersOrbitingStar(this.game, star)\n\n        if (!carriers.length) {\n            return\n        }\n\n        let detail = []\n\n        if (star.ships != null && star.ships > 0) {\n            detail.push(\n                `\u2B50 ${star.ships == null ? '???' : star.ships} garrisoned\\n`\n            )\n        }\n\n        const carrierStrings = carriers.map(carrier => {\n            const isOwnedByUserPlayer = GameHelper.isOwnedByUserPlayer(this.game, carrier)\n\n            let result = `\\n${carrier.name}` +\n                `\\n \uD83D\uDE80 ${carrier.ships || '???'} ship${carrier.ships !== 1 ? 's' : ''}`\n\n            if (isOwnedByUserPlayer) {\n                result += `\\n ${carrier.waypointsLooped ? '\uD83D\uDD04' : '\uD83D\uDCCD'} ${carrier.waypoints.length} waypoint${carrier.waypoints.length !== 1 ? 's' : ''}`\n            }\n\n            if (carrier.specialist && carrier.specialist.name) {\n                result += `\\n \uD83E\uDDD1\u200D\uD83D\uDE80 ${carrier.specialist.name}`\n            }\n\n            return result\n        })\n\n        carrierStrings[0] = carrierStrings[0].trim()\n\n        detail = detail.concat(carrierStrings)\n\n        this._drawTooltip({\n            playerId: star.ownedByPlayerId,\n            location: star.location,\n            detail,\n            offset: {\n                relative: false,\n                x: 0,\n                y: 6\n            }\n        })\n    }\n}\n"],
  "mappings": "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",
  "names": ["GameHelper"]
}
