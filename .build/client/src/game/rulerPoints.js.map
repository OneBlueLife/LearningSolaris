{
  "version": 3,
  "sources": ["../../../../client/src/game/rulerPoints.js"],
  "sourcesContent": ["import * as PIXI from 'pixi.js-legacy'\nimport EventEmitter from 'events'\n\nclass RulerPoints extends EventEmitter {\n  constructor () {\n    super()\n\n    this.container = new PIXI.Container()\n  }\n\n  setup (game) {\n    this.game = game\n\n    this.rulerPoints = []\n    this.lightYearDistance = game.constants.distances.lightYear\n\n    this.techLevel = 1\n    let userPlayer = game.galaxy.players.find(x => x.userId)\n\n    if (userPlayer) {\n      this.techLevel = userPlayer.research.hyperspace.level\n    }\n\n    this.emit('onRulerPointsCleared')\n\n    this.clear()\n  }\n\n  clear () {\n    this.container.removeChildren()\n  }\n\n  draw () {\n    this.clear()\n\n    this.drawPaths()\n    this.drawHyperspaceRange()\n  }\n\n  drawPaths () {\n    if (!this.rulerPoints.length) {\n      return\n    }\n\n    // Draw all paths to each ruler point\n    let graphics = new PIXI.Graphics()\n\n    // Start the line from where the first point is.\n    let firstPoint = this.rulerPoints[0]\n    graphics.moveTo(firstPoint.location.x, firstPoint.location.y)\n    graphics.lineStyle(1, 0xFFFFFF, 0.8)\n\n    // Draw a line to each other point\n    for (let i = 1; i < this.rulerPoints.length; i++) {\n      let point = this.rulerPoints[i]\n\n      graphics.lineTo(point.location.x, point.location.y)\n    }\n\n    this.container.addChild(graphics)\n  }\n\n  drawHyperspaceRange () {\n    let lastPoint = this.rulerPoints[this.rulerPoints.length - 1]\n\n    if (!lastPoint) {\n      return\n    }\n\n    let graphics = new PIXI.Graphics()\n\n    let radius = ((this.techLevel || 1) + 1.5) * this.lightYearDistance\n\n    graphics.lineStyle(1, 0xFFFFFF, 0.2)\n    graphics.beginFill(0xFFFFFF, 0.075)\n    graphics.drawStar(lastPoint.location.x, lastPoint.location.y, radius, radius, radius - 3)\n    graphics.endFill()\n    graphics.zIndex = -1\n\n    this.container.addChild(graphics)\n  }\n\n  onStarClicked (e) {\n    this._createRulerPoint({\n      type: 'star',\n      object: e,\n      location: e.location\n    })\n  }\n\n  onCarrierClicked (e) {\n    this._createRulerPoint({\n      type: 'carrier',\n      object: e,\n      location: e.location\n    })\n  }\n\n  removeLastRulerPoint () {\n    const old = this.rulerPoints.pop()\n\n    this.draw()\n\n    this.emit('onRulerPointRemoved', old)\n  }\n\n  _createRulerPoint (desiredPoint) {\n    let lastPoint = this.rulerPoints[this.rulerPoints.length - 1]\n\n    if (lastPoint &&\n      lastPoint.location.x === desiredPoint.location.x &&\n      lastPoint.location.y === desiredPoint.location.y) {\n      return\n    }\n\n    desiredPoint.distance = this.rulerPoints.push(desiredPoint)\n\n    this.draw()\n\n    this.emit('onRulerPointCreated', desiredPoint)\n  }\n}\n\nexport default RulerPoints\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsB;AACtB,oBAAyB;AAEzB,MAAM,oBAAoB,cAAAA,QAAa;AAAA,EACrC,cAAe;AACb,UAAM;AAEN,SAAK,YAAY,IAAI,KAAK,UAAU;AAAA,EACtC;AAAA,EAEA,MAAO,MAAM;AACX,SAAK,OAAO;AAEZ,SAAK,cAAc,CAAC;AACpB,SAAK,oBAAoB,KAAK,UAAU,UAAU;AAElD,SAAK,YAAY;AACjB,QAAI,aAAa,KAAK,OAAO,QAAQ,KAAK,OAAK,EAAE,MAAM;AAEvD,QAAI,YAAY;AACd,WAAK,YAAY,WAAW,SAAS,WAAW;AAAA,IAClD;AAEA,SAAK,KAAK,sBAAsB;AAEhC,SAAK,MAAM;AAAA,EACb;AAAA,EAEA,QAAS;AACP,SAAK,UAAU,eAAe;AAAA,EAChC;AAAA,EAEA,OAAQ;AACN,SAAK,MAAM;AAEX,SAAK,UAAU;AACf,SAAK,oBAAoB;AAAA,EAC3B;AAAA,EAEA,YAAa;AACX,QAAI,CAAC,KAAK,YAAY,QAAQ;AAC5B;AAAA,IACF;AAGA,QAAI,WAAW,IAAI,KAAK,SAAS;AAGjC,QAAI,aAAa,KAAK,YAAY;AAClC,aAAS,OAAO,WAAW,SAAS,GAAG,WAAW,SAAS,CAAC;AAC5D,aAAS,UAAU,GAAG,UAAU,GAAG;AAGnC,aAAS,IAAI,GAAG,IAAI,KAAK,YAAY,QAAQ,KAAK;AAChD,UAAI,QAAQ,KAAK,YAAY;AAE7B,eAAS,OAAO,MAAM,SAAS,GAAG,MAAM,SAAS,CAAC;AAAA,IACpD;AAEA,SAAK,UAAU,SAAS,QAAQ;AAAA,EAClC;AAAA,EAEA,sBAAuB;AACrB,QAAI,YAAY,KAAK,YAAY,KAAK,YAAY,SAAS;AAE3D,QAAI,CAAC,WAAW;AACd;AAAA,IACF;AAEA,QAAI,WAAW,IAAI,KAAK,SAAS;AAEjC,QAAI,WAAW,KAAK,aAAa,KAAK,OAAO,KAAK;AAElD,aAAS,UAAU,GAAG,UAAU,GAAG;AACnC,aAAS,UAAU,UAAU,KAAK;AAClC,aAAS,SAAS,UAAU,SAAS,GAAG,UAAU,SAAS,GAAG,QAAQ,QAAQ,SAAS,CAAC;AACxF,aAAS,QAAQ;AACjB,aAAS,SAAS;AAElB,SAAK,UAAU,SAAS,QAAQ;AAAA,EAClC;AAAA,EAEA,cAAe,GAAG;AAChB,SAAK,kBAAkB;AAAA,MACrB,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,UAAU,EAAE;AAAA,IACd,CAAC;AAAA,EACH;AAAA,EAEA,iBAAkB,GAAG;AACnB,SAAK,kBAAkB;AAAA,MACrB,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,UAAU,EAAE;AAAA,IACd,CAAC;AAAA,EACH;AAAA,EAEA,uBAAwB;AACtB,UAAM,MAAM,KAAK,YAAY,IAAI;AAEjC,SAAK,KAAK;AAEV,SAAK,KAAK,uBAAuB,GAAG;AAAA,EACtC;AAAA,EAEA,kBAAmB,cAAc;AAC/B,QAAI,YAAY,KAAK,YAAY,KAAK,YAAY,SAAS;AAE3D,QAAI,aACF,UAAU,SAAS,MAAM,aAAa,SAAS,KAC/C,UAAU,SAAS,MAAM,aAAa,SAAS,GAAG;AAClD;AAAA,IACF;AAEA,iBAAa,WAAW,KAAK,YAAY,KAAK,YAAY;AAE1D,SAAK,KAAK;AAEV,SAAK,KAAK,uBAAuB,YAAY;AAAA,EAC/C;AACF;AAEA,IAAO,sBAAQ;",
  "names": ["EventEmitter"]
}
