{
  "version": 3,
  "sources": ["../../../../client/src/game/playerNames.js"],
  "sourcesContent": ["import * as PIXI from 'pixi.js-legacy'\nimport gameHelper from '../services/gameHelper'\n\nclass PlayerNames {\n\n  static zoomLevel = 90\n\n  constructor () {\n    this.container = new PIXI.Container()\n\n    this.zoomPercent = 0\n  }\n\n  setup (game, userSettings) {\n    this.game = game\n\n    PlayerNames.zoomLevel = userSettings.map.zoomLevels.playerNames\n  }\n\n  draw () {\n    this.container.removeChildren()\n    \n    for (let player of this.game.galaxy.players) {\n      let empireCenter = gameHelper.getPlayerEmpireCenter(this.game, player)\n\n      if (empireCenter == null) {\n        continue\n      }\n\n      let style = new PIXI.TextStyle({\n        fontFamily: `Chakra Petch,sans-serif;`,\n        fill: 0xFFFFFF,\n        padding: 3,\n        fontSize: 50\n      })\n\n      let textContainer = new PIXI.Container()\n\n      let text_name = new PIXI.Text(player.alias, style)\n      text_name.resolution = 2\n      text_name.zIndex = 10\n\n      let graphics = new PIXI.Graphics()\n      graphics.beginFill(player.colour.value)\n      graphics.drawRoundedRect(-10, -10, text_name.width + 20, text_name.height + 20, 10)\n      graphics.endFill()\n      graphics.alpha = 0.7\n\n      textContainer.x = empireCenter.x - (text_name.width / 2)\n      textContainer.y = empireCenter.y - (text_name.height / 2)\n\n      textContainer.addChild(graphics)\n      textContainer.addChild(text_name)\n\n      this.container.addChild(textContainer)\n    }\n\n    this.separate()\n\n    this.refreshZoom(this.zoomPercent || 0)\n  }\n\n  separate () {\n    const rects = this.container.children\n\n    const hasOverlap = (rectA, rectB) => {\n      // a left >= b right or b left >= a right\n      if (rectA.x >= rectB.x + rectB.width || rectB.x >= rectA.x + rectA.width) {\n        return false\n      }\n\n      // a top >= b bottom or b top >= a bottom\n      if (rectA.y >= rectB.y + rectB.height || rectB.y >= rectA.y + rectA.height) {\n        return false\n      }\n\n      return true\n    }\n\n    const hasOverlaps = () => {\n      for (let i = 0; i < rects.length - 1; i++) {\n        for (let ii = 0; ii < rects.length - 1; ii++) {\n          if (i === ii) {\n            continue\n          }\n\n          if (hasOverlap(rects[i], rects[ii])) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n\n    const translate = (rect, index) => {\n      const overlapVector = {\n        x: 0,\n        y: 0\n      }\n\n      for (let i = 0; i < rects.length - 1; i++) {\n        if (i === index) {\n          continue\n        }\n\n        const otherRect = rects[i]\n\n        if (hasOverlap(rect, otherRect)) {\n          const rectMidVec = {\n            x: (rect.x + rect.x + rect.width) / 2,\n            y: (rect.y + rect.y + rect.height) / 2\n          }\n\n          const otherMidVec = {\n            x: (otherRect.x + otherRect.x + otherRect.width) / 2,\n            y: (otherRect.y + otherRect.y + otherRect.height) / 2\n          }\n\n          overlapVector.x += rectMidVec.x - otherMidVec.x\n          overlapVector.y += rectMidVec.y - otherMidVec.y\n        }\n      }\n\n      return overlapVector\n    }\n\n    const normalize = (vector) => {\n      const mag = Math.sqrt(vector.x ** 2 + vector.y ** 2)\n\n      if (mag === 0) {\n        return\n      }\n\n      vector.x = vector.x / mag\n      vector.y = vector.y / mag\n    }\n\n    while (hasOverlaps()) {\n      for (let i = 0; i < rects.length - 1; i++) {\n        const rect = rects[i]\n\n        const newVector = translate(rect, i)\n\n        normalize(newVector)\n\n        rect.x += newVector.x\n        rect.y += newVector.y\n      }\n    }\n  }\n\n  onTick( zoomPercent, zoomChanging ) {\n    this.zoomPercent = zoomPercent\n\n    if( zoomChanging ) {\n      if (this.container) {\n        this.container.visible = zoomPercent <= PlayerNames.zoomLevel\n      }\n    }\n  }\n\n  refreshZoom (zoomPercent) {\n    this.zoomPercent = zoomPercent\n\n    if (this.container) {\n      this.container.visible = zoomPercent <= PlayerNames.zoomLevel\n    }\n  }\n\n}\n\nexport default PlayerNames\n"],
  "mappings": "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",
  "names": ["gameHelper"]
}
