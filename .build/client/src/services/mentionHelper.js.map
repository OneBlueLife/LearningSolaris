{
  "version": 3,
  "sources": ["../../../../client/src/services/mentionHelper.js"],
  "sourcesContent": ["import gameHelper from './gameHelper.js'\n\nclass MentionHelper {\n  static MENTION_REGEX = /(#|@)(?:(?:{(.*?)})|([\\w\\[\\]]+))/g\n  static INTERNAL_MENTION_REGEX = /{{(\\w)\\/(\\w+?)\\/(.+?)}}/g\n  static HYPERLINK_REGEX = /https?:\\/\\/\\S+/g\n  static STAR_MENTION_CHARACTER = '#'\n  static PLAYER_MENTION_CHARACTER = '@'\n\n  addMention(conversation, type, name) {\n    const text = conversation.text || ''\n    const element = conversation.element\n\n    //Do not use and for property access here because a selection start of 0 would be false\n    const insertionStart = element ? element.selectionStart : (text.length - 1)\n    const insertionEnd = element ? element.selectionEnd : text.length\n\n    this.addMentionFromTo(conversation, type, name, insertionStart, insertionEnd)\n  }\n\n  addMentionFromTo (conversation, type, name, start, end) {\n    const text = conversation.text || ''\n    const element = conversation.element\n\n    const character = this.getMentionCharacter(type)\n    let mention\n    if (name.match(/[^\\w\\[\\]]/)) {\n      mention = `${character}{${name}}`\n    } else {\n      mention = `${character}${name}`\n    }\n\n    const newText = text.substring(0, start) + mention + text.substring(end)\n\n    conversation.text = newText\n\n    if (element) {\n      element.setSelectionRange(start, start + mention.length)\n      element.focus()\n    }\n  }\n\n  makeMentionsStatic(game, originalText) {\n    return originalText.replaceAll(MentionHelper.MENTION_REGEX, (match, typeGroup, nameGroup, nameGroup2) => {\n      const name = nameGroup || nameGroup2\n      const type = this.getMentionType(typeGroup)\n      if (type === 'star') {\n        return this.makeStarMentionStatic(game, name)\n      } else if (type === 'player') {\n        return this.makePlayerMentionStatic(game, name)\n      } else {\n        return match\n      }\n    })\n  }\n\n  makePlayerMentionStatic(game, playerName) {\n    const player = gameHelper.getPlayerByAlias(game, playerName)\n\n    if (player) {\n      return this.makeStaticMention('p', player._id, playerName)\n    } else {\n      return playerName\n    }\n  }\n\n  makeStarMentionStatic(game, starName) {\n    const star = gameHelper.getStarByName(game, starName)\n\n    if (star) {\n      return this.makeStaticMention('s', star._id, starName)\n    } else {\n      return starName\n    }\n  }\n\n  makeStaticMention(type, id, name) {\n    return `{{${type}/${id}/${name}}}`\n  }\n\n  replaceMentionsWithNames(message) {\n    try {\n      return message.replace(MentionHelper.INTERNAL_MENTION_REGEX, (_match, _type, _id, name) => name)\n    } catch (e) {\n      // Just in case things go wrong, render the raw message\n      console.error(e)\n      return message\n    }\n  }\n\n  renderTextWithLinks(element, text) {\n    let lastLinkEnd = 0\n\n    for (const match of text.matchAll(MentionHelper.HYPERLINK_REGEX)) {\n      const plaintext = text.substring(lastLinkEnd, match.index)\n\n      if (plaintext) {\n        const node = document.createTextNode(plaintext)\n        element.appendChild(node)\n      }\n\n      lastLinkEnd = match.index + match[0].length\n\n      const linkElement = this.createHyperlinkElement(match[0])\n\n      element.appendChild(linkElement)\n    }\n\n    const lastText = text.substring(lastLinkEnd)\n\n    if (lastText) {\n      const node = document.createTextNode(lastText)\n      element.appendChild(node)\n    }\n  }\n\n  renderMessageWithMentionsAndLinks(element, message, onStarClickedCallback, onPlayerClickedCallback) {\n    try {\n      let lastMentionEnd = 0\n\n      for (const match of message.matchAll(MentionHelper.INTERNAL_MENTION_REGEX)) {\n        const text = message.substring(lastMentionEnd, match.index)\n\n        if (text) {\n          this.renderTextWithLinks(element, text)\n        }\n\n        lastMentionEnd = match.index + match[0].length\n\n        const linkElement = this.createMentionLinkElement(match[1], match[2], match[3], onStarClickedCallback, onPlayerClickedCallback)\n\n        element.appendChild(linkElement)\n      }\n\n      const lastText = message.substring(lastMentionEnd)\n\n      if (lastText) {\n        this.renderTextWithLinks(element, lastText)\n      }\n    } catch (e) {\n      console.error(e)\n\n      // Just in case things go wrong, render the message as raw text.\n      const node = document.createTextNode(message)\n      element.appendChild(node)\n    }\n  }\n\n  createHyperlinkElement(url) {\n    const node = document.createElement(\"a\")\n    node.setAttribute(\"href\", url)\n    node.text = url\n    node.setAttribute(\"target\", \"_blank\")\n    return node\n  }\n\n  createMentionLinkElement(type, id, name, onStarClickedCallback, onPlayerClickedCallback) {\n    const node = document.createElement(\"a\")\n\n    //Set href attribute so styles are applied properly\n    node.setAttribute(\"href\", \"javascript:void(0)\")\n    node.text = name\n\n    switch (type) {\n      case 's':\n        node.onclick = () => {\n          onStarClickedCallback(id) \n        }\n        break\n      case 'p':\n        node.onclick = () => { \n          onPlayerClickedCallback(id) \n        }\n        break\n    }\n\n    return node\n  }\n\n  getMentionType (character) {\n    if (character === MentionHelper.STAR_MENTION_CHARACTER) {\n      return 'star'\n    } else if (character === MentionHelper.PLAYER_MENTION_CHARACTER) {\n      return 'player'\n    } else {\n      return null\n    }\n  }\n\n  getMentionCharacter (type) {\n    if (type === 'star') {\n      return MentionHelper.STAR_MENTION_CHARACTER\n    } else if (type === 'player') {\n      return MentionHelper.PLAYER_MENTION_CHARACTER\n    } else {\n      return null\n    }\n  }\n\n  getCurrentMention (game, element) {\n    const text = element.value\n    const cursor = element.selectionEnd\n    const currentMention = this.findAllMentions(text).find(mention => mention.from <= cursor && mention.to >= cursor)\n    if (!currentMention) {\n      return null\n    } else {\n      return {\n        mention: currentMention,\n        suggestions: this.findSuggestions(game, currentMention.type, currentMention.name)\n      }\n    }\n  }\n\n  findAllMentions (message) {\n    const mentions = [...message.matchAll(MentionHelper.MENTION_REGEX)]\n    return mentions.map(match => {\n      return {\n        from: match.index,\n        to: match.index + match[0].length,\n        type: this.getMentionType(match[1]),\n        name: match[2] || match[3] || ''\n      }\n    })\n  }\n\n  getToCursor (conversation, from) {\n    const element = conversation.element\n    const text = conversation.text || ''\n    const cursorPos = element ? element.selectionEnd : text.length\n    return text.substring(from, cursorPos)\n  }\n  \n  findSuggestions (game, mentionType, mentionText) {\n    let suggestionNames = []\n    const mentionStart = mentionText.toLowerCase()\n    if (mentionType === 'star') {\n      suggestionNames = game.galaxy.stars.map(star => star.name).filter(starName => starName.toLowerCase().startsWith(mentionStart))\n    } else if (mentionType === 'player') {\n      suggestionNames = game.galaxy.players.map(player => player.alias).filter(playerName => playerName.toLowerCase().startsWith(mentionStart))\n    }\n    return suggestionNames.sort().slice(0, 3)\n  }\n\n  useSuggestion (conversation, data) {\n    if (!conversation || !data) {\n      return\n    }\n    const { mention, text } = data\n    this.addMentionFromTo(conversation, mention.type, text, mention.from, mention.to)\n  }\n}\n\nexport default new MentionHelper()"],
  "mappings": "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",
  "names": ["gameHelper"]
}
