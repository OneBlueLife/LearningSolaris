{
  "version": 3,
  "sources": ["../../../../client/src/services/diplomacyHelper.js"],
  "sourcesContent": ["class DiplomacyHelper {\n  \n  isFormalAlliancesEnabled (game) {\n    return game.settings.diplomacy.enabled === 'enabled'\n  }\n\n  isTradeRestricted (game) {\n    return game.settings.diplomacy.tradeRestricted === 'enabled'\n  }\n\n  maxAlliances (game) {\n    return game.settings.diplomacy.maxAlliances\n  }\n\n  isMaxAlliancesEnabled (game) {\n    return game.settings.diplomacy.maxAlliances < game.settings.general.playerLimit - 1\n  }\n\n  isAllianceUpkeepEnabled (game) {\n    return game.settings.diplomacy.upkeepCost !== 'none'\n  }\n\n  getAllianceUpkeepCost (game, player, cycleCredits, allianceCount) {\n    const costPerAlly = game.constants.diplomacy.upkeepExpenseMultipliers[game.settings.diplomacy.upkeepCost];\n    const upkeep = Math.round(allianceCount * costPerAlly * cycleCredits)\n\n    return upkeep\n  }\n\n  isDiplomaticStatusToPlayersAllied(game, playerId, toPlayerIds) {\n    let playerIdA = playerId;\n\n    for (let i = 0; i < toPlayerIds.length; i++) {\n        let playerIdB = toPlayerIds[i]\n\n        let diplomaticStatus = this.getDiplomaticStatusToPlayer(game, playerIdA, playerIdB)\n\n        if (['enemies', 'neutral'].includes(diplomaticStatus.actualStatus)) {\n            return false\n        }\n    }\n\n    return true\n  }\n\n  getDiplomaticStatusToPlayer(game, playerIdA, playerIdB) {\n    if (playerIdA.toString() === playerIdB.toString()) {\n      return {\n          playerIdFrom: playerIdA,\n          playerIdTo: playerIdB,\n          statusFrom: 'allies',\n          statusTo: 'allies',\n          actualStatus: 'allies'\n      }\n    }\n\n    let playerA = game.galaxy.players.find(p => p._id.toString() === playerIdA.toString())\n    let playerB = game.galaxy.players.find(p => p._id.toString() === playerIdB.toString())\n\n    let playerADiplo = playerA.diplomacy.find(x => x.playerId.toString() === playerB._id.toString())\n    let playerBDiplo = playerB.diplomacy.find(x => x.playerId.toString() === playerA._id.toString())\n\n    let statusTo = playerADiplo == null ? 'neutral' : playerADiplo.status\n    let statusFrom = playerBDiplo == null ? 'neutral' : playerBDiplo.status\n\n    let actualStatus\n\n    if (statusTo === 'enemies' || statusFrom === 'enemies') {\n        actualStatus = 'enemies'\n    } else if (statusTo === 'neutral' || statusFrom === 'neutral') {\n        actualStatus = 'neutral'\n    } else {\n        actualStatus = 'allies'\n    }\n\n    return {\n        playerIdFrom: playerIdA,\n        playerIdTo: playerIdB,\n        statusFrom,\n        statusTo,\n        actualStatus\n    }\n  }\n\n}\n\nexport default new DiplomacyHelper()\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAM,gBAAgB;AAAA,EAEpB,yBAA0B,MAAM;AAC9B,WAAO,KAAK,SAAS,UAAU,YAAY;AAAA,EAC7C;AAAA,EAEA,kBAAmB,MAAM;AACvB,WAAO,KAAK,SAAS,UAAU,oBAAoB;AAAA,EACrD;AAAA,EAEA,aAAc,MAAM;AAClB,WAAO,KAAK,SAAS,UAAU;AAAA,EACjC;AAAA,EAEA,sBAAuB,MAAM;AAC3B,WAAO,KAAK,SAAS,UAAU,eAAe,KAAK,SAAS,QAAQ,cAAc;AAAA,EACpF;AAAA,EAEA,wBAAyB,MAAM;AAC7B,WAAO,KAAK,SAAS,UAAU,eAAe;AAAA,EAChD;AAAA,EAEA,sBAAuB,MAAM,QAAQ,cAAc,eAAe;AAChE,UAAM,cAAc,KAAK,UAAU,UAAU,yBAAyB,KAAK,SAAS,UAAU;AAC9F,UAAM,SAAS,KAAK,MAAM,gBAAgB,cAAc,YAAY;AAEpE,WAAO;AAAA,EACT;AAAA,EAEA,kCAAkC,MAAM,UAAU,aAAa;AAC7D,QAAI,YAAY;AAEhB,aAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AACzC,UAAI,YAAY,YAAY;AAE5B,UAAI,mBAAmB,KAAK,4BAA4B,MAAM,WAAW,SAAS;AAElF,UAAI,CAAC,WAAW,SAAS,EAAE,SAAS,iBAAiB,YAAY,GAAG;AAChE,eAAO;AAAA,MACX;AAAA,IACJ;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,4BAA4B,MAAM,WAAW,WAAW;AACtD,QAAI,UAAU,SAAS,MAAM,UAAU,SAAS,GAAG;AACjD,aAAO;AAAA,QACH,cAAc;AAAA,QACd,YAAY;AAAA,QACZ,YAAY;AAAA,QACZ,UAAU;AAAA,QACV,cAAc;AAAA,MAClB;AAAA,IACF;AAEA,QAAI,UAAU,KAAK,OAAO,QAAQ,KAAK,OAAK,EAAE,IAAI,SAAS,MAAM,UAAU,SAAS,CAAC;AACrF,QAAI,UAAU,KAAK,OAAO,QAAQ,KAAK,OAAK,EAAE,IAAI,SAAS,MAAM,UAAU,SAAS,CAAC;AAErF,QAAI,eAAe,QAAQ,UAAU,KAAK,OAAK,EAAE,SAAS,SAAS,MAAM,QAAQ,IAAI,SAAS,CAAC;AAC/F,QAAI,eAAe,QAAQ,UAAU,KAAK,OAAK,EAAE,SAAS,SAAS,MAAM,QAAQ,IAAI,SAAS,CAAC;AAE/F,QAAI,WAAW,gBAAgB,OAAO,YAAY,aAAa;AAC/D,QAAI,aAAa,gBAAgB,OAAO,YAAY,aAAa;AAEjE,QAAI;AAEJ,QAAI,aAAa,aAAa,eAAe,WAAW;AACpD,qBAAe;AAAA,IACnB,WAAW,aAAa,aAAa,eAAe,WAAW;AAC3D,qBAAe;AAAA,IACnB,OAAO;AACH,qBAAe;AAAA,IACnB;AAEA,WAAO;AAAA,MACH,cAAc;AAAA,MACd,YAAY;AAAA,MACZ;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA,EACF;AAEF;AAEA,IAAO,0BAAQ,IAAI,gBAAgB;",
  "names": []
}
