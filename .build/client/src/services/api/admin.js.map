{
  "version": 3,
  "sources": ["../../../../../client/src/services/api/admin.js"],
  "sourcesContent": ["import axios from 'axios'\nimport BaseApiService from './base'\n\nclass AdminService extends BaseApiService {\n\n  getUsers () {\n    return axios.get(this.BASE_URL + 'admin/user', { withCredentials: true })\n  }\n\n  getPasswordResets () {\n    return axios.get(this.BASE_URL + 'admin/passwordresets', { withCredentials: true })\n  }\n\n  getReports () {\n    return axios.get(this.BASE_URL + 'admin/reports', { withCredentials: true })\n  }\n\n  setRoleContributor (userId, enabled) {\n    return axios.patch(this.BASE_URL + 'admin/user/' + userId + '/contributor', {\n      enabled\n    },\n    { withCredentials: true })\n  }\n\n  setRoleDeveloper (userId, enabled) {\n    return axios.patch(this.BASE_URL + 'admin/user/' + userId + '/developer', {\n      enabled\n    },\n    { withCredentials: true })\n  }\n\n  setRoleCommunityManager (userId, enabled) {\n    return axios.patch(this.BASE_URL + 'admin/user/' + userId + '/communityManager', {\n      enabled\n    },\n    { withCredentials: true })\n  }\n\n  setRoleGameMaster (userId, enabled) {\n    return axios.patch(this.BASE_URL + 'admin/user/' + userId + '/gameMaster', {\n      enabled\n    },\n    { withCredentials: true })\n  }\n\n  setCredits (userId, credits) {\n    return axios.patch(this.BASE_URL + 'admin/user/' + userId + '/credits', {\n      credits\n    },\n    { withCredentials: true })\n  }\n\n  ban (userId) {\n    return axios.patch(this.BASE_URL + 'admin/user/' + userId + '/ban', {},\n    { withCredentials: true })\n  }\n\n  unban (userId) {\n    return axios.patch(this.BASE_URL + 'admin/user/' + userId + '/unban', {},\n    { withCredentials: true })\n  }\n\n  resetAchievements (userId) {\n    return axios.patch(this.BASE_URL + 'admin/user/' + userId + '/resetachievements', {},\n    { withCredentials: true })\n  }\n\n  promoteToEstablishedPlayer (userId) {\n    return axios.patch(this.BASE_URL + 'admin/user/' + userId + '/promoteToEstablishedPlayer', {},\n    { withCredentials: true })\n  }\n\n  impersonate (userId) {\n    return axios.post(this.BASE_URL + 'admin/user/' + userId + '/impersonate', {},\n    { withCredentials: true })\n  }\n\n  getGames () {\n    return axios.get(this.BASE_URL + 'admin/game', { withCredentials: true })\n  }\n\n  setGameFeatured (gameId, featured) {\n    return axios.patch(this.BASE_URL + 'admin/game/' + gameId + '/featured', {\n      featured\n    },\n    { withCredentials: true })\n  }\n\n  forceGameFinish (gameId) {\n    return axios.patch(this.BASE_URL + 'admin/game/' + gameId + '/finish', {},\n    { withCredentials: true })\n  }\n\n  setGameTimeMachine (gameId, timeMachine) {\n    return axios.patch(this.BASE_URL + 'admin/game/' + gameId + '/timeMachine', {\n      timeMachine\n    },\n    { withCredentials: true })\n  }\n\n  actionReport (reportId) {\n    return axios.patch(this.BASE_URL + 'admin/reports/' + reportId + '/action', {},\n    { withCredentials: true })\n  }\n\n  getInsights () {\n    return axios.get(this.BASE_URL + 'admin/insights', { withCredentials: true })\n  }\n}\n\nexport default new AdminService()\n"],
  "mappings": "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",
  "names": ["BaseApiService", "axios"]
}
