{
  "version": 3,
  "sources": ["../../../../server/api/middleware/player.ts"],
  "sourcesContent": ["import ValidationError from \"../../errors/validation\";\nimport { DependencyContainer } from \"../../services/types/DependencyContainer\";\n\nexport interface PlayerMiddleware {\n    loadPlayer: (req: any, res: any, next: any) => void;\n    validatePlayerState: (options: PlayerStateValidationOptions) => (req: any, res: any, next: any) => void;\n}\n\nexport interface PlayerStateValidationOptions {\n    isPlayerUndefeated?: boolean;\n}\n\nexport const middleware = (container: DependencyContainer): PlayerMiddleware => {\n    return {\n        loadPlayer: (req, res, next) => {\n            try {\n                if (!req.game) {\n                    throw new Error(`The game has not been loaded.`);\n                }\n\n                req.player = container.playerService.getByUserId(req.game, req.session.userId);\n\n                if (!req.player) {\n                    throw new ValidationError('You are not participating in this game.');\n                }\n\n                next();\n            } catch (err) {\n                next(err);\n            }\n        },\n        validatePlayerState: (options: PlayerStateValidationOptions) => {\n            return (req, res, next) => {\n                if (options.isPlayerUndefeated && req.player.defeated) {\n                    throw new ValidationError('You cannot participate in this game, you have been defeated.');\n                }\n    \n                next();\n            }\n        }\n    }\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA4B;AAYrB,MAAM,aAAa,CAAC,cAAqD;AAC5E,SAAO;AAAA,IACH,YAAY,CAAC,KAAK,KAAK,SAAS;AAC5B,UAAI;AACA,YAAI,CAAC,IAAI,MAAM;AACX,gBAAM,IAAI,MAAM,+BAA+B;AAAA,QACnD;AAEA,YAAI,SAAS,UAAU,cAAc,YAAY,IAAI,MAAM,IAAI,QAAQ,MAAM;AAE7E,YAAI,CAAC,IAAI,QAAQ;AACb,gBAAM,IAAI,kBAAAA,QAAgB,yCAAyC;AAAA,QACvE;AAEA,aAAK;AAAA,MACT,SAAS,KAAP;AACE,aAAK,GAAG;AAAA,MACZ;AAAA,IACJ;AAAA,IACA,qBAAqB,CAAC,YAA0C;AAC5D,aAAO,CAAC,KAAK,KAAK,SAAS;AACvB,YAAI,QAAQ,sBAAsB,IAAI,OAAO,UAAU;AACnD,gBAAM,IAAI,kBAAAA,QAAgB,8DAA8D;AAAA,QAC5F;AAEA,aAAK;AAAA,MACT;AAAA,IACJ;AAAA,EACJ;AACJ;",
  "names": ["ValidationError"]
}
