{
  "version": 3,
  "sources": ["../../../../server/api/middleware/core.ts"],
  "sourcesContent": ["import ValidationError from '../../errors/validation';\nimport { ExpressJoiError } from 'express-joi-validation';\nimport { NextFunction, Request, Response } from 'express';\n\nexport interface CoreMiddleware {\n    handleError(err: any, req: Request, res: Response, next: NextFunction);\n};\n\nexport const middleware = (): CoreMiddleware => {\n    return {\n        handleError(err, req, res, next) {\n            // If there is an error in the pipleline\n            // then test to see what type of error it is. If its a validation\n            // error then return it with its status code.\n            if (err instanceof ValidationError) {\n            // if (err instanceof ValidationError) {\n                let errors: string | string[] = err.message;\n\n                if (!Array.isArray(errors)) {\n                    errors = [errors];\n                }\n\n                return res.status(err.statusCode).json({\n                    errors\n                });\n            }\n\n            // If its a Joi error then return the error messages only.\n            if (err.type && ['body','query','headers','fields','params'].includes(err.type)) {\n                const jerr = err as ExpressJoiError;\n\n                return res.status(400).json({\n                    errors: jerr.error!.details.map(d => d.message)\n                })\n            }\n\n            console.error(err.stack);\n\n            return res.status(500).json({\n                errors: ['Something broke. If the problem persists, please contact a developer.']\n            });\n        }\n    };\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA4B;AAM3B;AAEM,MAAM,aAAa,MAAsB;AAC5C,SAAO;AAAA,IACH,YAAY,KAAK,KAAK,KAAK,MAAM;AAI7B,UAAI,eAAe,kBAAAA,SAAiB;AAEhC,YAAI,SAA4B,IAAI;AAEpC,YAAI,CAAC,MAAM,QAAQ,MAAM,GAAG;AACxB,mBAAS,CAAC,MAAM;AAAA,QACpB;AAEA,eAAO,IAAI,OAAO,IAAI,UAAU,EAAE,KAAK;AAAA,UACnC;AAAA,QACJ,CAAC;AAAA,MACL;AAGA,UAAI,IAAI,QAAQ,CAAC,QAAO,SAAQ,WAAU,UAAS,QAAQ,EAAE,SAAS,IAAI,IAAI,GAAG;AAC7E,cAAM,OAAO;AAEb,eAAO,IAAI,OAAO,GAAG,EAAE,KAAK;AAAA,UACxB,QAAQ,KAAK,MAAO,QAAQ,IAAI,OAAK,EAAE,OAAO;AAAA,QAClD,CAAC;AAAA,MACL;AAEA,cAAQ,MAAM,IAAI,KAAK;AAEvB,aAAO,IAAI,OAAO,GAAG,EAAE,KAAK;AAAA,QACxB,QAAQ,CAAC,uEAAuE;AAAA,MACpF,CAAC;AAAA,IACL;AAAA,EACJ;AACJ;",
  "names": ["ValidationError"]
}
