{
  "version": 3,
  "sources": ["../../../../server/api/controllers/ledger.ts"],
  "sourcesContent": ["import { LedgerType } from '../../services/ledger';\nimport { DependencyContainer } from '../../services/types/DependencyContainer';\n\nexport default (container: DependencyContainer) => {\n    return {\n        detailCredits: async (req, res, next) => {\n            try {\n                let ledger = await container.ledgerService.getLedger(req.player, LedgerType.Credits);\n    \n                return res.status(200).json(ledger);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        forgiveCredits: async (req, res, next) => {\n            try {\n                let newLedger = await container.ledgerService.forgiveDebt(\n                    req.game,\n                    req.player,\n                    req.params.playerId,\n                    LedgerType.Credits);\n    \n                return res.status(200).json(newLedger);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        settleCredits: async (req, res, next) => {\n            try {\n                let newLedger = await container.ledgerService.settleDebt(\n                    req.game,\n                    req.player,\n                    req.params.playerId,\n                    LedgerType.Credits);\n    \n                return res.status(200).json(newLedger);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        detailCreditsSpecialists: async (req, res, next) => {\n            try {\n                let ledger = await container.ledgerService.getLedger(req.player, LedgerType.CreditsSpecialists);\n    \n                return res.status(200).json(ledger);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        forgiveCreditsSpecialists: async (req, res, next) => {\n            try {\n                let newLedger = await container.ledgerService.forgiveDebt(\n                    req.game,\n                    req.player,\n                    req.params.playerId,\n                    LedgerType.CreditsSpecialists);\n    \n                return res.status(200).json(newLedger);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        settleCreditsSpecialists: async (req, res, next) => {\n            try {\n                let newLedger = await container.ledgerService.settleDebt(\n                    req.game,\n                    req.player,\n                    req.params.playerId,\n                    LedgerType.CreditsSpecialists);\n    \n                return res.status(200).json(newLedger);\n            } catch (err) {\n                return next(err);\n            }\n        }\n    }\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA2B;AAG3B,IAAO,iBAAQ,CAAC,cAAmC;AAC/C,SAAO;AAAA,IACH,eAAe,OAAO,KAAK,KAAK,SAAS;AACrC,UAAI;AACA,YAAI,SAAS,MAAM,UAAU,cAAc,UAAU,IAAI,QAAQ,yBAAW,OAAO;AAEnF,eAAO,IAAI,OAAO,GAAG,EAAE,KAAK,MAAM;AAAA,MACtC,SAAS,KAAP;AACE,eAAO,KAAK,GAAG;AAAA,MACnB;AAAA,IACJ;AAAA,IACA,gBAAgB,OAAO,KAAK,KAAK,SAAS;AACtC,UAAI;AACA,YAAI,YAAY,MAAM,UAAU,cAAc;AAAA,UAC1C,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI,OAAO;AAAA,UACX,yBAAW;AAAA,QAAO;AAEtB,eAAO,IAAI,OAAO,GAAG,EAAE,KAAK,SAAS;AAAA,MACzC,SAAS,KAAP;AACE,eAAO,KAAK,GAAG;AAAA,MACnB;AAAA,IACJ;AAAA,IACA,eAAe,OAAO,KAAK,KAAK,SAAS;AACrC,UAAI;AACA,YAAI,YAAY,MAAM,UAAU,cAAc;AAAA,UAC1C,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI,OAAO;AAAA,UACX,yBAAW;AAAA,QAAO;AAEtB,eAAO,IAAI,OAAO,GAAG,EAAE,KAAK,SAAS;AAAA,MACzC,SAAS,KAAP;AACE,eAAO,KAAK,GAAG;AAAA,MACnB;AAAA,IACJ;AAAA,IACA,0BAA0B,OAAO,KAAK,KAAK,SAAS;AAChD,UAAI;AACA,YAAI,SAAS,MAAM,UAAU,cAAc,UAAU,IAAI,QAAQ,yBAAW,kBAAkB;AAE9F,eAAO,IAAI,OAAO,GAAG,EAAE,KAAK,MAAM;AAAA,MACtC,SAAS,KAAP;AACE,eAAO,KAAK,GAAG;AAAA,MACnB;AAAA,IACJ;AAAA,IACA,2BAA2B,OAAO,KAAK,KAAK,SAAS;AACjD,UAAI;AACA,YAAI,YAAY,MAAM,UAAU,cAAc;AAAA,UAC1C,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI,OAAO;AAAA,UACX,yBAAW;AAAA,QAAkB;AAEjC,eAAO,IAAI,OAAO,GAAG,EAAE,KAAK,SAAS;AAAA,MACzC,SAAS,KAAP;AACE,eAAO,KAAK,GAAG;AAAA,MACnB;AAAA,IACJ;AAAA,IACA,0BAA0B,OAAO,KAAK,KAAK,SAAS;AAChD,UAAI;AACA,YAAI,YAAY,MAAM,UAAU,cAAc;AAAA,UAC1C,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI,OAAO;AAAA,UACX,yBAAW;AAAA,QAAkB;AAEjC,eAAO,IAAI,OAAO,GAAG,EAAE,KAAK,SAAS;AAAA,MACzC,SAAS,KAAP;AACE,eAAO,KAAK,GAAG;AAAA,MACnB;AAAA,IACJ;AAAA,EACJ;AACJ;",
  "names": []
}
