{
  "version": 3,
  "sources": ["../../../../server/api/controllers/diplomacy.ts"],
  "sourcesContent": ["import { DependencyContainer } from '../../services/types/DependencyContainer';\nconst mongoose = require('mongoose')\n\nexport default (container: DependencyContainer) => {\n    return {\n        list: async (req, res, next) => {\n            try {\n                let diplomaticStatuses = await container.diplomacyService.getDiplomaticStatusToAllPlayers(\n                    req.game,\n                    req.player);\n    \n                return res.status(200).json(diplomaticStatuses);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        detail: async (req, res, next) => {\n            try {\n                let diplomaticStatus = await container.diplomacyService.getDiplomaticStatusToPlayer(\n                    req.game,\n                    req.player._id,\n                    req.params.toPlayerId);\n    \n                return res.status(200).json(diplomaticStatus);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        declareAlly: async (req, res, next) => {\n            try {\n                let newStatus = await container.diplomacyService.declareAlly(\n                    req.game,\n                    req.player._id,\n                    new mongoose.Types.ObjectId(req.params.playerId));\n    \n                await container.broadcastService.gamePlayerDiplomaticStatusChanged(req.player._id, req.params.playerId, newStatus);\n    \n                return res.status(200).json(newStatus);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        declareEnemy: async (req, res, next) => {\n            try {\n                let newStatus = await container.diplomacyService.declareEnemy(\n                    req.game,\n                    req.player._id,\n                    new mongoose.Types.ObjectId(req.params.playerId));\n    \n                await container.broadcastService.gamePlayerDiplomaticStatusChanged(req.player._id, req.params.playerId, newStatus);\n    \n                return res.status(200).json(newStatus);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        declareNeutral: async (req, res, next) => {\n            try {\n                let newStatus = await container.diplomacyService.declareNeutral(\n                    req.game,\n                    req.player._id,\n                    new mongoose.Types.ObjectId(req.params.playerId));\n    \n                await container.broadcastService.gamePlayerDiplomaticStatusChanged(req.player._id, req.params.playerId, newStatus);\n    \n                return res.status(200).json(newStatus);\n            } catch (err) {\n                return next(err);\n            }\n        }\n    }\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,MAAM,WAAW,QAAQ,UAAU;AAEnC,IAAO,oBAAQ,CAAC,cAAmC;AAC/C,SAAO;AAAA,IACH,MAAM,OAAO,KAAK,KAAK,SAAS;AAC5B,UAAI;AACA,YAAI,qBAAqB,MAAM,UAAU,iBAAiB;AAAA,UACtD,IAAI;AAAA,UACJ,IAAI;AAAA,QAAM;AAEd,eAAO,IAAI,OAAO,GAAG,EAAE,KAAK,kBAAkB;AAAA,MAClD,SAAS,KAAP;AACE,eAAO,KAAK,GAAG;AAAA,MACnB;AAAA,IACJ;AAAA,IACA,QAAQ,OAAO,KAAK,KAAK,SAAS;AAC9B,UAAI;AACA,YAAI,mBAAmB,MAAM,UAAU,iBAAiB;AAAA,UACpD,IAAI;AAAA,UACJ,IAAI,OAAO;AAAA,UACX,IAAI,OAAO;AAAA,QAAU;AAEzB,eAAO,IAAI,OAAO,GAAG,EAAE,KAAK,gBAAgB;AAAA,MAChD,SAAS,KAAP;AACE,eAAO,KAAK,GAAG;AAAA,MACnB;AAAA,IACJ;AAAA,IACA,aAAa,OAAO,KAAK,KAAK,SAAS;AACnC,UAAI;AACA,YAAI,YAAY,MAAM,UAAU,iBAAiB;AAAA,UAC7C,IAAI;AAAA,UACJ,IAAI,OAAO;AAAA,UACX,IAAI,SAAS,MAAM,SAAS,IAAI,OAAO,QAAQ;AAAA,QAAC;AAEpD,cAAM,UAAU,iBAAiB,kCAAkC,IAAI,OAAO,KAAK,IAAI,OAAO,UAAU,SAAS;AAEjH,eAAO,IAAI,OAAO,GAAG,EAAE,KAAK,SAAS;AAAA,MACzC,SAAS,KAAP;AACE,eAAO,KAAK,GAAG;AAAA,MACnB;AAAA,IACJ;AAAA,IACA,cAAc,OAAO,KAAK,KAAK,SAAS;AACpC,UAAI;AACA,YAAI,YAAY,MAAM,UAAU,iBAAiB;AAAA,UAC7C,IAAI;AAAA,UACJ,IAAI,OAAO;AAAA,UACX,IAAI,SAAS,MAAM,SAAS,IAAI,OAAO,QAAQ;AAAA,QAAC;AAEpD,cAAM,UAAU,iBAAiB,kCAAkC,IAAI,OAAO,KAAK,IAAI,OAAO,UAAU,SAAS;AAEjH,eAAO,IAAI,OAAO,GAAG,EAAE,KAAK,SAAS;AAAA,MACzC,SAAS,KAAP;AACE,eAAO,KAAK,GAAG;AAAA,MACnB;AAAA,IACJ;AAAA,IACA,gBAAgB,OAAO,KAAK,KAAK,SAAS;AACtC,UAAI;AACA,YAAI,YAAY,MAAM,UAAU,iBAAiB;AAAA,UAC7C,IAAI;AAAA,UACJ,IAAI,OAAO;AAAA,UACX,IAAI,SAAS,MAAM,SAAS,IAAI,OAAO,QAAQ;AAAA,QAAC;AAEpD,cAAM,UAAU,iBAAiB,kCAAkC,IAAI,OAAO,KAAK,IAAI,OAAO,UAAU,SAAS;AAEjH,eAAO,IAAI,OAAO,GAAG,EAAE,KAAK,SAAS;AAAA,MACzC,SAAS,KAAP;AACE,eAAO,KAAK,GAAG;AAAA,MACnB;AAAA,IACJ;AAAA,EACJ;AACJ;",
  "names": []
}
