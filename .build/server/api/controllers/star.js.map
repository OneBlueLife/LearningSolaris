{
  "version": 3,
  "sources": ["../../../../server/api/controllers/star.ts"],
  "sourcesContent": ["import { DependencyContainer } from '../../services/types/DependencyContainer';\nimport { mapToStarAbandonStarRequest, mapToStarBuildCarrierRequest, mapToStarDestroyInfrastructureRequest, mapToStarSetBulkIgnoreAllStatusRequest, mapToStarToggleBulkIgnoreStatusRequest, mapToStarUpgradeInfrastructureBulkRequest, mapToStarUpgradeInfrastructureRequest, StarUpgradeInfrastructureRequest } from '../requests/star';\n\nexport default (container: DependencyContainer) => {\n    return {\n        upgradeEconomy: async (req, res, next) => {\n            try {\n                const reqObj = mapToStarUpgradeInfrastructureRequest(req.body);\n\n                let report = await container.starUpgradeService.upgradeEconomy(\n                    req.game,\n                    req.player,\n                    reqObj.starId);\n    \n                return res.status(200).json(report);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        upgradeIndustry: async (req, res, next) => {\n            try {\n                const reqObj = mapToStarUpgradeInfrastructureRequest(req.body);\n\n                let report = await container.starUpgradeService.upgradeIndustry(\n                    req.game,\n                    req.player,\n                    reqObj.starId);\n    \n                return res.status(200).json(report);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        upgradeScience: async (req, res, next) => {\n            try {\n                const reqObj = mapToStarUpgradeInfrastructureRequest(req.body);\n\n                let report = await container.starUpgradeService.upgradeScience(\n                    req.game,\n                    req.player,\n                    reqObj.starId);\n    \n                return res.status(200).json(report);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        upgradeBulk: async (req, res, next) => {\n            try {\n                const reqObj = mapToStarUpgradeInfrastructureBulkRequest(req.body);\n                \n                let summary = await container.starUpgradeService.upgradeBulk(\n                    req.game,\n                    req.player,\n                    reqObj.upgradeStrategy,\n                    reqObj.infrastructure,\n                    +reqObj.amount);\n    \n                return res.status(200).json(summary);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        upgradeBulkCheck: async (req, res, next) => {\n            try {\n                const reqObj = mapToStarUpgradeInfrastructureBulkRequest(req.body);\n                \n                let summary = await container.starUpgradeService.generateUpgradeBulkReport(\n                    req.game,\n                    req.player,\n                    reqObj.upgradeStrategy,\n                    reqObj.infrastructure,\n                    +reqObj.amount);\n    \n                return res.status(200).json(summary);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        buildWarpGate: async (req, res, next) => {\n            try {\n                const reqObj: StarUpgradeInfrastructureRequest = req.body;\n                \n                let report = await container.starUpgradeService.buildWarpGate(\n                    req.game,\n                    req.player,\n                    reqObj.starId);\n    \n                return res.status(200).json(report);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        destroyWarpGate: async (req, res, next) => {\n            try {\n                const reqObj = mapToStarDestroyInfrastructureRequest(req.body);\n                \n                await container.starUpgradeService.destroyWarpGate(\n                    req.game,\n                    req.player,\n                    reqObj.starId);\n    \n                return res.sendStatus(200);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        buildCarrier: async (req, res, next) => {\n            try {\n                const reqObj = mapToStarBuildCarrierRequest(req.body);\n        \n                let report = await container.starUpgradeService.buildCarrier(\n                    req.game,\n                    req.player,\n                    reqObj.starId,\n                    reqObj.ships);\n    \n                return res.status(200).json(report);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        garrisonAllShips: async (req, res, next) => {\n            try {\n                let report = await container.shipTransferService.garrisonAllShips(\n                    req.game,\n                    req.player,\n                    req.params.starId);\n    \n                return res.status(200).json(report);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        distributeAllShips: async (req, res, next) => {\n            try {                \n                let report = await container.shipTransferService.distributeAllShips(\n                    req.game,\n                    req.player,\n                    req.params.starId);\n    \n                return res.status(200).json(report);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        abandon: async (req, res, next) => {\n            try {\n                const reqObj = mapToStarAbandonStarRequest(req.body);\n                \n                await container.starService.abandonStar(\n                    req.game,\n                    req.player,\n                    reqObj.starId);\n    \n                return res.sendStatus(200);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        toggleBulkIgnore: async (req, res, next) => {\n            try {\n                const reqObj = mapToStarToggleBulkIgnoreStatusRequest(req.body);\n\n                await container.starService.toggleIgnoreBulkUpgrade(\n                    req.game,\n                    req.player,\n                    reqObj.starId,\n                    reqObj.infrastructureType);\n    \n                return res.sendStatus(200);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        toggleBulkIgnoreAll: async (req, res, next) => {\n            try {\n                const reqObj = mapToStarSetBulkIgnoreAllStatusRequest(req.body);\n                \n                await container.starService.toggleIgnoreBulkUpgradeAll(\n                    req.game,\n                    req.player,\n                    reqObj.starId,\n                    reqObj.ignoreStatus);\n    \n                return res.sendStatus(200);\n            } catch (err) {\n                return next(err);\n            }\n        }\n    }\n};"],
  "mappings": "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",
  "names": []
}
