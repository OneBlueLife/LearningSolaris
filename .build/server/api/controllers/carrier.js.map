{
  "version": 3,
  "sources": ["../../../../server/api/controllers/carrier.ts"],
  "sourcesContent": ["import { DependencyContainer } from '../../services/types/DependencyContainer';\nimport { mapToCarrierCalculateCombatRequest, mapToCarrierLoopWaypointsRequest, mapToCarrierRenameCarrierRequest, mapToCarrierSaveWaypointsRequest, mapToCarrierTransferShipsRequest } from '../requests/carrier';\n\nexport default (container: DependencyContainer) => {\n    return {\n        saveWaypoints: async (req, res, next) => {\n            try {\n                const reqObj = mapToCarrierSaveWaypointsRequest(req.body);\n                \n                let report = await container.waypointService.saveWaypoints(\n                    req.game,\n                    req.player,\n                    req.params.carrierId,\n                    reqObj.waypoints,\n                    reqObj.looped);\n    \n                return res.status(200).json(report);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        loopWaypoints: async (req, res, next) => {    \n            try {\n                const reqObj = mapToCarrierLoopWaypointsRequest(req.body);\n                \n                await container.waypointService.loopWaypoints(\n                    req.game,\n                    req.player,\n                    req.params.carrierId,\n                    reqObj.loop);\n    \n                return res.sendStatus(200);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        transferShips: async (req, res, next) => {    \n            try {\n                const reqObj = mapToCarrierTransferShipsRequest(req.body);\n                \n                await container.shipTransferService.transfer(\n                    req.game,\n                    req.player,\n                    req.params.carrierId,\n                    reqObj.carrierShips,\n                    reqObj.starId,\n                    reqObj.starShips);\n    \n                return res.sendStatus(200);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        gift: async (req, res, next) => {\n            try {\n                await container.carrierGiftService.convertToGift(\n                    req.game,\n                    req.player,\n                    req.params.carrierId);\n    \n                return res.sendStatus(200);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        rename: async (req, res, next) => {\n            try {\n                const reqObj = mapToCarrierRenameCarrierRequest(req.body);\n                \n                await container.carrierService.rename(\n                    req.game,\n                    req.player,\n                    req.params.carrierId,\n                    reqObj.name);\n    \n                return res.sendStatus(200);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        scuttle: async (req, res, next) => {\n            try {\n                await container.carrierService.scuttle(\n                    req.game,\n                    req.player,\n                    req.params.carrierId);\n    \n                return res.sendStatus(200);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        calculateCombat: (req, res, next) => {\n            try {\n                const reqObj = mapToCarrierCalculateCombatRequest(req.body);\n    \n                let result = container.combatService.calculate(\n                    reqObj.defender,\n                    reqObj.attacker,\n                    reqObj.isTurnBased,\n                    true);\n    \n                return res.status(200).json(result);\n            } catch (err) {\n                return next(err);\n            }\n        }\n    }\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,qBAA2L;AAE3L,IAAO,kBAAQ,CAAC,cAAmC;AAC/C,SAAO;AAAA,IACH,eAAe,OAAO,KAAK,KAAK,SAAS;AACrC,UAAI;AACA,cAAM,aAAS,iDAAiC,IAAI,IAAI;AAExD,YAAI,SAAS,MAAM,UAAU,gBAAgB;AAAA,UACzC,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI,OAAO;AAAA,UACX,OAAO;AAAA,UACP,OAAO;AAAA,QAAM;AAEjB,eAAO,IAAI,OAAO,GAAG,EAAE,KAAK,MAAM;AAAA,MACtC,SAAS,KAAP;AACE,eAAO,KAAK,GAAG;AAAA,MACnB;AAAA,IACJ;AAAA,IACA,eAAe,OAAO,KAAK,KAAK,SAAS;AACrC,UAAI;AACA,cAAM,aAAS,iDAAiC,IAAI,IAAI;AAExD,cAAM,UAAU,gBAAgB;AAAA,UAC5B,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI,OAAO;AAAA,UACX,OAAO;AAAA,QAAI;AAEf,eAAO,IAAI,WAAW,GAAG;AAAA,MAC7B,SAAS,KAAP;AACE,eAAO,KAAK,GAAG;AAAA,MACnB;AAAA,IACJ;AAAA,IACA,eAAe,OAAO,KAAK,KAAK,SAAS;AACrC,UAAI;AACA,cAAM,aAAS,iDAAiC,IAAI,IAAI;AAExD,cAAM,UAAU,oBAAoB;AAAA,UAChC,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI,OAAO;AAAA,UACX,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,QAAS;AAEpB,eAAO,IAAI,WAAW,GAAG;AAAA,MAC7B,SAAS,KAAP;AACE,eAAO,KAAK,GAAG;AAAA,MACnB;AAAA,IACJ;AAAA,IACA,MAAM,OAAO,KAAK,KAAK,SAAS;AAC5B,UAAI;AACA,cAAM,UAAU,mBAAmB;AAAA,UAC/B,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI,OAAO;AAAA,QAAS;AAExB,eAAO,IAAI,WAAW,GAAG;AAAA,MAC7B,SAAS,KAAP;AACE,eAAO,KAAK,GAAG;AAAA,MACnB;AAAA,IACJ;AAAA,IACA,QAAQ,OAAO,KAAK,KAAK,SAAS;AAC9B,UAAI;AACA,cAAM,aAAS,iDAAiC,IAAI,IAAI;AAExD,cAAM,UAAU,eAAe;AAAA,UAC3B,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI,OAAO;AAAA,UACX,OAAO;AAAA,QAAI;AAEf,eAAO,IAAI,WAAW,GAAG;AAAA,MAC7B,SAAS,KAAP;AACE,eAAO,KAAK,GAAG;AAAA,MACnB;AAAA,IACJ;AAAA,IACA,SAAS,OAAO,KAAK,KAAK,SAAS;AAC/B,UAAI;AACA,cAAM,UAAU,eAAe;AAAA,UAC3B,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,IAAI,OAAO;AAAA,QAAS;AAExB,eAAO,IAAI,WAAW,GAAG;AAAA,MAC7B,SAAS,KAAP;AACE,eAAO,KAAK,GAAG;AAAA,MACnB;AAAA,IACJ;AAAA,IACA,iBAAiB,CAAC,KAAK,KAAK,SAAS;AACjC,UAAI;AACA,cAAM,aAAS,mDAAmC,IAAI,IAAI;AAE1D,YAAI,SAAS,UAAU,cAAc;AAAA,UACjC,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,UACP;AAAA,QAAI;AAER,eAAO,IAAI,OAAO,GAAG,EAAE,KAAK,MAAM;AAAA,MACtC,SAAS,KAAP;AACE,eAAO,KAAK,GAAG;AAAA,MACnB;AAAA,IACJ;AAAA,EACJ;AACJ;",
  "names": []
}
