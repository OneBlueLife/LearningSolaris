{
  "version": 3,
  "sources": ["../../../../server/api/controllers/guild.ts"],
  "sourcesContent": ["import { DependencyContainer } from '../../services/types/DependencyContainer';\nimport { mapToGuildCreateGuildRequest, mapToGuildInviteUserRequest, mapToGuildRenameGuildRequest } from '../requests/guild';\n\nexport default (container: DependencyContainer) => {\n    return {\n        list: async (req, res, next) => {\n            try {\n                let result = await container.guildService.list();\n                    \n                return res.status(200).json(result);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        detailMine: async (req, res, next) => {\n            try {\n                let result = await container.guildService.detailMyGuild(req.session.userId, true);\n                    \n                return res.status(200).json(result);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        listLeaderboard: async (req, res, next) => {\n            try {\n                let limit = +req.query.limit || null;\n                let sortingKey = req.query.sortingKey || null;\n                let result = await container.guildService.getLeaderboard(limit, sortingKey);\n                    \n                return res.status(200).json(result);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        listMyInvites: async (req, res, next) => {\n            try {\n                let result = await container.guildService.listInvitations(req.session.userId);\n                    \n                return res.status(200).json(result);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        listMyApplications: async (req, res, next) => {\n            try {\n                let result = await container.guildService.listApplications(req.session.userId);\n                    \n                return res.status(200).json(result);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        detail: async (req, res, next) => {\n            try {\n                const result = await container.guildService.detailWithUserInfo(req.params.guildId, false);\n    \n                return res.status(200).json(result);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        create: async (req, res, next) => {\n            try {\n                const reqObj = mapToGuildCreateGuildRequest(req.body);\n\n                let result = await container.guildService.create(req.session.userId, reqObj.name, reqObj.tag);\n                    \n                return res.status(201).json(result);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        rename: async (req, res, next) => {\n            try {\n                const reqObj = mapToGuildRenameGuildRequest(req.body);\n                \n                await container.guildService.rename(req.session.userId, reqObj.name, reqObj.tag);\n                    \n                return res.sendStatus(200);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        delete: async (req, res, next) => {\n            try {\n                await container.guildService.delete(req.session.userId, req.params.guildId);\n                    \n                return res.sendStatus(200);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        invite: async (req, res, next) => {\n            try {\n                const reqObj = mapToGuildInviteUserRequest(req.body);\n                \n                let result = await container.guildService.invite(reqObj.username, req.params.guildId, req.session.userId);\n                    \n                return res.status(200).json(result);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        uninvite: async (req, res, next) => {\n            try {\n                await container.guildService.uninvite(req.params.userId, req.params.guildId, req.session.userId);\n                    \n                return res.sendStatus(200);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        acceptInviteForApplicant: async (req, res, next) => {\n            try {\n                await container.guildService.accept(req.params.userId, req.params.guildId, req.session.userId);\n                    \n                return res.sendStatus(200);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        acceptInvite: async (req, res, next) => {\n            try {\n                await container.guildService.join(req.session.userId, req.params.guildId);\n                    \n                return res.sendStatus(200);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        declineInvite: async (req, res, next) => {\n            try {\n                await container.guildService.decline(req.session.userId, req.params.guildId);\n                    \n                return res.sendStatus(200);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        apply: async (req, res, next) => {\n            try {\n                await container.guildService.apply(req.session.userId, req.params.guildId);\n                    \n                return res.sendStatus(200);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        withdraw: async (req, res, next) => {\n            try {\n                await container.guildService.withdraw(req.session.userId, req.params.guildId);\n                    \n                return res.sendStatus(200);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        reject: async (req, res, next) => {\n            try {\n                await container.guildService.reject(req.params.userId, req.params.guildId, req.session.userId);\n                    \n                return res.sendStatus(200);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        leave: async (req, res, next) => {\n            try {\n                await container.guildService.leave(req.session.userId, req.params.guildId);\n                    \n                return res.sendStatus(200);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        promote: async (req, res, next) => {\n            try {\n                await container.guildService.promote(req.params.userId, req.params.guildId, req.session.userId);\n                    \n                return res.sendStatus(200);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        demote: async (req, res, next) => {\n            try {\n                await container.guildService.demote(req.params.userId, req.params.guildId, req.session.userId);\n                    \n                return res.sendStatus(200);\n            } catch (err) {\n                return next(err);\n            }\n        },\n        kick: async (req, res, next) => {\n            try {\n                await container.guildService.kick(req.params.userId, req.params.guildId, req.session.userId);\n                    \n                return res.sendStatus(200);\n            } catch (err) {\n                return next(err);\n            }\n        }\n    }\n};\n"],
  "mappings": "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",
  "names": []
}
