{
  "version": 3,
  "sources": ["../../../../server/api/requests/report.ts"],
  "sourcesContent": ["import ValidationError from \"../../errors/validation\";\nimport { DBObjectId } from \"../../services/types/DBObjectId\";\nimport { keyHasBooleanValue, keyHasObjectValue, keyHasStringValue } from \"./helpers\";\n\nexport interface ReportCreateReportRequest {\n    playerId: DBObjectId;\n    reasons: {\n        abuse: boolean;\n        spamming: boolean;\n        multiboxing: boolean;\n        inappropriateAlias: boolean;\n    }\n};\n\nexport const mapToReportCreateReportRequest = (body: any): ReportCreateReportRequest => {\n    let errors: string[] = [];\n\n    if (!keyHasStringValue(body, 'playerId')) {\n        errors.push('Player ID is required.');\n    }\n\n    if (!keyHasObjectValue(body, 'reasons')) {\n        errors.push('Reasons is required.');\n    }\n\n    if (body.reasons) {\n        if (!keyHasBooleanValue(body.reasons, 'abuse')) {\n            errors.push('Abuse reason is required.');\n        }\n\n        if (!keyHasBooleanValue(body.reasons, 'spamming')) {\n            errors.push('Spamming reason is required.');\n        }\n        \n        if (!keyHasBooleanValue(body.reasons, 'multiboxing')) {\n            errors.push('Multiboxing reason is required.');\n        }\n        \n        if (!keyHasBooleanValue(body.reasons, 'inappropriateAlias')) {\n            errors.push('Inappropriate reason is required.');\n        }\n    }\n\n    if (errors.length) {\n        throw new ValidationError(errors);\n    }\n\n    return {\n        playerId: body.playerId,\n        reasons: body.reasons\n    }\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA4B;AAE5B,qBAAyE;AAUxE;AAEM,MAAM,iCAAiC,CAAC,SAAyC;AACpF,MAAI,SAAmB,CAAC;AAExB,MAAI,KAAC,kCAAkB,MAAM,UAAU,GAAG;AACtC,WAAO,KAAK,wBAAwB;AAAA,EACxC;AAEA,MAAI,KAAC,kCAAkB,MAAM,SAAS,GAAG;AACrC,WAAO,KAAK,sBAAsB;AAAA,EACtC;AAEA,MAAI,KAAK,SAAS;AACd,QAAI,KAAC,mCAAmB,KAAK,SAAS,OAAO,GAAG;AAC5C,aAAO,KAAK,2BAA2B;AAAA,IAC3C;AAEA,QAAI,KAAC,mCAAmB,KAAK,SAAS,UAAU,GAAG;AAC/C,aAAO,KAAK,8BAA8B;AAAA,IAC9C;AAEA,QAAI,KAAC,mCAAmB,KAAK,SAAS,aAAa,GAAG;AAClD,aAAO,KAAK,iCAAiC;AAAA,IACjD;AAEA,QAAI,KAAC,mCAAmB,KAAK,SAAS,oBAAoB,GAAG;AACzD,aAAO,KAAK,mCAAmC;AAAA,IACnD;AAAA,EACJ;AAEA,MAAI,OAAO,QAAQ;AACf,UAAM,IAAI,kBAAAA,QAAgB,MAAM;AAAA,EACpC;AAEA,SAAO;AAAA,IACH,UAAU,KAAK;AAAA,IACf,SAAS,KAAK;AAAA,EAClB;AACJ;",
  "names": ["ValidationError"]
}
