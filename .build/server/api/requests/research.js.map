{
  "version": 3,
  "sources": ["../../../../server/api/requests/research.ts"],
  "sourcesContent": ["import ValidationError from \"../../errors/validation\";\nimport { ResearchType, ResearchTypeNotRandom } from \"../../services/types/Player\";\nimport { keyHasStringValue } from \"./helpers\";\n\nexport interface ResearchUpdateNowRequest {\n    preference: ResearchTypeNotRandom;\n};\n\nexport const mapToResearchUpdateNowRequest = (body: any): ResearchUpdateNowRequest => {\n    let errors: string[] = [];\n\n    if (!keyHasStringValue(body, 'preference')) {\n        errors.push('Preference is required.');\n    }\n\n    if (errors.length) {\n        throw new ValidationError(errors);\n    }\n\n    let preference = body.preference.toLowerCase().trim() as ResearchTypeNotRandom;\n\n    return {\n        preference\n    }\n};\n\nexport interface ResearchUpdateNextRequest {\n    preference: ResearchType;\n};\n\nexport const mapToResearchUpdateNextRequest = (body: any): ResearchUpdateNextRequest => {\n    let errors: string[] = [];\n\n    if (!keyHasStringValue(body, 'preference')) {\n        errors.push('Preference is required.');\n    }\n\n    if (errors.length) {\n        throw new ValidationError(errors);\n    }\n    \n    let preference = body.preference.toLowerCase().trim() as ResearchType;\n\n    return {\n        preference\n    }\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA4B;AAE5B,qBAAkC;AAIjC;AAEM,MAAM,gCAAgC,CAAC,SAAwC;AAClF,MAAI,SAAmB,CAAC;AAExB,MAAI,KAAC,kCAAkB,MAAM,YAAY,GAAG;AACxC,WAAO,KAAK,yBAAyB;AAAA,EACzC;AAEA,MAAI,OAAO,QAAQ;AACf,UAAM,IAAI,kBAAAA,QAAgB,MAAM;AAAA,EACpC;AAEA,MAAI,aAAa,KAAK,WAAW,YAAY,EAAE,KAAK;AAEpD,SAAO;AAAA,IACH;AAAA,EACJ;AACJ;AAIC;AAEM,MAAM,iCAAiC,CAAC,SAAyC;AACpF,MAAI,SAAmB,CAAC;AAExB,MAAI,KAAC,kCAAkB,MAAM,YAAY,GAAG;AACxC,WAAO,KAAK,yBAAyB;AAAA,EACzC;AAEA,MAAI,OAAO,QAAQ;AACf,UAAM,IAAI,kBAAAA,QAAgB,MAAM;AAAA,EACpC;AAEA,MAAI,aAAa,KAAK,WAAW,YAAY,EAAE,KAAK;AAEpD,SAAO;AAAA,IACH;AAAA,EACJ;AACJ;",
  "names": ["ValidationError"]
}
