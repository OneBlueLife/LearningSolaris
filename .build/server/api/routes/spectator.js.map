{
  "version": 3,
  "sources": ["../../../../server/api/routes/spectator.ts"],
  "sourcesContent": ["import { Router } from \"express\";\nimport { ExpressJoiInstance } from \"express-joi-validation\";\nimport { DependencyContainer } from \"../../services/types/DependencyContainer\";\nimport SpectatorController from '../controllers/spectator';\nimport { MiddlewareContainer } from \"../middleware\";\nimport { spectatorInviteSpectatorRequestSchema } from \"../requests/spectator\";\n\nexport default (router: Router, mw: MiddlewareContainer, validator: ExpressJoiInstance, container: DependencyContainer) => {\n    const controller = SpectatorController(container);\n\n    router.get('/api/game/:gameId/spectators',\n        mw.auth.authenticate(),\n        mw.game.loadGame({\n            lean: true,\n            settings: true,\n            state: true,\n            galaxy: true,\n            constants: false\n        }),\n        mw.game.validateGameState({\n            isUnlocked: true,\n            isNotFinished: true\n        }),\n        mw.player.loadPlayer,\n        controller.list,\n        mw.core.handleError);\n\n    router.put('/api/game/:gameId/spectators/invite',\n        mw.auth.authenticate(),\n        validator.body(spectatorInviteSpectatorRequestSchema),\n        mw.game.loadGame({\n            lean: true,\n            settings: true,\n            state: true,\n            galaxy: true,\n            constants: false\n        }),\n        mw.game.validateGameState({\n            isUnlocked: true,\n            isNotFinished: true\n        }),\n        mw.player.loadPlayer,\n        mw.player.validatePlayerState({ isPlayerUndefeated: true }),\n        controller.invite,\n        mw.core.handleError);\n\n    router.put('/api/game/:gameId/spectators/uninvite/:userId',\n        mw.auth.authenticate(),\n        mw.game.loadGame({\n            lean: true,\n            settings: true,\n            state: true,\n            galaxy: true,\n            constants: false\n        }),\n        mw.game.validateGameState({\n            isUnlocked: true,\n            isNotFinished: true\n        }),\n        mw.player.loadPlayer,\n        mw.player.validatePlayerState({ isPlayerUndefeated: true }),\n        controller.uninvite,\n        mw.core.handleError);\n\n    router.delete('/api/game/:gameId/spectators',\n        mw.auth.authenticate(),\n        mw.game.loadGame({\n            lean: true,\n            settings: true,\n            state: true,\n            galaxy: true,\n            constants: false\n        }),\n        mw.game.validateGameState({\n            isUnlocked: true,\n            isNotFinished: true\n        }),\n        mw.player.loadPlayer,\n        mw.player.validatePlayerState({ isPlayerUndefeated: true }),\n        controller.clear,\n        mw.core.handleError);\n\n    return router;\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,uBAAgC;AAEhC,IAAAA,oBAAsD;AAEtD,IAAO,oBAAQ,CAAC,QAAgB,IAAyB,WAA+B,cAAmC;AACvH,QAAM,iBAAa,iBAAAC,SAAoB,SAAS;AAEhD,SAAO;AAAA,IAAI;AAAA,IACP,GAAG,KAAK,aAAa;AAAA,IACrB,GAAG,KAAK,SAAS;AAAA,MACb,MAAM;AAAA,MACN,UAAU;AAAA,MACV,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,WAAW;AAAA,IACf,CAAC;AAAA,IACD,GAAG,KAAK,kBAAkB;AAAA,MACtB,YAAY;AAAA,MACZ,eAAe;AAAA,IACnB,CAAC;AAAA,IACD,GAAG,OAAO;AAAA,IACV,WAAW;AAAA,IACX,GAAG,KAAK;AAAA,EAAW;AAEvB,SAAO;AAAA,IAAI;AAAA,IACP,GAAG,KAAK,aAAa;AAAA,IACrB,UAAU,KAAK,uDAAqC;AAAA,IACpD,GAAG,KAAK,SAAS;AAAA,MACb,MAAM;AAAA,MACN,UAAU;AAAA,MACV,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,WAAW;AAAA,IACf,CAAC;AAAA,IACD,GAAG,KAAK,kBAAkB;AAAA,MACtB,YAAY;AAAA,MACZ,eAAe;AAAA,IACnB,CAAC;AAAA,IACD,GAAG,OAAO;AAAA,IACV,GAAG,OAAO,oBAAoB,EAAE,oBAAoB,KAAK,CAAC;AAAA,IAC1D,WAAW;AAAA,IACX,GAAG,KAAK;AAAA,EAAW;AAEvB,SAAO;AAAA,IAAI;AAAA,IACP,GAAG,KAAK,aAAa;AAAA,IACrB,GAAG,KAAK,SAAS;AAAA,MACb,MAAM;AAAA,MACN,UAAU;AAAA,MACV,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,WAAW;AAAA,IACf,CAAC;AAAA,IACD,GAAG,KAAK,kBAAkB;AAAA,MACtB,YAAY;AAAA,MACZ,eAAe;AAAA,IACnB,CAAC;AAAA,IACD,GAAG,OAAO;AAAA,IACV,GAAG,OAAO,oBAAoB,EAAE,oBAAoB,KAAK,CAAC;AAAA,IAC1D,WAAW;AAAA,IACX,GAAG,KAAK;AAAA,EAAW;AAEvB,SAAO;AAAA,IAAO;AAAA,IACV,GAAG,KAAK,aAAa;AAAA,IACrB,GAAG,KAAK,SAAS;AAAA,MACb,MAAM;AAAA,MACN,UAAU;AAAA,MACV,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,WAAW;AAAA,IACf,CAAC;AAAA,IACD,GAAG,KAAK,kBAAkB;AAAA,MACtB,YAAY;AAAA,MACZ,eAAe;AAAA,IACnB,CAAC;AAAA,IACD,GAAG,OAAO;AAAA,IACV,GAAG,OAAO,oBAAoB,EAAE,oBAAoB,KAAK,CAAC;AAAA,IAC1D,WAAW;AAAA,IACX,GAAG,KAAK;AAAA,EAAW;AAEvB,SAAO;AACX;",
  "names": ["import_spectator", "SpectatorController"]
}
