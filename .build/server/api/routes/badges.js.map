{
  "version": 3,
  "sources": ["../../../../server/api/routes/badges.ts"],
  "sourcesContent": ["import { Router } from \"express\";\nimport { ExpressJoiInstance } from \"express-joi-validation\";\nimport { DependencyContainer } from \"../../services/types/DependencyContainer\";\nimport BadgeController from '../controllers/badges';\nimport { MiddlewareContainer } from \"../middleware\";\nimport { badgesPurchaseBadgeRequestSchema } from \"../requests/badges\";\n\nexport default (router: Router, mw: MiddlewareContainer, validator: ExpressJoiInstance, container: DependencyContainer) => {\n    const controller = BadgeController(container);\n\n    router.get('/api/badges',\n        mw.auth.authenticate(),\n        controller.listAll,\n        mw.core.handleError);\n\n    router.get('/api/badges/user/:userId',\n        mw.auth.authenticate(),\n        controller.listForUser,\n        mw.core.handleError);\n\n    router.post('/api/badges/game/:gameId/player/:playerId',\n        mw.auth.authenticate(),\n        validator.body(badgesPurchaseBadgeRequestSchema),\n        mw.game.loadGame({\n            lean: true,\n            state: true,\n            'galaxy.players': true\n        }),\n        controller.purchaseForPlayer,\n        mw.core.handleError);\n\n    router.post('/api/badges/user/:userId',\n        mw.auth.authenticate(),\n        validator.body(badgesPurchaseBadgeRequestSchema),\n        controller.purchaseForUser,\n        mw.core.handleError);\n\n    router.get('/api/badges/game/:gameId/player/:playerId',\n        mw.auth.authenticate(),\n        mw.game.loadGame({\n            lean: true,\n            state: true,\n            settings: true,\n            'galaxy.players': true\n        }),\n        controller.listForPlayer,\n        mw.core.handleError);\n\n    return router;\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,oBAA4B;AAE5B,IAAAA,iBAAiD;AAEjD,IAAO,iBAAQ,CAAC,QAAgB,IAAyB,WAA+B,cAAmC;AACvH,QAAM,iBAAa,cAAAC,SAAgB,SAAS;AAE5C,SAAO;AAAA,IAAI;AAAA,IACP,GAAG,KAAK,aAAa;AAAA,IACrB,WAAW;AAAA,IACX,GAAG,KAAK;AAAA,EAAW;AAEvB,SAAO;AAAA,IAAI;AAAA,IACP,GAAG,KAAK,aAAa;AAAA,IACrB,WAAW;AAAA,IACX,GAAG,KAAK;AAAA,EAAW;AAEvB,SAAO;AAAA,IAAK;AAAA,IACR,GAAG,KAAK,aAAa;AAAA,IACrB,UAAU,KAAK,+CAAgC;AAAA,IAC/C,GAAG,KAAK,SAAS;AAAA,MACb,MAAM;AAAA,MACN,OAAO;AAAA,MACP,kBAAkB;AAAA,IACtB,CAAC;AAAA,IACD,WAAW;AAAA,IACX,GAAG,KAAK;AAAA,EAAW;AAEvB,SAAO;AAAA,IAAK;AAAA,IACR,GAAG,KAAK,aAAa;AAAA,IACrB,UAAU,KAAK,+CAAgC;AAAA,IAC/C,WAAW;AAAA,IACX,GAAG,KAAK;AAAA,EAAW;AAEvB,SAAO;AAAA,IAAI;AAAA,IACP,GAAG,KAAK,aAAa;AAAA,IACrB,GAAG,KAAK,SAAS;AAAA,MACb,MAAM;AAAA,MACN,OAAO;AAAA,MACP,UAAU;AAAA,MACV,kBAAkB;AAAA,IACtB,CAAC;AAAA,IACD,WAAW;AAAA,IACX,GAAG,KAAK;AAAA,EAAW;AAEvB,SAAO;AACX;",
  "names": ["import_badges", "BadgeController"]
}
