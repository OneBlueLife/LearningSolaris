{
  "version": 3,
  "sources": ["../../../../server/api/routes/admin.ts"],
  "sourcesContent": ["import { Router } from \"express\";\nimport { ExpressJoiInstance } from \"express-joi-validation\";\nimport { DependencyContainer } from \"../../services/types/DependencyContainer\";\nimport AdminController from '../controllers/admin';\nimport { MiddlewareContainer } from \"../middleware\";\nimport { adminSetGameFeaturedRequestSchema, adminSetGameTimeMachineRequestSchema, adminSetUserCreditsRequestSchema, adminSetUserRoleRequestSchema } from \"../requests/admin\";\n\nexport default (router: Router, mw: MiddlewareContainer, validator: ExpressJoiInstance, container: DependencyContainer) => {\n    const controller = AdminController(container);\n    \n    router.get('/api/admin/insights',\n        mw.auth.authenticate({ admin: true }),\n        controller.getInsights,\n        mw.core.handleError);\n    \n    router.get('/api/admin/user',\n        mw.auth.authenticate({ communityManager: true }),\n        controller.listUsers,\n        mw.core.handleError);\n\n    router.get('/api/admin/passwordresets',\n        mw.auth.authenticate({ admin: true }),\n        controller.listPasswordResets,\n        mw.core.handleError);\n\n    router.get('/api/admin/reports',\n        mw.auth.authenticate({ admin: true }),\n        controller.listReports,\n        mw.core.handleError);\n\n    router.patch('/api/admin/reports/:reportId/action',\n        mw.auth.authenticate({ admin: true }),\n        controller.actionReport,\n        mw.core.handleError);\n\n    router.patch('/api/admin/user/:userId/contributor',\n        mw.auth.authenticate({ admin: true }),\n        validator.body(adminSetUserRoleRequestSchema),\n        controller.setRoleContributor,\n        mw.core.handleError);\n        \n    router.patch('/api/admin/user/:userId/developer',\n        mw.auth.authenticate({ admin: true }),\n        validator.body(adminSetUserRoleRequestSchema),\n        controller.setRoleDeveloper,\n        mw.core.handleError);\n\n    router.patch('/api/admin/user/:userId/communityManager',\n        mw.auth.authenticate({ admin: true }),\n        validator.body(adminSetUserRoleRequestSchema),\n        controller.setRoleCommunityManager,\n        mw.core.handleError);\n\n    router.patch('/api/admin/user/:userId/gameMaster',\n        mw.auth.authenticate({ admin: true }),\n        validator.body(adminSetUserRoleRequestSchema),\n        controller.setRoleGameMaster,\n        mw.core.handleError);\n\n    router.patch('/api/admin/user/:userId/credits',\n        mw.auth.authenticate({ admin: true }),\n        validator.body(adminSetUserCreditsRequestSchema),\n        controller.setCredits,\n        mw.core.handleError);\n\n    router.patch('/api/admin/user/:userId/ban',\n        mw.auth.authenticate({ admin: true }),\n        controller.banUser,\n        mw.core.handleError);\n\n    router.patch('/api/admin/user/:userId/unban',\n        mw.auth.authenticate({ admin: true }),\n        controller.unbanUser,\n        mw.core.handleError);\n\n    router.patch('/api/admin/user/:userId/resetAchievements',\n        mw.auth.authenticate({ admin: true }),\n        controller.resetAchievements,\n        mw.core.handleError);\n\n    router.patch('/api/admin/user/:userId/promoteToEstablishedPlayer',\n        mw.auth.authenticate({ communityManager: true }),\n        controller.promoteToEstablishedPlayer,\n        mw.core.handleError);\n\n    router.post('/api/admin/user/:userId/impersonate',\n        mw.auth.authenticate({ admin: true }),\n        controller.impersonate,\n        mw.core.handleError);\n\n    router.get('/api/admin/game',\n        mw.auth.authenticate({ subAdmin: true }),\n        controller.listGames,\n        mw.core.handleError);\n\n    router.patch('/api/admin/game/:gameId/featured',\n        mw.auth.authenticate({ subAdmin: true }),\n        validator.body(adminSetGameFeaturedRequestSchema),\n        controller.setGameFeatured,\n        mw.core.handleError);\n\n    router.patch('/api/admin/game/:gameId/timeMachine',\n        mw.auth.authenticate({ admin: true }),\n        validator.body(adminSetGameTimeMachineRequestSchema),\n        controller.setGameTimeMachine,\n        mw.core.handleError);\n\n    router.patch('/api/admin/game/:gameId/finish',\n        mw.auth.authenticate({ admin: true }),\n        mw.game.loadGame({\n            lean: true,\n            settings: true,\n            state: true,\n            'galaxy.players': true\n        }),\n        mw.game.validateGameState({\n            isUnlocked: true,\n            isInProgress: true\n        }),\n        controller.forceEndGame,\n        mw.core.handleError);\n\n    return router;\n}"],
  "mappings": "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",
  "names": ["import_admin", "AdminController"]
}
