{
  "version": 3,
  "sources": ["../../../../server/api/routes/events.ts"],
  "sourcesContent": ["import { Router } from \"express\";\nimport { ExpressJoiInstance } from \"express-joi-validation\";\nimport { DependencyContainer } from \"../../services/types/DependencyContainer\";\nimport EventController from '../controllers/event';\nimport { MiddlewareContainer } from \"../middleware\";\n\nexport default (router: Router, mw: MiddlewareContainer, validator: ExpressJoiInstance, container: DependencyContainer) => {\n    const controller = EventController(container);\n\n    router.get('/api/game/:gameId/events',\n        mw.auth.authenticate(),\n        mw.game.loadGame({\n            lean: true,\n            settings: true,\n            state: true,\n            galaxy: true,\n            constants: true\n        }),\n        mw.player.loadPlayer,\n        controller.list,\n        mw.core.handleError);\n\n    router.patch('/api/game/:gameId/events/markAsRead',\n        mw.auth.authenticate(),\n        mw.game.loadGame({\n            lean: true,\n            settings: true,\n            state: true,\n            galaxy: true,\n            constants: true\n        }),\n        mw.game.validateGameState({\n            isUnlocked: true\n        }),\n        mw.player.loadPlayer,\n        controller.markAllAsRead,\n        mw.core.handleError);\n\n    router.patch('/api/game/:gameId/events/:eventId/markAsRead',\n        mw.auth.authenticate(),\n        mw.game.loadGame({\n            lean: true,\n            settings: true,\n            state: true,\n            galaxy: true,\n            constants: true\n        }),\n        mw.game.validateGameState({\n            isUnlocked: true\n        }),\n        mw.player.loadPlayer,\n        controller.markAsRead,\n        mw.core.handleError);\n\n    router.get('/api/game/:gameId/events/unread',\n        mw.auth.authenticate(),\n        mw.game.loadGame({\n            lean: true,\n            settings: true,\n            state: true,\n            galaxy: true,\n            constants: true\n        }),\n        mw.player.loadPlayer,\n        controller.getUnreadCount,\n        mw.core.handleError);\n\n    return router;\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,mBAA4B;AAG5B,IAAO,iBAAQ,CAAC,QAAgB,IAAyB,WAA+B,cAAmC;AACvH,QAAM,iBAAa,aAAAA,SAAgB,SAAS;AAE5C,SAAO;AAAA,IAAI;AAAA,IACP,GAAG,KAAK,aAAa;AAAA,IACrB,GAAG,KAAK,SAAS;AAAA,MACb,MAAM;AAAA,MACN,UAAU;AAAA,MACV,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,WAAW;AAAA,IACf,CAAC;AAAA,IACD,GAAG,OAAO;AAAA,IACV,WAAW;AAAA,IACX,GAAG,KAAK;AAAA,EAAW;AAEvB,SAAO;AAAA,IAAM;AAAA,IACT,GAAG,KAAK,aAAa;AAAA,IACrB,GAAG,KAAK,SAAS;AAAA,MACb,MAAM;AAAA,MACN,UAAU;AAAA,MACV,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,WAAW;AAAA,IACf,CAAC;AAAA,IACD,GAAG,KAAK,kBAAkB;AAAA,MACtB,YAAY;AAAA,IAChB,CAAC;AAAA,IACD,GAAG,OAAO;AAAA,IACV,WAAW;AAAA,IACX,GAAG,KAAK;AAAA,EAAW;AAEvB,SAAO;AAAA,IAAM;AAAA,IACT,GAAG,KAAK,aAAa;AAAA,IACrB,GAAG,KAAK,SAAS;AAAA,MACb,MAAM;AAAA,MACN,UAAU;AAAA,MACV,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,WAAW;AAAA,IACf,CAAC;AAAA,IACD,GAAG,KAAK,kBAAkB;AAAA,MACtB,YAAY;AAAA,IAChB,CAAC;AAAA,IACD,GAAG,OAAO;AAAA,IACV,WAAW;AAAA,IACX,GAAG,KAAK;AAAA,EAAW;AAEvB,SAAO;AAAA,IAAI;AAAA,IACP,GAAG,KAAK,aAAa;AAAA,IACrB,GAAG,KAAK,SAAS;AAAA,MACb,MAAM;AAAA,MACN,UAAU;AAAA,MACV,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,WAAW;AAAA,IACf,CAAC;AAAA,IACD,GAAG,OAAO;AAAA,IACV,WAAW;AAAA,IACX,GAAG,KAAK;AAAA,EAAW;AAEvB,SAAO;AACX;",
  "names": ["EventController"]
}
