{
  "version": 3,
  "sources": ["../../../../server/api/routes/games.ts"],
  "sourcesContent": ["import { Router } from \"express\";\nimport { ExpressJoiInstance } from \"express-joi-validation\";\nimport { DependencyContainer } from \"../../services/types/DependencyContainer\";\nimport GameController from '../controllers/game';\nimport { MiddlewareContainer } from \"../middleware\";\n\nexport default (router: Router, mw: MiddlewareContainer, validator: ExpressJoiInstance, container: DependencyContainer) => {\n    const controller = GameController(container);\n\n    router.get('/api/game/defaultSettings',\n        mw.auth.authenticate(),\n        controller.getDefaultSettings,\n        mw.core.handleError);\n\n    router.get('/api/game/flux',\n        controller.getFlux,\n        mw.core.handleError);\n\n    router.post('/api/game/',\n        mw.auth.authenticate(),\n        controller.create,\n        mw.core.handleError);\n\n    router.post('/api/game/tutorial',\n        mw.auth.authenticate(),\n        controller.createTutorial,\n        mw.core.handleError);\n\n    router.get('/api/game/:gameId/info',\n        mw.game.loadGame({\n            lean: true,\n            settings: true,\n            state: true,\n            constants: true\n        }),\n        // TODO: This needs to utilise a response middleware function to map the game object to a response object.\n        (req, res, next) => {\n            try {\n                if (req.game.settings.general.createdByUserId) {\n                    req.game.settings.general.isGameAdmin = req.game.settings.general.createdByUserId.toString() === req.session.userId?.toString();\n                } else {\n                    req.game.settings.general.isGameAdmin = false;\n                }\n\n                delete req.game.settings.general.password;\n\n                next();\n            } catch (err) {\n                next(err);\n            }\n        },\n        controller.detailInfo,\n        mw.core.handleError);\n\n    router.get('/api/game/:gameId/state',\n        mw.game.loadGame({\n            lean: true,\n            state: true\n        }),\n        controller.detailState,\n        mw.core.handleError);\n\n    router.get('/api/game/:gameId/galaxy',\n        controller.detailGalaxy,\n        mw.core.handleError);\n\n    router.get('/api/game/list/summary',\n        controller.listSummary,\n        mw.core.handleError);\n\n    router.get('/api/game/list/official',\n        controller.listOfficial,\n        mw.core.handleError);\n\n    router.get('/api/game/list/custom',\n        controller.listCustom,\n        mw.core.handleError);\n\n    router.get('/api/game/list/inprogress',\n        controller.listInProgress,\n        mw.core.handleError);\n\n    router.get('/api/game/list/completed',\n        mw.auth.authenticate(),\n        controller.listRecentlyCompleted,\n        mw.core.handleError);\n\n    router.get('/api/game/list/completed/user',\n        mw.auth.authenticate(),\n        controller.listMyCompleted,\n        mw.core.handleError);\n\n    router.get('/api/game/list/active',\n        mw.auth.authenticate(),\n        controller.listMyActiveGames,\n        mw.core.handleError);\n\n    router.get('/api/game/list/spectating',\n        mw.auth.authenticate(),\n        controller.listSpectating,\n        mw.core.handleError);\n\n    router.get('/api/game/:gameId/intel',\n        mw.auth.authenticate(),\n        controller.getIntel,\n        mw.core.handleError);\n\n    router.put('/api/game/:gameId/join',\n        mw.auth.authenticate(),\n        mw.game.loadGame({\n            lean: false,\n            settings: true,\n            galaxy: true,\n            conversations: true,\n            state: true,\n            constants: true,\n            quitters: true,\n            afkers: true\n        }),\n        mw.game.validateGameState({\n            isUnlocked: true\n        }),\n        controller.join,\n        mw.core.handleError);\n\n    router.put('/api/game/:gameId/quit',\n        mw.auth.authenticate(),\n        mw.game.loadGame({\n            lean: false,\n            settings: true,\n            galaxy: true,\n            conversations: true,\n            state: true,\n            constants: true,\n            quitters: true,\n            afkers: true\n        }),\n        mw.game.validateGameState({\n            isUnlocked: true\n        }),\n        mw.player.loadPlayer,\n        mw.player.validatePlayerState({ isPlayerUndefeated: true }),\n        controller.quit,\n        mw.core.handleError);\n\n    router.put('/api/game/:gameId/concedeDefeat',\n        mw.auth.authenticate(),\n        mw.game.loadGame({\n            lean: false,\n            settings: true,\n            state: true,\n            galaxy: true,\n            constants: true,\n            quitters: true\n        }),\n        mw.game.validateGameState({\n            isUnlocked: true,\n            isInProgress: true\n        }),\n        mw.player.loadPlayer,\n        mw.player.validatePlayerState({ isPlayerUndefeated: true }),\n        controller.concede,\n        mw.core.handleError);\n\n    router.put('/api/game/:gameId/ready',\n        mw.auth.authenticate(),\n        mw.game.loadGame({\n            lean: true,\n            settings: true,\n            state: true,\n            galaxy: true,\n            constants: true\n        }),\n        mw.game.validateGameState({\n            isUnlocked: true\n        }),\n        mw.player.loadPlayer,\n        mw.player.validatePlayerState({ isPlayerUndefeated: true }),\n        controller.ready,\n        mw.core.handleError);\n\n    router.put('/api/game/:gameId/readytocycle',\n        mw.auth.authenticate(),\n        mw.game.loadGame({\n            lean: true,\n            settings: true,\n            state: true,\n            galaxy: true,\n            constants: true\n        }),\n        mw.game.validateGameState({\n            isUnlocked: true\n        }),\n        mw.player.loadPlayer,\n        mw.player.validatePlayerState({ isPlayerUndefeated: true }),\n        controller.readyToCycle,\n        mw.core.handleError);\n\n    router.put('/api/game/:gameId/notready',\n        mw.auth.authenticate(),\n        mw.game.loadGame({\n            lean: true,\n            settings: true,\n            state: true,\n            galaxy: true,\n            constants: true\n        }),\n        mw.game.validateGameState({\n            isUnlocked: true\n        }),\n        mw.player.loadPlayer,\n        mw.player.validatePlayerState({ isPlayerUndefeated: true }),\n        controller.unready,\n        mw.core.handleError);\n\n    router.put('/api/game/:gameId/readyToQuit',\n        mw.auth.authenticate(),\n        mw.game.loadGame({\n            lean: true,\n            settings: true,\n            state: true,\n            galaxy: true,\n            constants: true\n        }),\n        mw.game.validateGameState({\n            isUnlocked: true\n        }),\n        mw.player.loadPlayer,\n        mw.player.validatePlayerState({ isPlayerUndefeated: true }),\n        controller.readyToQuit,\n        mw.core.handleError);\n\n    router.put('/api/game/:gameId/notReadyToQuit',\n        mw.auth.authenticate(),\n        mw.game.loadGame({\n            lean: true,\n            settings: true,\n            state: true,\n            galaxy: true,\n            constants: true\n        }),\n        mw.game.validateGameState({\n            isUnlocked: true\n        }),\n        mw.player.loadPlayer,\n        mw.player.validatePlayerState({ isPlayerUndefeated: true }),\n        controller.unreadyToQuit,\n        mw.core.handleError);\n\n    router.get('/api/game/:gameId/notes',\n        mw.auth.authenticate(),\n        mw.game.loadGame({\n            lean: true,\n            settings: false,\n            state: false,\n            galaxy: true,\n            constants: false\n        }),\n        mw.player.loadPlayer,\n        controller.getNotes,\n        mw.core.handleError);\n\n    router.put('/api/game/:gameId/notes',\n        mw.auth.authenticate(),\n        mw.game.loadGame({\n            lean: true,\n            settings: false,\n            state: true,\n            galaxy: true,\n            constants: false\n        }),\n        mw.game.validateGameState({\n            isUnlocked: true\n        }),\n        mw.player.loadPlayer,\n        controller.saveNotes,\n        mw.core.handleError);\n\n    router.delete('/api/game/:gameId',\n        mw.auth.authenticate(),\n        mw.game.loadGame({\n            lean: true,\n            settings: true,\n            state: true,\n            galaxy: true,\n            constants: true\n        }),\n        mw.game.validateGameState({\n            isUnlocked: true\n        }),\n        controller.delete,\n        mw.core.handleError);\n\n    router.get('/api/game/:gameId/player/:playerId',\n        mw.game.loadGame({\n            lean: true,\n            settings: true,\n            'galaxy.players': true\n        }),\n        controller.getPlayerUser,\n        mw.core.handleError);\n        \n    router.patch('/api/game/:gameId/player/touch',\n        mw.auth.authenticate(),\n        controller.touch,\n        mw.core.handleError);\n\n    return router;\n}"],
  "mappings": "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",
  "names": ["GameController"]
}
