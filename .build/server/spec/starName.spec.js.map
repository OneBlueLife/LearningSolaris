{
  "version": 3,
  "sources": ["../../../server/spec/starName.spec.ts"],
  "sourcesContent": ["import RandomService from '../services/random';\nimport NameService from '../services/name';\n\nconst gameNames = [\n    'Game 1',\n    'Game 2',\n    'Game 3',\n    'Game 4',\n    'Game 5'\n];\n\nconst starNames = [\n    '1',\n    '2',\n    '3',\n    '4',\n    '5'\n];\n\ndescribe('star name', () => {\n\n    let randomService;\n    let starService;\n\n    beforeEach(() => {\n        // Use a real random service because it would not be easy to fake for these tests.\n        randomService = new RandomService();\n        starService = new NameService(gameNames, starNames, randomService);\n    });\n\n    it('should generate a random star name', () => {\n        const name = starService.getRandomStarName();\n\n        expect(name).toBeTruthy();\n        \n        const i = starNames.find(x => x == name);\n\n        expect(i).toBeTruthy();\n    });\n\n    it('should generate a list of random star names', () => {\n        const count = 3;\n        const names = starService.getRandomStarNames(count);\n\n        expect(names.length).toEqual(count);\n    });\n\n    it('should generate a list of random unique star names', () => {\n        const count = 3;\n        const names = starService.getRandomStarNames(count);\n        const distinct = [...new Set(names)];\n\n        expect(distinct.length).toEqual(count);\n    });\n\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA,oBAA0B;AAC1B,kBAAwB;AAExB,MAAM,YAAY;AAAA,EACd;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ;AAEA,MAAM,YAAY;AAAA,EACd;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ;AAEA,SAAS,aAAa,MAAM;AAExB,MAAI;AACJ,MAAI;AAEJ,aAAW,MAAM;AAEb,oBAAgB,IAAI,cAAAA,QAAc;AAClC,kBAAc,IAAI,YAAAC,QAAY,WAAW,WAAW,aAAa;AAAA,EACrE,CAAC;AAED,KAAG,sCAAsC,MAAM;AAC3C,UAAM,OAAO,YAAY,kBAAkB;AAE3C,WAAO,IAAI,EAAE,WAAW;AAExB,UAAM,IAAI,UAAU,KAAK,OAAK,KAAK,IAAI;AAEvC,WAAO,CAAC,EAAE,WAAW;AAAA,EACzB,CAAC;AAED,KAAG,+CAA+C,MAAM;AACpD,UAAM,QAAQ;AACd,UAAM,QAAQ,YAAY,mBAAmB,KAAK;AAElD,WAAO,MAAM,MAAM,EAAE,QAAQ,KAAK;AAAA,EACtC,CAAC;AAED,KAAG,sDAAsD,MAAM;AAC3D,UAAM,QAAQ;AACd,UAAM,QAAQ,YAAY,mBAAmB,KAAK;AAClD,UAAM,WAAW,CAAC,GAAG,IAAI,IAAI,KAAK,CAAC;AAEnC,WAAO,SAAS,MAAM,EAAE,QAAQ,KAAK;AAAA,EACzC,CAAC;AAEL,CAAC;",
  "names": ["RandomService", "NameService"]
}
