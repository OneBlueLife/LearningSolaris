{
  "version": 3,
  "sources": ["../../../server/jobs/index.ts"],
  "sourcesContent": ["const Agenda = require('agenda');\nimport config from '../config';\nimport mongooseLoader from '../db';\nimport containerLoader from '../services';\n\nimport GameTickJob from './gameTick';\nimport OfficialGamesCheckJob from './officialGamesCheck';\nimport CleanupGamesTimedOutJob from './cleanupGamesTimedOut';\nimport CleanupOldGameHistoryJob from './cleanupOldGameHistory';\nimport CleanupOldTutorialsJob from './cleanupOldTutorials';\nimport SendReviewRemindersJob from './sendReviewReminders';\n\nlet mongo;\n\nasync function startup() {\n    const container = containerLoader(config, null);\n\n    mongo = await mongooseLoader(config, {\n        unlockJobs: true,\n        poolSize: 1\n    });\n\n    await container.discordService.initialize();\n    container.notificationService.initialize();\n    \n    // ------------------------------\n    // Jobs that run every time the server restarts.\n\n    console.log('Unlock all games...');\n    await container.gameService.lockAll(false);\n    console.log('All games unlocked');\n\n    // ------------------------------\n\n    const gameTickJob = GameTickJob(container);\n    const officialGamesCheckJob = OfficialGamesCheckJob(container);\n    const cleanupGamesTimedOutJob = CleanupGamesTimedOutJob(container);\n    const cleanupOldGameHistory = CleanupOldGameHistoryJob(container);\n    const cleanupOldTutorials = CleanupOldTutorialsJob(container);\n    const sendReviewReminders = SendReviewRemindersJob(container);\n\n    // Set up the agenda instance.\n    const agendajs = new Agenda()\n        .database(config.connectionString)\n        .processEvery('10 seconds')\n        .maxConcurrency(20);\n\n    await agendajs._ready;\n\n    // ------------------------------\n    // Register jobs\n\n    // Game tick\n    agendajs.define('game-tick', {\n        priority: 'high', concurrency: 10\n    },\n    gameTickJob.handler); // reference to the handler, but not executing it! \n\n    // New player game check\n    agendajs.define('new-player-game-check', {\n        priority: 'high', concurrency: 1\n    },\n    officialGamesCheckJob.handler);\n\n    // Cleanup old games that reached timeout\n    agendajs.define('cleanup-games-timed-out', {\n        priority: 'high', concurrency: 1\n    },\n    cleanupGamesTimedOutJob.handler);\n\n    // Cleanup old game history\n    agendajs.define('cleanup-old-game-history', {\n        priority: 'high', concurrency: 1\n    },\n    cleanupOldGameHistory.handler);\n\n    // Cleanup old tutorials\n    agendajs.define('cleanup-old-tutorials', {\n        priority: 'high', concurrency: 1\n    },\n    cleanupOldTutorials.handler);\n\n    // Send review reminders\n    agendajs.define('send-review-reminders', {\n        priority: 'high', concurrency: 1\n    },\n    sendReviewReminders.handler);\n\n    // ...\n\n    // ------------------------------\n\n    agendajs.start();\n\n    // Start server jobs\n    agendajs.every('10 seconds', 'game-tick');\n    agendajs.every('1 minute', 'new-player-game-check');\n    agendajs.every('1 hour', 'cleanup-games-timed-out');\n    agendajs.every('1 day', 'cleanup-old-game-history');\n    agendajs.every('1 day', 'cleanup-old-tutorials');\n    agendajs.every('10 seconds', 'send-review-reminders'); // TODO: Every 10 seconds until we've gone through all backlogged users.\n}\n\nprocess.on('SIGINT', async () => {\n    console.log('Shutting down...');\n\n    await mongo.disconnect();\n\n    console.log('Shutdown complete.');\n\n    process.exit();\n});\n\nstartup().then(() => {\n    console.log('Jobs started.');\n});\n\nexport {};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA,oBAAmB;AACnB,gBAA2B;AAC3B,sBAA4B;AAE5B,sBAAwB;AACxB,gCAAkC;AAClC,kCAAoC;AACpC,mCAAqC;AACrC,iCAAmC;AACnC,iCAAmC;AAVnC,MAAM,SAAS,QAAQ,QAAQ;AAY/B,IAAI;AAEJ,eAAe,UAAU;AACrB,QAAM,gBAAY,gBAAAA,SAAgB,cAAAC,SAAQ,IAAI;AAE9C,UAAQ,UAAM,UAAAC,SAAe,cAAAD,SAAQ;AAAA,IACjC,YAAY;AAAA,IACZ,UAAU;AAAA,EACd,CAAC;AAED,QAAM,UAAU,eAAe,WAAW;AAC1C,YAAU,oBAAoB,WAAW;AAKzC,UAAQ,IAAI,qBAAqB;AACjC,QAAM,UAAU,YAAY,QAAQ,KAAK;AACzC,UAAQ,IAAI,oBAAoB;AAIhC,QAAM,kBAAc,gBAAAE,SAAY,SAAS;AACzC,QAAM,4BAAwB,0BAAAC,SAAsB,SAAS;AAC7D,QAAM,8BAA0B,4BAAAC,SAAwB,SAAS;AACjE,QAAM,4BAAwB,6BAAAC,SAAyB,SAAS;AAChE,QAAM,0BAAsB,2BAAAC,SAAuB,SAAS;AAC5D,QAAM,0BAAsB,2BAAAC,SAAuB,SAAS;AAG5D,QAAM,WAAW,IAAI,OAAO,EACvB,SAAS,cAAAP,QAAO,gBAAgB,EAChC,aAAa,YAAY,EACzB,eAAe,EAAE;AAEtB,QAAM,SAAS;AAMf,WAAS;AAAA,IAAO;AAAA,IAAa;AAAA,MACzB,UAAU;AAAA,MAAQ,aAAa;AAAA,IACnC;AAAA,IACA,YAAY;AAAA,EAAO;AAGnB,WAAS;AAAA,IAAO;AAAA,IAAyB;AAAA,MACrC,UAAU;AAAA,MAAQ,aAAa;AAAA,IACnC;AAAA,IACA,sBAAsB;AAAA,EAAO;AAG7B,WAAS;AAAA,IAAO;AAAA,IAA2B;AAAA,MACvC,UAAU;AAAA,MAAQ,aAAa;AAAA,IACnC;AAAA,IACA,wBAAwB;AAAA,EAAO;AAG/B,WAAS;AAAA,IAAO;AAAA,IAA4B;AAAA,MACxC,UAAU;AAAA,MAAQ,aAAa;AAAA,IACnC;AAAA,IACA,sBAAsB;AAAA,EAAO;AAG7B,WAAS;AAAA,IAAO;AAAA,IAAyB;AAAA,MACrC,UAAU;AAAA,MAAQ,aAAa;AAAA,IACnC;AAAA,IACA,oBAAoB;AAAA,EAAO;AAG3B,WAAS;AAAA,IAAO;AAAA,IAAyB;AAAA,MACrC,UAAU;AAAA,MAAQ,aAAa;AAAA,IACnC;AAAA,IACA,oBAAoB;AAAA,EAAO;AAM3B,WAAS,MAAM;AAGf,WAAS,MAAM,cAAc,WAAW;AACxC,WAAS,MAAM,YAAY,uBAAuB;AAClD,WAAS,MAAM,UAAU,yBAAyB;AAClD,WAAS,MAAM,SAAS,0BAA0B;AAClD,WAAS,MAAM,SAAS,uBAAuB;AAC/C,WAAS,MAAM,cAAc,uBAAuB;AACxD;AAEA,QAAQ,GAAG,UAAU,YAAY;AAC7B,UAAQ,IAAI,kBAAkB;AAE9B,QAAM,MAAM,WAAW;AAEvB,UAAQ,IAAI,oBAAoB;AAEhC,UAAQ,KAAK;AACjB,CAAC;AAED,QAAQ,EAAE,KAAK,MAAM;AACjB,UAAQ,IAAI,eAAe;AAC/B,CAAC;",
  "names": ["containerLoader", "config", "mongooseLoader", "GameTickJob", "OfficialGamesCheckJob", "CleanupGamesTimedOutJob", "CleanupOldGameHistoryJob", "CleanupOldTutorialsJob", "SendReviewRemindersJob"]
}
