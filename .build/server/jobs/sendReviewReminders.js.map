{
  "version": 3,
  "sources": ["../../../server/jobs/sendReviewReminders.ts"],
  "sourcesContent": ["import { DependencyContainer } from \"../services/types/DependencyContainer\";\n\nfunction sleep(ms: number) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, ms);\n    });\n}  \n\nexport default (container: DependencyContainer) => {\n\n    return {\n\n        async handler(job, done) {\n            if (!container.emailService.isEnabled()) { // TODO: Remove when backlog has been sent.\n                done()\n                return\n            }\n\n            const users = await container.userService.listUsersEligibleForReviewReminder(5);\n\n            for (const user of users) {\n                try {\n                    await container.emailService.sendReviewReminderEmail(user);\n                } catch (e) {\n                    console.error(e);\n                } finally {\n                    await container.userService.setReviewReminderEmailSent(user._id, true);\n                }\n                \n                await sleep(1000) // Wait for a second before sending the next email.\n            }\n\n            done();\n        }\n\n    };\n    \n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,SAAS,MAAM,IAAY;AACvB,SAAO,IAAI,QAAQ,CAAC,YAAY;AAC5B,eAAW,SAAS,EAAE;AAAA,EAC1B,CAAC;AACL;AAEA,IAAO,8BAAQ,CAAC,cAAmC;AAE/C,SAAO;AAAA,IAEH,MAAM,QAAQ,KAAK,MAAM;AACrB,UAAI,CAAC,UAAU,aAAa,UAAU,GAAG;AACrC,aAAK;AACL;AAAA,MACJ;AAEA,YAAM,QAAQ,MAAM,UAAU,YAAY,mCAAmC,CAAC;AAE9E,iBAAW,QAAQ,OAAO;AACtB,YAAI;AACA,gBAAM,UAAU,aAAa,wBAAwB,IAAI;AAAA,QAC7D,SAAS,GAAP;AACE,kBAAQ,MAAM,CAAC;AAAA,QACnB,UAAE;AACE,gBAAM,UAAU,YAAY,2BAA2B,KAAK,KAAK,IAAI;AAAA,QACzE;AAEA,cAAM,MAAM,GAAI;AAAA,MACpB;AAEA,WAAK;AAAA,IACT;AAAA,EAEJ;AAEJ;",
  "names": []
}
