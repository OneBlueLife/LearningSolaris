{
  "version": 3,
  "sources": ["../../../server/services/gameFlux.ts"],
  "sourcesContent": ["import { Flux } from \"./types/Flux\";\nimport { Game } from \"./types/Game\";\n\nconst moment = require('moment');\nconst fluxes = require('../config/game/flux.json') as Flux[];\n\nexport default class GameFluxService {\n\n    SPECIALIST_BANS_STANDARD = 3;\n    SPECIALIST_BANS_FLUX = 6;\n\n    FLUX = [\n        this.applyJanFlux,\n        this.applyFebFlux,\n        this.applyMarFlux,\n        this.applyAprFlux,\n        this.applyMayFlux,\n        this.applyJunFlux,\n        this.applyJulFlux,\n        this.applyAugFlux,\n        this.applySepFlux,\n        this.applyOctFlux,\n        this.applyNovFlux,\n        this.applyDecFlux\n    ];\n\n    getCurrentFlux(): Flux | null {\n        return this.getFluxById(moment().utc().month() + 1);\n    }\n\n    getFluxById(fluxId: number | null): Flux | null {\n        if (fluxId == null) {\n            return null;\n        }\n\n        return fluxes.find(f => f.id === fluxId)!;\n    }\n\n    applyCurrentFlux(game: Game) {\n        const fluxId = moment().utc().month();\n        const applyFlux = this.FLUX[fluxId];\n\n        applyFlux(game);\n\n        game.settings.general.fluxId = fluxId + 1;\n    }\n\n    applyJanFlux(game: Game) {\n        // Banking rewards are increased.\n        game.constants.player.bankingCycleRewardMultiplier = 50;\n    }\n\n    applyFebFlux(game: Game) {\n        // Capture rewards are increased.\n        game.constants.star.captureRewardMultiplier = 25;\n    }\n\n    applyMarFlux(game: Game) {\n        // Research contribution of stars is increased\n        game.constants.research.sciencePointMultiplier = 2;\n    }\n\n    applyAprFlux(game: Game) {\n        // Capital stars have additional defender bonus\n        game.constants.star.homeStarDefenderBonusMultiplier = 2;\n    }\n\n    applyMayFlux(game: Game) {\n        // Experimentation rewards are increased\n        game.constants.research.experimentationMultiplier = 2;\n    }\n\n    applyJunFlux(game: Game) {\n        // Increased trade cost\n        game.settings.player.tradeCost = 50;\n    }\n\n    applyJulFlux(game: Game) {\n        // Fixed weapons level\n        game.settings.technology.startingTechnologyLevel.weapons = 7;\n        game.settings.technology.researchCosts.weapons = 'none';\n    }\n\n    applyAugFlux(game: Game) {\n        // Disabled defender bonus\n        game.settings.specialGalaxy.defenderBonus = 'disabled';\n    }\n\n    applySepFlux(game: Game) {\n        // Faster production cycles\n        game.settings.galaxy.productionTicks = Math.max(14, game.settings.galaxy.productionTicks - 6);\n    }\n\n    applyOctFlux(game: Game) {\n        // Increased spec bans\n        // TODO: Why is this broken?\n        game.constants.specialists.monthlyBanAmount = 6; //this.SPECIALIST_BANS_FLUX;\n    }\n\n    applyNovFlux(game: Game) {\n        // Increased starting credits/tech\n        game.settings.player.startingCredits = Math.min(3000, game.settings.player.startingCredits * 2);\n        game.settings.player.startingCreditsSpecialists = Math.min(100, game.settings.player.startingCreditsSpecialists * 2);\n    }\n\n    applyDecFlux(game: Game) {\n        // Increased rank from finishing games\n        game.constants.player.rankRewardMultiplier = 2;\n    }\n\n    getThisMonthSpecialistBanAmount() {\n        return moment().utc().month() === 9 ? this.SPECIALIST_BANS_FLUX : this.SPECIALIST_BANS_STANDARD;\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,MAAM,SAAS,QAAQ,QAAQ;AAC/B,MAAM,SAAS,QAAQ,0BAA0B;AAEjD,MAAO,gBAA8B;AAAA,EAArC;AAEI,oCAA2B;AAC3B,gCAAuB;AAEvB,gBAAO;AAAA,MACH,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACT;AAAA;AAAA,EAEA,iBAA8B;AAC1B,WAAO,KAAK,YAAY,OAAO,EAAE,IAAI,EAAE,MAAM,IAAI,CAAC;AAAA,EACtD;AAAA,EAEA,YAAY,QAAoC;AAC5C,QAAI,UAAU,MAAM;AAChB,aAAO;AAAA,IACX;AAEA,WAAO,OAAO,KAAK,OAAK,EAAE,OAAO,MAAM;AAAA,EAC3C;AAAA,EAEA,iBAAiB,MAAY;AACzB,UAAM,SAAS,OAAO,EAAE,IAAI,EAAE,MAAM;AACpC,UAAM,YAAY,KAAK,KAAK;AAE5B,cAAU,IAAI;AAEd,SAAK,SAAS,QAAQ,SAAS,SAAS;AAAA,EAC5C;AAAA,EAEA,aAAa,MAAY;AAErB,SAAK,UAAU,OAAO,+BAA+B;AAAA,EACzD;AAAA,EAEA,aAAa,MAAY;AAErB,SAAK,UAAU,KAAK,0BAA0B;AAAA,EAClD;AAAA,EAEA,aAAa,MAAY;AAErB,SAAK,UAAU,SAAS,yBAAyB;AAAA,EACrD;AAAA,EAEA,aAAa,MAAY;AAErB,SAAK,UAAU,KAAK,kCAAkC;AAAA,EAC1D;AAAA,EAEA,aAAa,MAAY;AAErB,SAAK,UAAU,SAAS,4BAA4B;AAAA,EACxD;AAAA,EAEA,aAAa,MAAY;AAErB,SAAK,SAAS,OAAO,YAAY;AAAA,EACrC;AAAA,EAEA,aAAa,MAAY;AAErB,SAAK,SAAS,WAAW,wBAAwB,UAAU;AAC3D,SAAK,SAAS,WAAW,cAAc,UAAU;AAAA,EACrD;AAAA,EAEA,aAAa,MAAY;AAErB,SAAK,SAAS,cAAc,gBAAgB;AAAA,EAChD;AAAA,EAEA,aAAa,MAAY;AAErB,SAAK,SAAS,OAAO,kBAAkB,KAAK,IAAI,IAAI,KAAK,SAAS,OAAO,kBAAkB,CAAC;AAAA,EAChG;AAAA,EAEA,aAAa,MAAY;AAGrB,SAAK,UAAU,YAAY,mBAAmB;AAAA,EAClD;AAAA,EAEA,aAAa,MAAY;AAErB,SAAK,SAAS,OAAO,kBAAkB,KAAK,IAAI,KAAM,KAAK,SAAS,OAAO,kBAAkB,CAAC;AAC9F,SAAK,SAAS,OAAO,6BAA6B,KAAK,IAAI,KAAK,KAAK,SAAS,OAAO,6BAA6B,CAAC;AAAA,EACvH;AAAA,EAEA,aAAa,MAAY;AAErB,SAAK,UAAU,OAAO,uBAAuB;AAAA,EACjD;AAAA,EAEA,kCAAkC;AAC9B,WAAO,OAAO,EAAE,IAAI,EAAE,MAAM,MAAM,IAAI,KAAK,uBAAuB,KAAK;AAAA,EAC3E;AACJ;",
  "names": []
}
