{
  "version": 3,
  "sources": ["../../../server/services/battleRoyale.ts"],
  "sourcesContent": ["import { Game } from \"./types/Game\";\nimport { Star } from \"./types/Star\";\nimport CarrierService from \"./carrier\";\nimport CarrierMovementService from \"./carrierMovement\";\nimport MapService from \"./map\";\nimport StarService from \"./star\";\nimport StarDistanceService from \"./starDistance\";\nimport WaypointService from \"./waypoint\";\n\nexport default class BattleRoyaleService {\n    starService: StarService;\n    carrierService: CarrierService;\n    mapService: MapService;\n    starDistanceService: StarDistanceService;\n    waypointService: WaypointService;\n    carrierMovementService: CarrierMovementService;\n\n    constructor(\n        starService: StarService,\n        carrierService: CarrierService,\n        mapService: MapService,\n        starDistanceService: StarDistanceService,\n        waypointService: WaypointService,\n        carrierMovementService: CarrierMovementService\n    ) {\n        this.starService = starService;\n        this.carrierService = carrierService;\n        this.mapService = mapService;\n        this.starDistanceService = starDistanceService;\n        this.waypointService = waypointService;\n        this.carrierMovementService = carrierMovementService;\n    }\n\n    performBattleRoyaleTick(game: Game) {\n        // Calculate which stars need to be destroyed.\n        let starsToDestroy = this.getStarsToDestroy(game);\n\n        for (let star of starsToDestroy) {\n            this.destroyStar(game, star);\n        }\n    }\n\n    getStarsToDestroy(game: Game) {\n        // Don't do anything for X number of turns for peace time.\n        const peaceCycles = 3; // TODO: This needs to be a game setting.\n\n        if (game.state.productionTick < peaceCycles) {\n            return [];\n        }\n\n        // Calculate which stars need to be destroyed.\n        let galaxyCenter = this.mapService.getGalaxyCenter(game.galaxy.stars.map(s => s.location));\n        let starCountToDestroy = game.settings.general.playerLimit; // TODO: This needs to be a game setting?\n\n        // There must be at least 1 star left in the galaxy.\n        if (game.galaxy.stars.length - starCountToDestroy < 1) {\n            starCountToDestroy = game.galaxy.stars.length - 1;\n        }\n        \n        let starsToDestroy = this.starDistanceService.getFurthestStarsFromLocation(galaxyCenter, game.galaxy.stars, starCountToDestroy);\n\n        return starsToDestroy\n            .sort((a, b) => a._id.toString().localeCompare(b._id.toString()));\n    }\n\n    destroyStar(game: Game, star: Star) {\n        this.starService.destroyStar(game, star);\n\n        let carriers = this.carrierMovementService.getCarriersEnRouteToStar(game, star);\n\n        // Cull the waypoints of carriers that have the given star in its\n        // waypoint queue and destroy those that are lost in space.\n        for (let carrier of carriers) {\n            this.waypointService.cullWaypointsByHyperspaceRange(game, carrier);\n\n            if (this.carrierMovementService.isLostInSpace(game, carrier)) {\n                this.carrierService.destroyCarrier(game, carrier);\n            }\n        }\n\n        // Destroy any carriers stationed at the star.\n        carriers = this.carrierService.getCarriersAtStar(game, star._id);\n\n        for (let carrier of carriers) {\n            this.carrierService.destroyCarrier(game, carrier);\n        }\n    }\n\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,MAAO,oBAAkC;AAAA,EAQrC,YACI,aACA,gBACA,YACA,qBACA,iBACA,wBACF;AACE,SAAK,cAAc;AACnB,SAAK,iBAAiB;AACtB,SAAK,aAAa;AAClB,SAAK,sBAAsB;AAC3B,SAAK,kBAAkB;AACvB,SAAK,yBAAyB;AAAA,EAClC;AAAA,EAEA,wBAAwB,MAAY;AAEhC,QAAI,iBAAiB,KAAK,kBAAkB,IAAI;AAEhD,aAAS,QAAQ,gBAAgB;AAC7B,WAAK,YAAY,MAAM,IAAI;AAAA,IAC/B;AAAA,EACJ;AAAA,EAEA,kBAAkB,MAAY;AAE1B,UAAM,cAAc;AAEpB,QAAI,KAAK,MAAM,iBAAiB,aAAa;AACzC,aAAO,CAAC;AAAA,IACZ;AAGA,QAAI,eAAe,KAAK,WAAW,gBAAgB,KAAK,OAAO,MAAM,IAAI,OAAK,EAAE,QAAQ,CAAC;AACzF,QAAI,qBAAqB,KAAK,SAAS,QAAQ;AAG/C,QAAI,KAAK,OAAO,MAAM,SAAS,qBAAqB,GAAG;AACnD,2BAAqB,KAAK,OAAO,MAAM,SAAS;AAAA,IACpD;AAEA,QAAI,iBAAiB,KAAK,oBAAoB,6BAA6B,cAAc,KAAK,OAAO,OAAO,kBAAkB;AAE9H,WAAO,eACF,KAAK,CAAC,GAAG,MAAM,EAAE,IAAI,SAAS,EAAE,cAAc,EAAE,IAAI,SAAS,CAAC,CAAC;AAAA,EACxE;AAAA,EAEA,YAAY,MAAY,MAAY;AAChC,SAAK,YAAY,YAAY,MAAM,IAAI;AAEvC,QAAI,WAAW,KAAK,uBAAuB,yBAAyB,MAAM,IAAI;AAI9E,aAAS,WAAW,UAAU;AAC1B,WAAK,gBAAgB,+BAA+B,MAAM,OAAO;AAEjE,UAAI,KAAK,uBAAuB,cAAc,MAAM,OAAO,GAAG;AAC1D,aAAK,eAAe,eAAe,MAAM,OAAO;AAAA,MACpD;AAAA,IACJ;AAGA,eAAW,KAAK,eAAe,kBAAkB,MAAM,KAAK,GAAG;AAE/D,aAAS,WAAW,UAAU;AAC1B,WAAK,eAAe,eAAe,MAAM,OAAO;AAAA,IACpD;AAAA,EACJ;AAEJ;AAAC;",
  "names": []
}
