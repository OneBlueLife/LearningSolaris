{
  "version": 3,
  "sources": ["../../../server/services/gameType.ts"],
  "sourcesContent": ["import { Game } from \"./types/Game\";\n\nexport default class GameTypeService {\n\n    isNewPlayerGame(game: Game) {\n        return ['new_player_rt', 'new_player_tb'].includes(game.settings.general.type);\n    }\n\n    isTutorialGame(game: Game) {\n        return game.settings.general.type === 'tutorial';\n    }\n\n    isOfficialGame(game: Game) {\n        return game.settings.general.createdByUserId == null;\n    }\n\n    isCustomGame(game: Game) {\n        return game.settings.general.type === 'custom';\n    }\n\n    isFeaturedGame(game: Game) {\n        return game.settings.general.featured;\n    }\n\n    isSpecialGameMode(game: Game) {\n        return [\n            'special_dark',\n            'special_fog',\n            'special_ultraDark',\n            'special_orbital',\n            'special_battleRoyale',\n            'special_homeStar',\n            'special_homeStarElimination',\n            'special_anonymous',\n            'special_kingOfTheHill',\n            'special_tinyGalaxy',\n            'special_freeForAll',\n            'special_arcade'\n        ].includes(game.settings.general.type);\n    }\n\n    is32PlayerGame(game: Game) {\n        return game.settings.general.playerLimit === 32;\n    }\n\n    isConquestMode(game: Game) {\n        return game.settings.general.mode === 'conquest';\n    }\n\n    isKingOfTheHillMode(game: Game) {\n        return game.settings.general.mode === 'kingOfTheHill';\n    }\n\n    isAnonymousGame(game: Game) {\n        return game.settings.general.anonymity === 'extra';\n    }\n\n    isForEstablishedPlayersOnly(game: Game) {\n        return game.settings.general.playerType === 'establishedPlayers'\n    }\n\n    isOrbitalMode(game: Game) {\n        return game.settings.orbitalMechanics.enabled === 'enabled';\n    }\n\n    isBattleRoyaleMode(game: Game) {\n        return game.settings.general.mode === 'battleRoyale';\n    }\n\n    isDarkModeExtra(game: Game) {\n        return game.settings.specialGalaxy.darkGalaxy === 'extra';\n    }\n\n    isDarkMode(game: Game) {\n        return game.settings.specialGalaxy.darkGalaxy === 'standard'\n            || game.settings.specialGalaxy.darkGalaxy === 'extra';\n    }\n\n    isDarkFogged(game: Game) {\n        return game.settings.specialGalaxy.darkGalaxy === 'fog';\n    }\n\n    isDarkStart(game: Game) {\n        return game.settings.specialGalaxy.darkGalaxy === 'start'\n            || this.isDarkFogged(game);\n    }\n\n    isTurnBasedGame(game: Game) {\n        return game.settings.gameTime.gameType === 'turnBased';\n    }\n\n    isRealTimeGame(game: Game) {\n        return game.settings.gameTime.gameType === 'realTime';\n    }\n\n    isSplitResources(game: Game) {\n        return game.settings.specialGalaxy.splitResources === 'enabled';\n    }\n\n    is1v1Game(game: Game) {\n        return ['1v1_rt', '1v1_tb'].includes(game.settings.general.type);\n    }\n\n    isFluxGame(game: Game) {\n        return game.settings.general.fluxEnabled === 'enabled'\n    }\n\n    isRankedGame(game: Game) {\n        // Official games are either not user created or featured (featured games can be user created)\n        return !this.isTutorialGame(game) &&\n                !this.isNewPlayerGame(game) &&\n                (!this.isCustomGame(game) || this.isFeaturedGame(game));\n    }\n\n    isCapitalStarEliminationMode(game: Game) {\n        return this.isConquestMode(game) && game.settings.conquest.capitalStarElimination === 'enabled';\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,MAAO,gBAA8B;AAAA,EAEjC,gBAAgB,MAAY;AACxB,WAAO,CAAC,iBAAiB,eAAe,EAAE,SAAS,KAAK,SAAS,QAAQ,IAAI;AAAA,EACjF;AAAA,EAEA,eAAe,MAAY;AACvB,WAAO,KAAK,SAAS,QAAQ,SAAS;AAAA,EAC1C;AAAA,EAEA,eAAe,MAAY;AACvB,WAAO,KAAK,SAAS,QAAQ,mBAAmB;AAAA,EACpD;AAAA,EAEA,aAAa,MAAY;AACrB,WAAO,KAAK,SAAS,QAAQ,SAAS;AAAA,EAC1C;AAAA,EAEA,eAAe,MAAY;AACvB,WAAO,KAAK,SAAS,QAAQ;AAAA,EACjC;AAAA,EAEA,kBAAkB,MAAY;AAC1B,WAAO;AAAA,MACH;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ,EAAE,SAAS,KAAK,SAAS,QAAQ,IAAI;AAAA,EACzC;AAAA,EAEA,eAAe,MAAY;AACvB,WAAO,KAAK,SAAS,QAAQ,gBAAgB;AAAA,EACjD;AAAA,EAEA,eAAe,MAAY;AACvB,WAAO,KAAK,SAAS,QAAQ,SAAS;AAAA,EAC1C;AAAA,EAEA,oBAAoB,MAAY;AAC5B,WAAO,KAAK,SAAS,QAAQ,SAAS;AAAA,EAC1C;AAAA,EAEA,gBAAgB,MAAY;AACxB,WAAO,KAAK,SAAS,QAAQ,cAAc;AAAA,EAC/C;AAAA,EAEA,4BAA4B,MAAY;AACpC,WAAO,KAAK,SAAS,QAAQ,eAAe;AAAA,EAChD;AAAA,EAEA,cAAc,MAAY;AACtB,WAAO,KAAK,SAAS,iBAAiB,YAAY;AAAA,EACtD;AAAA,EAEA,mBAAmB,MAAY;AAC3B,WAAO,KAAK,SAAS,QAAQ,SAAS;AAAA,EAC1C;AAAA,EAEA,gBAAgB,MAAY;AACxB,WAAO,KAAK,SAAS,cAAc,eAAe;AAAA,EACtD;AAAA,EAEA,WAAW,MAAY;AACnB,WAAO,KAAK,SAAS,cAAc,eAAe,cAC3C,KAAK,SAAS,cAAc,eAAe;AAAA,EACtD;AAAA,EAEA,aAAa,MAAY;AACrB,WAAO,KAAK,SAAS,cAAc,eAAe;AAAA,EACtD;AAAA,EAEA,YAAY,MAAY;AACpB,WAAO,KAAK,SAAS,cAAc,eAAe,WAC3C,KAAK,aAAa,IAAI;AAAA,EACjC;AAAA,EAEA,gBAAgB,MAAY;AACxB,WAAO,KAAK,SAAS,SAAS,aAAa;AAAA,EAC/C;AAAA,EAEA,eAAe,MAAY;AACvB,WAAO,KAAK,SAAS,SAAS,aAAa;AAAA,EAC/C;AAAA,EAEA,iBAAiB,MAAY;AACzB,WAAO,KAAK,SAAS,cAAc,mBAAmB;AAAA,EAC1D;AAAA,EAEA,UAAU,MAAY;AAClB,WAAO,CAAC,UAAU,QAAQ,EAAE,SAAS,KAAK,SAAS,QAAQ,IAAI;AAAA,EACnE;AAAA,EAEA,WAAW,MAAY;AACnB,WAAO,KAAK,SAAS,QAAQ,gBAAgB;AAAA,EACjD;AAAA,EAEA,aAAa,MAAY;AAErB,WAAO,CAAC,KAAK,eAAe,IAAI,KACxB,CAAC,KAAK,gBAAgB,IAAI,MACzB,CAAC,KAAK,aAAa,IAAI,KAAK,KAAK,eAAe,IAAI;AAAA,EACjE;AAAA,EAEA,6BAA6B,MAAY;AACrC,WAAO,KAAK,eAAe,IAAI,KAAK,KAAK,SAAS,SAAS,2BAA2B;AAAA,EAC1F;AACJ;",
  "names": []
}
