{
  "version": 3,
  "sources": ["../../../server/services/utils.ts"],
  "sourcesContent": ["export function getOrInsert<K, V>(map: Map<K, V>, key: K, defaultFunc: (K) => V): V {\n    let value = map.get(key);\n    if (!value) {\n        value = defaultFunc(key);\n        map.set(key, value);\n    }\n    return value;\n}\n\nexport function intersectionOfSets<T>(a: Set<T>, b: Set<T>): Set<T> {\n    return new Set(Array.from(a).filter(x => b.has(x)));\n}\n\nexport function maxBy<T>(max: (T) => number, list: T[]): number {\n    let lastScore = Number.MIN_SAFE_INTEGER;\n    for (let el of list) {\n        const elScore = max(el);\n        if (elScore > lastScore) {\n            lastScore = elScore;\n        }\n    }\n\n    return lastScore;\n}\n\nexport function minBy<T>(min: (T) => number, list: T[]): number {\n    let lastScore = Number.MAX_SAFE_INTEGER;\n    for (let el of list) {\n        const elScore = min(el);\n        if (elScore < lastScore) {\n            lastScore = elScore;\n        }\n    }\n\n    return lastScore;\n}\n\nexport function reverseSort<A>(sorter: (a: A, b: A) => number): (a: A, b: A) => number {\n    return (a, b) => sorter(b, a);\n}\n\nexport function notNull<T>(val: T | null): val is T {\n    return val !== null;\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,SAAS,YAAkB,KAAgB,KAAQ,aAA0B;AAChF,MAAI,QAAQ,IAAI,IAAI,GAAG;AACvB,MAAI,CAAC,OAAO;AACR,YAAQ,YAAY,GAAG;AACvB,QAAI,IAAI,KAAK,KAAK;AAAA,EACtB;AACA,SAAO;AACX;AAEO,SAAS,mBAAsB,GAAW,GAAmB;AAChE,SAAO,IAAI,IAAI,MAAM,KAAK,CAAC,EAAE,OAAO,OAAK,EAAE,IAAI,CAAC,CAAC,CAAC;AACtD;AAEO,SAAS,MAAS,KAAoB,MAAmB;AAC5D,MAAI,YAAY,OAAO;AACvB,WAAS,MAAM,MAAM;AACjB,UAAM,UAAU,IAAI,EAAE;AACtB,QAAI,UAAU,WAAW;AACrB,kBAAY;AAAA,IAChB;AAAA,EACJ;AAEA,SAAO;AACX;AAEO,SAAS,MAAS,KAAoB,MAAmB;AAC5D,MAAI,YAAY,OAAO;AACvB,WAAS,MAAM,MAAM;AACjB,UAAM,UAAU,IAAI,EAAE;AACtB,QAAI,UAAU,WAAW;AACrB,kBAAY;AAAA,IAChB;AAAA,EACJ;AAEA,SAAO;AACX;AAEO,SAAS,YAAe,QAAwD;AACnF,SAAO,CAAC,GAAG,MAAM,OAAO,GAAG,CAAC;AAChC;AAEO,SAAS,QAAW,KAAyB;AAChD,SAAO,QAAQ;AACnB;",
  "names": []
}
