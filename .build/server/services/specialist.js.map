{
  "version": 3,
  "sources": ["../../../server/services/specialist.ts"],
  "sourcesContent": ["import { Carrier } from \"./types/Carrier\";\nimport { Game } from \"./types/Game\";\nimport { Specialist, SpecialistType } from \"./types/Specialist\";\nimport { Star } from \"./types/Star\";\nimport ValidationError from \"../errors/validation\";\nimport GameTypeService from \"./gameType\";\n\nconst specialists = require('../config/game/specialists.json') as Specialist[];\n\nexport default class SpecialistService {\n\n    gameTypeService: GameTypeService\n\n    constructor(gameTypeService: GameTypeService) {\n        this.gameTypeService = gameTypeService;\n    }\n\n    getById(id: number, type: SpecialistType): Specialist {\n        return specialists[type].find((x) => x.id === id);\n    }\n\n    getByIdCarrier(id: number | null) {\n        if (!id) {\n            return null;\n        }\n\n        return this.getById(id, 'carrier');\n    }\n\n    getByIdCarrierTrim(id: number | null) {\n        let spec = this.getByIdCarrier(id);\n\n        if (spec) {\n            spec = {\n                id: spec.id,\n                key: spec.key,\n                name: spec.name,\n                description: spec.description\n            } as Specialist;\n        }\n\n        return spec;\n    }\n\n    getByIdStar(id: number | null) {\n        if (!id) {\n            return null;\n        }\n        \n        return this.getById(id, 'star');\n    }\n\n    getByIdStarTrim(id: number | null) {\n        let spec = this.getByIdStar(id);\n\n        if (spec) {\n            spec = {\n                id: spec.id,\n                key: spec.key,\n                name: spec.name,\n                description: spec.description\n            } as Specialist;\n        }\n\n        return spec;\n    }\n\n    list(game: Game | null, type: SpecialistType): Specialist[] {\n        if (game && game.settings.specialGalaxy.specialistCost === 'none') {\n            throw new ValidationError('The game settings has disabled the hiring of specialists.');\n        }\n\n        // Clone the existing list otherwise could run into issues with multiple requests\n        // as the specs are being loaded from a file.\n        let specialistsList = JSON.parse(JSON.stringify(specialists)) as Specialist[];\n\n        let specs = specialistsList[type]\n            .filter(s => s.active.official || s.active.custom);\n\n        // If in the context of a game, filter out specialists that aren't active.\n        if (game) {\n            const isOfficialGame = this.gameTypeService.isOfficialGame(game)\n            const isCustomGame = this.gameTypeService.isCustomGame(game)\n\n            specs = specs.filter(s => (s.active.official && isOfficialGame) || (s.active.custom && isCustomGame))\n        }\n\n        if (game) {\n            for (let spec of specs) {\n                spec.cost = this.getSpecialistActualCost(game, spec);\n            }\n\n            let currency = game.settings.specialGalaxy.specialistsCurrency;\n    \n            return specs.sort((a, b) => a.cost[currency] - b.cost[currency]);\n        }\n\n        return specs.sort((a, b) => a.name - b.name);\n    }\n\n    listCarrier(game: Game | null): Specialist[] {\n        return this.list(game, 'carrier');\n    }\n\n    listStar(game: Game | null): Specialist[] {\n        return this.list(game, 'star');\n    }\n\n    getSpecialistActualCost(game: Game, specialist: Specialist) {\n        let result = {\n            credits: 0,\n            creditsSpecialists: 0\n        };\n\n        const expenseConfig = game.constants.star.specialistsExpenseMultipliers[game.settings.specialGalaxy.specialistCost];\n\n        result.credits = specialist.baseCostCredits * expenseConfig;\n        result.creditsSpecialists = specialist.baseCostCreditsSpecialists * expenseConfig;\n\n        return result;\n    }\n\n    _getCarrierSpecialValue(carrier: Carrier, name: string, defaultValue) {\n        if (!carrier.specialistId) {\n            return defaultValue;\n        }\n\n        let specialist = this.getByIdCarrier(carrier.specialistId);\n\n        if (specialist == null || !specialist.modifiers.special) {\n            return defaultValue;\n        }\n\n        let val = specialist.modifiers.special[name];\n\n        return val == null ? defaultValue : val;\n    }\n\n    _getStarSpecialValue(star: Star, name: string, defaultValue) {\n        if (!star.specialistId) {\n            return defaultValue;\n        }\n\n        let specialist = this.getByIdStar(star.specialistId);\n\n        if (specialist == null || !specialist.modifiers.special) {\n            return defaultValue;\n        }\n\n        let val = specialist.modifiers.special[name];\n\n        return val == null ? defaultValue : val;\n    }\n\n    getStarCaptureRewardMultiplier(carrier: Carrier) {\n        return this._getCarrierSpecialValue(carrier, 'starCaptureRewardMultiplier', 1);\n    }\n\n    hasAwardDoubleCaptureRewardSpecialist(carriers: Carrier[]) {\n        return carriers\n            .map(c => this.getStarCaptureRewardMultiplier(c))\n            .sort((a, b) => b - a)[0];\n    }\n\n    getEconomyInfrastructureMultiplier(star: Star) {\n        return this._getStarSpecialValue(star, 'economyInfrastructureMultiplier', 1);\n    }\n\n    getScienceInfrastructureMultiplier(star: Star) {\n        return this._getStarSpecialValue(star, 'scienceInfrastructureMultiplier', 1);\n    }\n\n    getCreditsPerTickByScience(star: Star) {\n        return this._getStarSpecialValue(star, 'creditsPerTickByScience', 0);\n    }\n\n    getReigniteDeadStar(carrier: Carrier) {\n        return this._getCarrierSpecialValue(carrier, 'reigniteDeadStar', false);\n    }\n\n    getReigniteDeadStarNaturalResources(carrier: Carrier) {\n        return this._getCarrierSpecialValue(carrier, 'reigniteDeadStarNaturalResources', {\n            economy: 25,\n            industry: 25,\n            science: 25\n        });\n    }\n\n    getStarHideShips(star: Star) {\n        return this._getStarSpecialValue(star, 'hideShips', false);\n    }\n\n    getCarrierHideShips(carrier: Carrier) {\n        return this._getCarrierSpecialValue(carrier, 'hideShips', false);\n    }\n\n    getStarMovement(star: Star) {\n        return this._getStarSpecialValue(star, 'moveStar', false);\n    }\n\n    getStarMovementPerTick(star: Star) {\n        return this._getStarSpecialValue(star, 'starMovementPerTick', 0.2);\n    }\n\n    getStarAttract(star: Star) {\n        return this._getStarSpecialValue(star, 'attractStar', false);\n    }\n\n    clearExpiredSpecialists(game: Game) {\n        const stars = game.galaxy.stars.filter(s => s.specialistId && s.specialistExpireTick != null && s.specialistExpireTick < game.state.tick);\n\n        for (const star of stars) {\n            star.specialistId = null;\n            star.specialistExpireTick = null;\n        }\n\n        const carriers = game.galaxy.carriers.filter(c => c.specialistId && c.specialistExpireTick != null && c.specialistExpireTick < game.state.tick);\n\n        for (const carrier of carriers) {\n            carrier.specialistId = null;\n            carrier.specialistExpireTick = null;\n        }\n    }\n\n};\n"],
  "mappings": "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",
  "names": ["ValidationError"]
}
