{
  "version": 3,
  "sources": ["../../../server/services/specialistBan.ts"],
  "sourcesContent": ["import { Game } from \"./types/Game\";\nimport { Specialist } from \"./types/Specialist\";\nimport SpecialistService from \"./specialist\";\nconst RNG = require('random-seed');\nconst moment = require('moment');\n\nexport default class SpecialistBanService {\n    specialistService: SpecialistService;\n\n    constructor(\n        specialistService: SpecialistService\n    ) {\n        this.specialistService = specialistService;\n    }\n\n    isStarSpecialistBanned(game: Game, specialistId: number) {\n        return game.settings.specialGalaxy.specialistBans.star.indexOf(specialistId) > -1;\n    }\n\n    isCarrierSpecialistBanned(game: Game, specialistId: number) {\n        return game.settings.specialGalaxy.specialistBans.carrier.indexOf(specialistId) > -1;\n    }\n\n    _getCurrentMonthBans(specialistIds: number[], amount: number) {\n        if (amount <= 0) {\n            throw new Error(`Amount cannot be less than or equal to 0.`);\n        }\n\n        if (amount >= specialistIds.length) {\n            return specialistIds;\n        }\n\n        const now = moment().utc();\n        const seed = now.format('YYYYMM');\n        const rng = RNG.create(seed);\n\n        const bans: number[] = [];\n\n        while (bans.length < amount) {\n            const i = rng(specialistIds.length);\n            const id = specialistIds[i];\n\n            bans.push(id);\n            specialistIds.splice(i, 1);\n        }\n\n        return bans;\n    }\n\n    getCurrentMonthStarBans(amount: number): Specialist[] {\n        const specs = this.specialistService.listStar(null).filter(s => s.active.official);\n        const ids = specs.map((s: Specialist) => s.id);\n        const bans = this._getCurrentMonthBans(ids, amount);\n\n        return specs.filter((s: Specialist) => bans.includes(s.id));\n    }\n\n    getCurrentMonthCarrierBans(amount: number): Specialist[] {\n        const specs = this.specialistService.listCarrier(null).filter(s => s.active.official);\n        const ids = specs.map((s: Specialist) => s.id);\n        const bans = this._getCurrentMonthBans(ids, amount);\n\n        return specs.filter((s: Specialist) => bans.includes(s.id));\n    }\n\n    getCurrentMonthBans(amount: number) {\n        const carrierBans = this.getCurrentMonthCarrierBans(amount);\n        const starBans = this.getCurrentMonthStarBans(amount);\n\n        return{\n            carrier: carrierBans,\n            star: starBans\n        };\n    }\n\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,MAAM,MAAM,QAAQ,aAAa;AACjC,MAAM,SAAS,QAAQ,QAAQ;AAE/B,MAAO,qBAAmC;AAAA,EAGtC,YACI,mBACF;AACE,SAAK,oBAAoB;AAAA,EAC7B;AAAA,EAEA,uBAAuB,MAAY,cAAsB;AACrD,WAAO,KAAK,SAAS,cAAc,eAAe,KAAK,QAAQ,YAAY,IAAI;AAAA,EACnF;AAAA,EAEA,0BAA0B,MAAY,cAAsB;AACxD,WAAO,KAAK,SAAS,cAAc,eAAe,QAAQ,QAAQ,YAAY,IAAI;AAAA,EACtF;AAAA,EAEA,qBAAqB,eAAyB,QAAgB;AAC1D,QAAI,UAAU,GAAG;AACb,YAAM,IAAI,MAAM,2CAA2C;AAAA,IAC/D;AAEA,QAAI,UAAU,cAAc,QAAQ;AAChC,aAAO;AAAA,IACX;AAEA,UAAM,MAAM,OAAO,EAAE,IAAI;AACzB,UAAM,OAAO,IAAI,OAAO,QAAQ;AAChC,UAAM,MAAM,IAAI,OAAO,IAAI;AAE3B,UAAM,OAAiB,CAAC;AAExB,WAAO,KAAK,SAAS,QAAQ;AACzB,YAAM,IAAI,IAAI,cAAc,MAAM;AAClC,YAAM,KAAK,cAAc;AAEzB,WAAK,KAAK,EAAE;AACZ,oBAAc,OAAO,GAAG,CAAC;AAAA,IAC7B;AAEA,WAAO;AAAA,EACX;AAAA,EAEA,wBAAwB,QAA8B;AAClD,UAAM,QAAQ,KAAK,kBAAkB,SAAS,IAAI,EAAE,OAAO,OAAK,EAAE,OAAO,QAAQ;AACjF,UAAM,MAAM,MAAM,IAAI,CAAC,MAAkB,EAAE,EAAE;AAC7C,UAAM,OAAO,KAAK,qBAAqB,KAAK,MAAM;AAElD,WAAO,MAAM,OAAO,CAAC,MAAkB,KAAK,SAAS,EAAE,EAAE,CAAC;AAAA,EAC9D;AAAA,EAEA,2BAA2B,QAA8B;AACrD,UAAM,QAAQ,KAAK,kBAAkB,YAAY,IAAI,EAAE,OAAO,OAAK,EAAE,OAAO,QAAQ;AACpF,UAAM,MAAM,MAAM,IAAI,CAAC,MAAkB,EAAE,EAAE;AAC7C,UAAM,OAAO,KAAK,qBAAqB,KAAK,MAAM;AAElD,WAAO,MAAM,OAAO,CAAC,MAAkB,KAAK,SAAS,EAAE,EAAE,CAAC;AAAA,EAC9D;AAAA,EAEA,oBAAoB,QAAgB;AAChC,UAAM,cAAc,KAAK,2BAA2B,MAAM;AAC1D,UAAM,WAAW,KAAK,wBAAwB,MAAM;AAEpD,WAAM;AAAA,MACF,SAAS;AAAA,MACT,MAAM;AAAA,IACV;AAAA,EACJ;AAEJ;AAAC;",
  "names": []
}
