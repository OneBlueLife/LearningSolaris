{
  "version": 3,
  "sources": ["../../../server/services/event.ts"],
  "sourcesContent": ["import { DBObjectId } from \"./types/DBObjectId\";\nimport Repository from \"./repository\";\nimport { BulkUpgradeReport } from \"./types/InfrastructureUpgrade\";\nimport { Carrier } from \"./types/Carrier\";\nimport { CombatResult } from \"./types/Combat\";\nimport { Conversation } from \"./types/Conversation\";\nimport { Game } from \"./types/Game\";\nimport { Player } from \"./types/Player\";\nimport { Specialist } from \"./types/Specialist\";\nimport { Star, StarCaptureResult } from \"./types/Star\";\nimport BadgeService, { BadgeServiceEvents } from \"./badge\";\nimport BroadcastService from \"./broadcast\";\nimport CombatService, { CombatServiceEvents } from \"./combat\";\nimport ConversationService, { ConversationServiceEvents } from \"./conversation\";\nimport GameService, { GameServiceEvents } from \"./game\";\nimport GameTickService, { GameTickServiceEvents } from \"./gameTick\";\nimport LedgerService, { LedgerServiceEvents, LedgerType } from \"./ledger\";\nimport ResearchService, { ResearchServiceEvents } from \"./research\";\nimport SpecialistService from \"./specialist\";\nimport StarService, { StarServiceEvents } from \"./star\";\nimport StarUpgradeService, { StarUpgradeServiceEvents } from \"./starUpgrade\";\nimport TradeService, { TradeServiceEvents } from \"./trade\";\nimport { GameEvent } from \"./types/GameEvent\";\nimport DiplomacyService, { DiplomacyServiceEvents } from \"./diplomacy\";\nimport { DiplomaticStatus } from \"./types/Diplomacy\";\nimport CarrierGiftService, { CarrierGiftServiceEvents } from \"./carrierGift\";\nimport PlayerGalacticCycleCompletedEvent from './types/events/PlayerGalacticCycleComplete';\nimport GamePlayerJoinedEvent from \"./types/events/GamePlayerJoined\";\nimport GamePlayerQuitEvent from \"./types/events/GamePlayerQuit\";\nimport GamePlayerDefeatedEvent from \"./types/events/GamePlayerDefeated\";\nimport GamePlayerAFKEvent from \"./types/events/GamePlayerAFK\";\nimport { BaseGameEvent } from \"./types/events/BaseGameEvent\";\nimport GameEndedEvent from \"./types/events/GameEnded\";\nimport GamePlayerBadgePurchasedEvent from \"./types/events/GamePlayerBadgePurchased\";\nimport GameDiplomacyPeaceDeclaredEvent from \"./types/events/GameDiplomacyPeaceDeclared\";\nimport GameDiplomacyWarDeclaredEvent from \"./types/events/GameDiplomacyWarDeclared\";\nimport ValidationError from \"../errors/validation\";\nimport GameJoinService, { GameJoinServiceEvents } from \"./gameJoin\";\n\nconst moment = require('moment');\n\nexport default class EventService {\n\n    EVENT_TYPES = {\n        GAME_PLAYER_JOINED: 'gamePlayerJoined',\n        GAME_PLAYER_QUIT: 'gamePlayerQuit',\n        GAME_PLAYER_DEFEATED: 'gamePlayerDefeated',\n        GAME_PLAYER_AFK: 'gamePlayerAFK',\n        GAME_STARTED: 'gameStarted',\n        GAME_ENDED: 'gameEnded',\n        GAME_PLAYER_BADGE_PURCHASED: 'gamePlayerBadgePurchased',\n        GAME_DIPLOMACY_PEACE_DECLARED: 'gameDiplomacyPeaceDeclared',\n        GAME_DIPLOMACY_WAR_DECLARED: 'gameDiplomacyWarDeclared',\n\n        // TODO: Need event types for the ones below, see ./types/events directory\n        PLAYER_GALACTIC_CYCLE_COMPLETE: 'playerGalacticCycleComplete',\n        PLAYER_COMBAT_STAR: 'playerCombatStar',\n        PLAYER_COMBAT_CARRIER: 'playerCombatCarrier',\n        PLAYER_RESEARCH_COMPLETE: 'playerResearchComplete',\n        PLAYER_TECHNOLOGY_RECEIVED: 'playerTechnologyReceived',\n        PLAYER_TECHNOLOGY_SENT: 'playerTechnologySent',\n        PLAYER_CREDITS_RECEIVED: 'playerCreditsReceived',\n        PLAYER_CREDITS_SENT: 'playerCreditsSent',\n        PLAYER_CREDITS_SPECIALISTS_RECEIVED: 'playerCreditsSpecialistsReceived',\n        PLAYER_CREDITS_SPECIALISTS_SENT: 'playerCreditsSpecialistsSent',\n        PLAYER_RENOWN_RECEIVED: 'playerRenownReceived',\n        PLAYER_RENOWN_SENT: 'playerRenownSent',\n        PLAYER_GIFT_RECEIVED: 'playerGiftReceived',\n        PLAYER_GIFT_SENT: 'playerGiftSent',\n        PLAYER_STAR_ABANDONED: 'playerStarAbandoned',\n        PLAYER_STAR_DIED: 'playerStarDied',\n        PLAYER_STAR_REIGNITED: 'playerStarReignited',\n        PLAYER_BULK_INFRASTRUCTURE_UPGRADED: 'playerBulkInfrastructureUpgraded',\n        PLAYER_DEBT_SETTLED: 'playerDebtSettled',\n        PLAYER_DEBT_FORGIVEN: 'playerDebtForgiven',\n        PLAYER_STAR_SPECIALIST_HIRED: 'playerStarSpecialistHired',\n        PLAYER_CARRIER_SPECIALIST_HIRED: 'playerCarrierSpecialistHired',\n        PLAYER_CONVERSATION_CREATED: 'playerConversationCreated',\n        PLAYER_CONVERSATION_INVITED: 'playerConversationInvited',\n        PLAYER_CONVERSATION_LEFT: 'playerConversationLeft',\n        PLAYER_DIPLOMACY_STATUS_CHANGED: 'playerDiplomacyStatusChanged',\n    }\n    \n    eventModel;\n    eventRepo: Repository<GameEvent>;\n    broadcastService: BroadcastService;\n    gameService: GameService;\n    gameJoinService: GameJoinService;\n    gameTickService: GameTickService;\n    researchService: ResearchService;\n    starService: StarService;\n    starUpgradeService: StarUpgradeService;\n    tradeService: TradeService;\n    ledgerService: LedgerService;\n    conversationService: ConversationService;\n    combatService: CombatService;\n    specialistService: SpecialistService\n    badgeService: BadgeService;\n    carrierGiftService: CarrierGiftService;\n    diplomacyService: DiplomacyService;\n\n    constructor(\n        eventModel,\n        eventRepo: Repository<GameEvent>,\n        broadcastService: BroadcastService,\n        gameService: GameService,\n        gameJoinService: GameJoinService,\n        gameTickService: GameTickService,\n        researchService: ResearchService,\n        starService: StarService,\n        starUpgradeService: StarUpgradeService,\n        tradeService: TradeService,\n        ledgerService: LedgerService,\n        conversationService: ConversationService,\n        combatService: CombatService,\n        specialistService: SpecialistService,\n        badgeService: BadgeService,\n        carrierGiftService: CarrierGiftService,\n        diplomacyService: DiplomacyService\n    ) {\n        this.eventModel = eventModel;\n        this.eventRepo = eventRepo;\n        this.broadcastService = broadcastService;\n        this.gameService = gameService;\n        this.gameJoinService = gameJoinService;\n        this.gameTickService = gameTickService;\n        this.researchService = researchService;\n        this.starService = starService;\n        this.starUpgradeService = starUpgradeService;\n        this.tradeService = tradeService;\n        this.ledgerService = ledgerService;\n        this.conversationService = conversationService;\n        this.combatService = combatService;\n        this.specialistService = specialistService;\n        this.badgeService = badgeService;\n        this.carrierGiftService = carrierGiftService;\n        this.diplomacyService = diplomacyService;\n\n        this.gameJoinService.on(GameJoinServiceEvents.onPlayerJoined, (args) => this.createPlayerJoinedEvent(args));\n        this.gameJoinService.on(GameJoinServiceEvents.onGameStarted, (args) => this.createGameStartedEvent(args));\n        \n        this.gameService.on(GameServiceEvents.onGameDeleted, (args) => this.deleteByGameId(args.gameId));\n        this.gameService.on(GameServiceEvents.onPlayerQuit, (args) => this.createPlayerQuitEvent(args));\n        this.gameService.on(GameServiceEvents.onPlayerDefeated, (args) => this.createPlayerDefeatedEvent(args));\n        \n        this.combatService.on(CombatServiceEvents.onPlayerCombatStar, (args) => this.createPlayerCombatStarEvent(\n            args.gameId, args.gameTick, args.owner, args.defenders, args.attackers, args.star, args.combatResult, args.captureResult));\n        this.combatService.on(CombatServiceEvents.onPlayerCombatCarrier, (args) => this.createPlayerCombatCarrierEvent(\n            args.gameId, args.gameTick, args.defenders, args.attackers, args.combatResult));\n        \n        this.gameTickService.on(GameTickServiceEvents.onPlayerGalacticCycleCompleted, (args) => this.createPlayerGalacticCycleCompleteEvent(args));\n        this.gameTickService.on(GameTickServiceEvents.onPlayerAfk, (args) => this.createPlayerAfkEvent(args));\n        this.gameTickService.on(GameTickServiceEvents.onPlayerDefeated, (args) => this.createPlayerDefeatedEvent(args));\n        this.gameTickService.on(GameTickServiceEvents.onGameEnded, (args) => this.createGameEndedEvent(args));\n\n        this.researchService.on(ResearchServiceEvents.onPlayerResearchCompleted, (args) => this.createResearchCompleteEvent(args.gameId, args.gameTick, args.playerId, args.technologyKey, args.technologyLevel, args.technologyKeyNext, args.technologyLevelNext));\n\n        this.starService.on(StarServiceEvents.onPlayerStarAbandoned, (args) => this.createStarAbandonedEvent(args.gameId, args.gameTick, args.player, args.star));\n        this.starService.on(StarServiceEvents.onPlayerStarDied, (args) => this.createStarDiedEvent(args.gameId, args.gameTick, args.playerId, args.starId, args.starName));\n        this.starService.on(StarServiceEvents.onPlayerStarReignited, (args) => this.createStarReignitedEvent(args.gameId, args.gameTick, args.playerId, args.starId, args.starName));\n        \n        this.starUpgradeService.on(StarUpgradeServiceEvents.onPlayerInfrastructureBulkUpgraded, (args) => this.createInfrastructureBulkUpgraded(args.gameId, args.gameTick, args.player, args.upgradeSummary));\n\n        this.tradeService.on(TradeServiceEvents.onPlayerCreditsReceived, (args) => this.createCreditsReceivedEvent(args.gameId, args.gameTick, args.fromPlayer, args.toPlayer, args.amount));\n        this.tradeService.on(TradeServiceEvents.onPlayerCreditsSent, (args) => this.createCreditsSentEvent(args.gameId, args.gameTick, args.fromPlayer, args.toPlayer, args.amount));\n        this.tradeService.on(TradeServiceEvents.onPlayerCreditsSpecialistsReceived, (args) => this.createCreditsSpecialistsReceivedEvent(args.gameId, args.gameTick, args.fromPlayer, args.toPlayer, args.amount));\n        this.tradeService.on(TradeServiceEvents.onPlayerCreditsSpecialistsSent, (args) => this.createCreditsSpecialistsSentEvent(args.gameId, args.gameTick, args.fromPlayer, args.toPlayer, args.amount));\n        this.tradeService.on(TradeServiceEvents.onPlayerRenownReceived, (args) => this.createRenownReceivedEvent(args.gameId, args.gameTick, args.fromPlayer, args.toPlayer, args.amount));\n        this.tradeService.on(TradeServiceEvents.onPlayerRenownSent, (args) => this.createRenownSentEvent(args.gameId, args.gameTick, args.fromPlayer, args.toPlayer, args.amount));\n        this.tradeService.on(TradeServiceEvents.onPlayerTechnologyReceived, (args) => this.createTechnologyReceivedEvent(args.gameId, args.gameTick, args.fromPlayer, args.toPlayer, args.technology));\n        this.tradeService.on(TradeServiceEvents.onPlayerTechnologySent, (args) => this.createTechnologySentEvent(args.gameId, args.gameTick, args.fromPlayer, args.toPlayer, args.technology));\n\n        this.carrierGiftService.on(CarrierGiftServiceEvents.onPlayerGiftReceived, (args) => this.createGiftReceivedEvent(args.gameId, args.gameTick, args.fromPlayer, args.toPlayer, args.carrier, args.star));\n        this.carrierGiftService.on(CarrierGiftServiceEvents.onPlayerGiftSent, (args) => this.createGiftSentEvent(args.gameId, args.gameTick, args.fromPlayer, args.toPlayer, args.carrier, args.star));\n\n        this.ledgerService.on(LedgerServiceEvents.onDebtAdded, (args) => this.createDebtAddedEvent(args.gameId, args.gameTick, args.debtor, args.creditor, args.amount, args.ledgerType));\n        this.ledgerService.on(LedgerServiceEvents.onDebtSettled, (args) => this.createDebtSettledEvent(args.gameId, args.gameTick, args.debtor, args.creditor, args.amount, args.ledgerType));\n        this.ledgerService.on(LedgerServiceEvents.onDebtForgiven, (args) => this.createDebtForgivenEvent(args.gameId, args.gameTick, args.debtor, args.creditor, args.amount, args.ledgerType));\n\n        this.conversationService.on(ConversationServiceEvents.onConversationCreated, (args) => this.createPlayerConversationCreated(args.gameId, args.gameTick, args.convo));\n        this.conversationService.on(ConversationServiceEvents.onConversationInvited, (args) => this.createPlayerConversationInvited(args.gameId, args.gameTick, args.convo, args.playerId));\n        this.conversationService.on(ConversationServiceEvents.onConversationLeft, (args) => this.createPlayerConversationLeft(args.gameId, args.gameTick, args.convo, args.playerId));\n\n        this.badgeService.on(BadgeServiceEvents.onGamePlayerBadgePurchased, (args) => this.createGamePlayerBadgePurchased(args));\n\n        this.diplomacyService.on(DiplomacyServiceEvents.onDiplomacyPeaceDeclared, (args) => this.createGameDiplomacyPeaceDeclared(args));\n        this.diplomacyService.on(DiplomacyServiceEvents.onDiplomacyWarDeclared, (args) => this.createGameDiplomacyWarDeclared(args));\n        this.diplomacyService.on(DiplomacyServiceEvents.onDiplomacyStatusChanged, (args) => this.createPlayerDiplomacyStatusChanged(args.gameId, args.gameTick, args.status));\n    }\n\n    async deleteByGameId(gameId: DBObjectId) {\n        await this.eventRepo.deleteMany({\n            gameId\n        });\n    }\n\n    async deleteByEventType(gameId: DBObjectId, gameTick: number, type: string) {\n        await this.eventRepo.deleteMany({\n            gameId,\n            tick: gameTick,\n            type\n        });\n    }\n\n    async createGameEvent(gameId: DBObjectId, gameTick: number, type: string, data) {\n        let event = new this.eventModel({\n            gameId,\n            playerId: null,\n            tick: gameTick,\n            type,\n            data,\n            read: null\n        });\n\n        await event.save();\n    }\n\n    async createPlayerEvent(gameId: DBObjectId, gameTick: number, playerId: DBObjectId, type: string, data, isRead: boolean = false) {\n        let event = new this.eventModel({\n            gameId,\n            playerId,\n            tick: gameTick,\n            type,\n            data,\n            read: isRead\n        });\n\n        await event.save();\n    }\n\n    async getPlayerEvents(gameId: DBObjectId, player: Player, page: number, pageSize: number, category: string | null) {\n        const query = {\n            gameId: gameId,\n            playerId: {\n                $in: [\n                    player._id,\n                    null\n                ]\n            }\n        };\n\n        if (category != null && category !== 'all') {\n            const categories = {\n                gameEvents: [\n                    'gamePlayerJoined',\n                    'gamePlayerQuit',\n                    'gamePlayerDefeated',\n                    'gamePlayerAFK',\n                    'gameStarted',\n                    'gameEnded',\n                    'gamePaused',\n                    'gamePlayerBadgePurchased',\n                    'playerRenownReceived',\n                    'playerRenownSent'\n                ],\n                trade: [\n                    'playerTechnologyReceived',\n                    'playerTechnologySent',\n                    'playerCreditsReceived',\n                    'playerCreditsSent',\n                    'playerCreditsSpecialistsReceived',\n                    'playerCreditsSpecialistsSent',\n                    'playerGiftReceived',\n                    'playerGiftSent',\n                    'playerDebtSettled',\n                    'playerDebtForgiven'\n                ],\n                combat: [\n                    'playerCombatStar',\n                    'playerCombatCarrier',\n                    'playerStarAbandoned'\n                ],\n                galacticCycles: [\n                    'playerGalacticCycleComplete'\n                ],\n                research: [\n                    'playerResearchComplete'\n                ],\n                specialists: [\n                    'playerStarSpecialistHired',\n                    'playerCarrierSpecialistHired'\n                ],\n                conversations: [\n                    'playerConversationCreated',\n                    'playerConversationInvited',\n                    'playerConversationLeft'\n                ],\n                diplomacy: [\n                    'playerDiplomacyStatusChanged',\n                    'gameDiplomacyPeaceDeclared',\n                    'gameDiplomacyWarDeclared',\n                    'gameDiplomacyAllianceDeclared'\n                ]\n            };\n\n            const categoryFilter = categories[category!];\n\n            if (!categoryFilter) {\n                throw new ValidationError(`Unsupported category: ${category}`);\n            }\n\n            query['type'] = {\n                $in: categoryFilter\n            };\n        }\n\n        const count = await this.eventRepo.count(query)\n\n        const events = await this.eventRepo.find(query,\n            null, // All fields\n            {\n                tick: -1, // Sort by tick descending\n                _id: -1\n            },\n            pageSize,\n            page * pageSize);\n\n        return {\n            count,\n            events\n        };\n    }\n\n    async markAllEventsAsRead(game: Game, playerId: DBObjectId) {\n        await this.eventRepo.updateMany({\n            gameId: game._id,\n            playerId: playerId,\n            read: false\n        }, {\n            $set: {\n                read: true\n            }\n        });\n\n        this.broadcastService.playerAllEventsRead(game, playerId);\n    }\n\n    async markEventAsRead(game: Game, playerId: DBObjectId, eventId: DBObjectId) {\n        await this.eventRepo.updateOne({\n            _id: eventId,\n            gameId: game._id,\n            playerId: playerId,\n            read: false\n        }, {\n            $set: {\n                read: true\n            }\n        });\n\n        this.broadcastService.playerEventRead(game, playerId, eventId);\n    }\n\n    async getUnreadCount(game: Game, playerId: DBObjectId) {\n        return await this.eventRepo.count({\n            gameId: game._id,\n            playerId: playerId,\n            read: false\n        });\n    }\n\n    /* GLOBAL EVENTS */\n\n    async createPlayerJoinedEvent(args: GamePlayerJoinedEvent) {\n        let data = {\n            playerId: args.playerId,\n            alias: args.playerAlias\n        };\n\n        return await this.createGameEvent(args.gameId, args.gameTick, this.EVENT_TYPES.GAME_PLAYER_JOINED, data);\n    }\n\n    async createPlayerQuitEvent(args: GamePlayerQuitEvent) {\n        let data = {\n            playerId: args.playerId,\n            alias: args.playerAlias\n        };\n\n        return await this.createGameEvent(args.gameId, args.gameTick, this.EVENT_TYPES.GAME_PLAYER_QUIT, data);\n    }\n\n    async createPlayerDefeatedEvent(args: GamePlayerDefeatedEvent) {\n        let data = {\n            playerId: args.playerId,\n            alias: args.playerAlias,\n            openSlot: args.openSlot\n        };\n\n        return await this.createGameEvent(args.gameId, args.gameTick, this.EVENT_TYPES.GAME_PLAYER_DEFEATED, data);\n    }\n\n    async createPlayerAfkEvent(args: GamePlayerAFKEvent) {\n        let data = {\n            playerId: args.playerId,\n            alias: args.playerAlias\n        };\n\n        return await this.createGameEvent(args.gameId, args.gameTick, this.EVENT_TYPES.GAME_PLAYER_AFK, data);\n    }\n\n    async createGameStartedEvent(args: BaseGameEvent) {\n        let data = {};\n\n        return await this.createGameEvent(args.gameId, args.gameTick, this.EVENT_TYPES.GAME_STARTED, data);\n    }\n\n    async createGameEndedEvent(args: GameEndedEvent) {\n        let data = {\n            rankingResult: args.rankingResult\n        };\n\n        return await this.createGameEvent(args.gameId, args.gameTick, this.EVENT_TYPES.GAME_ENDED, data);\n    }\n\n    /* PLAYER EVENTS */\n\n    async createPlayerGalacticCycleCompleteEvent(data: PlayerGalacticCycleCompletedEvent) {\n        return await this.createPlayerEvent(data.gameId, data.gameTick, data.playerId!, this.EVENT_TYPES.PLAYER_GALACTIC_CYCLE_COMPLETE, data);\n    }\n\n    async createPlayerCombatStarEvent(gameId: DBObjectId, gameTick: number, owner: Player, defenders: Player[], attackers: Player[], star: Star, combatResult: CombatResult, captureResult: StarCaptureResult) {\n        let data = {\n            playerIdOwner: owner._id,\n            playerIdDefenders: defenders.map(p => p._id),\n            playerIdAttackers: attackers.map(p => p._id),\n            starId: star._id,\n            starName: star.name,\n            captureResult\n        };\n\n        for (let defender of defenders) {\n            let defenderCombatResult: CombatResult = this.combatService.sanitiseCombatResult(combatResult, defender);\n\n            await this.createPlayerEvent(gameId, gameTick, defender._id, this.EVENT_TYPES.PLAYER_COMBAT_STAR, { ...data, combatResult: defenderCombatResult });\n        }\n\n        for (let attacker of attackers) {\n            let attackerCombatResult: CombatResult = this.combatService.sanitiseCombatResult(combatResult, attacker);\n\n            await this.createPlayerEvent(gameId, gameTick, attacker._id, this.EVENT_TYPES.PLAYER_COMBAT_STAR, { ...data, combatResult: attackerCombatResult });\n        }\n    }\n\n    async createPlayerCombatCarrierEvent(gameId: DBObjectId, gameTick: number, defenders: Player[], attackers: Player[], combatResult: CombatResult) {\n        let data = {\n            playerIdDefenders: defenders.map(p => p._id),\n            playerIdAttackers: attackers.map(p => p._id),\n            combatResult\n        };\n\n        for (let defender of defenders) {\n            let defenderCombatResult: CombatResult = this.combatService.sanitiseCombatResult(combatResult, defender);\n            \n            await this.createPlayerEvent(gameId, gameTick, defender._id, this.EVENT_TYPES.PLAYER_COMBAT_CARRIER, { ...data, combatResult: defenderCombatResult });\n        }\n\n        for (let attacker of attackers) {\n            let attackerCombatResult: CombatResult = this.combatService.sanitiseCombatResult(combatResult, attacker);\n\n            await this.createPlayerEvent(gameId, gameTick, attacker._id, this.EVENT_TYPES.PLAYER_COMBAT_CARRIER, { ...data, combatResult: attackerCombatResult });\n        }\n    }\n\n    async createResearchCompleteEvent(gameId: DBObjectId, gameTick: number, playerId: DBObjectId, technologyKey: string, technologyLevel: number, technologyKeyNext: string, technologyLevelNext: number) {\n        let data = {\n            technologyKey,\n            technologyLevel,\n            technologyKeyNext,\n            technologyLevelNext\n        };\n\n        return await this.createPlayerEvent(gameId, gameTick, playerId, this.EVENT_TYPES.PLAYER_RESEARCH_COMPLETE, data);\n    }\n\n    async createTechnologyReceivedEvent(gameId: DBObjectId, gameTick: number, fromPlayer: Player, toPlayer: Player, technology: string) {\n        let data = {\n            fromPlayerId: fromPlayer._id,\n            technology\n        };\n\n        return await this.createPlayerEvent(gameId, gameTick, toPlayer._id, this.EVENT_TYPES.PLAYER_TECHNOLOGY_RECEIVED, data);\n    }\n\n    async createTechnologySentEvent(gameId: DBObjectId, gameTick: number, fromPlayer: Player, toPlayer: Player, technology: string) {\n        let data = {\n            toPlayerId: toPlayer._id,\n            technology\n        };\n\n        return await this.createPlayerEvent(gameId, gameTick, fromPlayer._id, this.EVENT_TYPES.PLAYER_TECHNOLOGY_SENT, data, true);\n    }\n\n    async createCreditsReceivedEvent(gameId: DBObjectId, gameTick: number, fromPlayer: Player, toPlayer: Player, credits: number) {\n        let data = {\n            fromPlayerId: fromPlayer._id,\n            credits\n        };\n\n        return await this.createPlayerEvent(gameId, gameTick, toPlayer._id, this.EVENT_TYPES.PLAYER_CREDITS_RECEIVED, data);\n    }\n\n    async createCreditsSentEvent(gameId: DBObjectId, gameTick: number, fromPlayer: Player, toPlayer: Player, credits: number) {\n        let data = {\n            toPlayerId: toPlayer._id,\n            credits\n        };\n\n        return await this.createPlayerEvent(gameId, gameTick, fromPlayer._id, this.EVENT_TYPES.PLAYER_CREDITS_SENT, data, true);\n    }\n\n    async createCreditsSpecialistsReceivedEvent(gameId: DBObjectId, gameTick: number, fromPlayer: Player, toPlayer: Player, creditsSpecialists: number) {\n        let data = {\n            fromPlayerId: fromPlayer._id,\n            creditsSpecialists\n        };\n\n        return await this.createPlayerEvent(gameId, gameTick, toPlayer._id, this.EVENT_TYPES.PLAYER_CREDITS_SPECIALISTS_RECEIVED, data);\n    }\n\n    async createCreditsSpecialistsSentEvent(gameId: DBObjectId, gameTick: number, fromPlayer: Player, toPlayer: Player, creditsSpecialists: number) {\n        let data = {\n            toPlayerId: toPlayer._id,\n            creditsSpecialists\n        };\n\n        return await this.createPlayerEvent(gameId, gameTick, fromPlayer._id, this.EVENT_TYPES.PLAYER_CREDITS_SPECIALISTS_SENT, data, true);\n    }\n\n    async createRenownReceivedEvent(gameId: DBObjectId, gameTick: number, fromPlayer: Player, toPlayer: Player, renown: number) {\n        let data = {\n            fromPlayerId: fromPlayer._id,\n            renown\n        };\n\n        return await this.createPlayerEvent(gameId, gameTick, toPlayer._id, this.EVENT_TYPES.PLAYER_RENOWN_RECEIVED, data);\n    }\n\n    async createRenownSentEvent(gameId: DBObjectId, gameTick: number, fromPlayer: Player, toPlayer: Player, renown: number) {\n        let data = {\n            toPlayerId: toPlayer._id,\n            renown\n        };\n\n        return await this.createPlayerEvent(gameId, gameTick, fromPlayer._id, this.EVENT_TYPES.PLAYER_RENOWN_SENT, data, true);\n    }\n\n    async createGiftReceivedEvent(gameId: DBObjectId, gameTick: number, fromPlayer: Player, toPlayer: Player, carrier: Carrier, star: Star) {\n        let data = {\n            fromPlayerId: fromPlayer._id,\n            carrierId: carrier._id,\n            carrierName: carrier.name,\n            carrierShips: carrier.ships,\n            starId: star._id,\n            starName: star.name\n        };\n\n        return await this.createPlayerEvent(gameId, gameTick, toPlayer._id, this.EVENT_TYPES.PLAYER_GIFT_RECEIVED, data);\n    }\n\n    async createGiftSentEvent(gameId: DBObjectId, gameTick: number, fromPlayer: Player, toPlayer: Player, carrier: Carrier, star: Star) {\n        let data = {\n            toPlayerId: toPlayer._id,\n            carrierId: carrier._id,\n            carrierName: carrier.name,\n            carrierShips: carrier.ships,\n            starId: star._id,\n            starName: star.name\n        };\n\n        return await this.createPlayerEvent(gameId, gameTick, fromPlayer._id, this.EVENT_TYPES.PLAYER_GIFT_SENT, data, true);\n    }\n\n    async createStarAbandonedEvent(gameId: DBObjectId, gameTick: number, player: Player, star: Star) {\n        let data = {\n            starId: star._id,\n            starName: star.name\n        };\n\n        return await this.createPlayerEvent(gameId, gameTick, player._id, this.EVENT_TYPES.PLAYER_STAR_ABANDONED, data, true);\n    }\n\n    async createStarDiedEvent(gameId: DBObjectId, gameTick: number, playerId: DBObjectId, starId: DBObjectId, starName: string) {\n        let data = {\n            starId,\n            starName\n        };\n\n        await this.createPlayerEvent(gameId, gameTick, playerId, this.EVENT_TYPES.PLAYER_STAR_DIED, data);\n    }\n\n    async createStarReignitedEvent(gameId: DBObjectId, gameTick: number, playerId: DBObjectId, starId: DBObjectId, starName: string) {\n        let data = {\n            starId,\n            starName\n        };\n\n        await this.createPlayerEvent(gameId, gameTick, playerId, this.EVENT_TYPES.PLAYER_STAR_REIGNITED, data);\n    }\n\n    async createInfrastructureBulkUpgraded(gameId: DBObjectId, gameTick: number, player: Player, upgradeReport: BulkUpgradeReport) {\n        let data = {\n            upgradeReport\n        };\n\n        return await this.createPlayerEvent(gameId, gameTick, player._id, this.EVENT_TYPES.PLAYER_BULK_INFRASTRUCTURE_UPGRADED, data, true);\n    }\n\n    async createDebtAddedEvent(gameId: DBObjectId, gameTick: number, debtorPlayerId: DBObjectId, creditorPlayerId: DBObjectId, amount: number, ledgerType: LedgerType) {\n        // Debt added event is superfluous as we already have other events for when trades occur.\n        // Just broadcast the event instead.\n\n        this.broadcastService.gamePlayerDebtAdded(debtorPlayerId, creditorPlayerId, amount, ledgerType);\n    }\n\n    async createDebtSettledEvent(gameId: DBObjectId, gameTick: number, debtorPlayerId: DBObjectId, creditorPlayerId: DBObjectId, amount: number, ledgerType: LedgerType) {\n        let data = {\n            debtorPlayerId,\n            creditorPlayerId,\n            amount,\n            ledgerType\n        };\n\n        await this.createPlayerEvent(gameId, gameTick, debtorPlayerId, this.EVENT_TYPES.PLAYER_DEBT_SETTLED, data, true);\n        await this.createPlayerEvent(gameId, gameTick, creditorPlayerId, this.EVENT_TYPES.PLAYER_DEBT_SETTLED, data, false);\n\n        this.broadcastService.gamePlayerDebtSettled(debtorPlayerId, creditorPlayerId, amount, ledgerType);\n    }\n\n    async createDebtForgivenEvent(gameId: DBObjectId, gameTick: number, debtorPlayerId: DBObjectId, creditorPlayerId: DBObjectId, amount: number, ledgerType: LedgerType) {\n        let data = {\n            debtorPlayerId,\n            creditorPlayerId,\n            amount,\n            ledgerType\n        };\n\n        await this.createPlayerEvent(gameId, gameTick, debtorPlayerId, this.EVENT_TYPES.PLAYER_DEBT_FORGIVEN, data, false);\n        await this.createPlayerEvent(gameId, gameTick, creditorPlayerId, this.EVENT_TYPES.PLAYER_DEBT_FORGIVEN, data, true);\n\n        this.broadcastService.gamePlayerDebtForgiven(debtorPlayerId, creditorPlayerId, amount, ledgerType);\n    }\n\n    async createPlayerStarSpecialistHired(gameId: DBObjectId, gameTick: number, player: Player, star: Star, specialist: Specialist) {\n        let data = {\n            starId: star._id,\n            starName: star.name,\n            specialistId: specialist.id,\n            // Need to keep these values just in case specs are changed in future.\n            specialistName: specialist.name,\n            specialistDescription: specialist.description\n        }\n\n        await this.createPlayerEvent(gameId, gameTick, player._id, this.EVENT_TYPES.PLAYER_STAR_SPECIALIST_HIRED, data, true);\n    }\n\n    async createPlayerCarrierSpecialistHired(gameId: DBObjectId, gameTick: number, player: Player, carrier: Carrier, specialist: Specialist) {\n        let data = {\n            carrierId: carrier._id,\n            carrierName: carrier.name, // Carriers may be destroyed so we need to keep track of the name separately\n            specialistId: specialist.id,\n            // Need to keep these values just in case specs are changed in future.\n            specialistName: specialist.name,\n            specialistDescription: specialist.description\n        }\n\n        await this.createPlayerEvent(gameId, gameTick, player._id, this.EVENT_TYPES.PLAYER_CARRIER_SPECIALIST_HIRED, data, true);\n    }\n\n    async createPlayerConversationCreated(gameId: DBObjectId, gameTick: number, convo: Conversation) {\n        let data = {\n            conversationId: convo._id,\n            createdBy: convo.createdBy,\n            name: convo.name,\n            participants: convo.participants\n        };\n\n        await this.createPlayerEvent(gameId, gameTick, convo.createdBy!, this.EVENT_TYPES.PLAYER_CONVERSATION_CREATED, data, true);\n    }\n\n    async createPlayerConversationInvited(gameId: DBObjectId, gameTick: number, convo: Conversation, playerId: DBObjectId) {\n        let data = {\n            conversationId: convo._id,\n            name: convo.name,\n            playerId\n        };\n\n        await this.createPlayerEvent(gameId, gameTick, playerId, this.EVENT_TYPES.PLAYER_CONVERSATION_INVITED, data);\n    }\n\n    async createPlayerConversationLeft(gameId: DBObjectId, gameTick: number, convo: Conversation, playerId: DBObjectId) {\n        let data = {\n            conversationId: convo._id,\n            name: convo.name,\n            playerId\n        };\n\n        await this.createPlayerEvent(gameId, gameTick, playerId, this.EVENT_TYPES.PLAYER_CONVERSATION_LEFT, data, true);\n    }\n\n    async createGamePlayerBadgePurchased(args: GamePlayerBadgePurchasedEvent) {\n        let data = {\n            purchasedByPlayerId: args.purchasedByPlayerId,\n            purchasedByPlayerAlias: args.purchasedByPlayerAlias,\n            purchasedForPlayerId: args.purchasedForPlayerId,\n            purchasedForPlayerAlias: args.purchasedForPlayerAlias,\n            badgeKey: args.badgeKey,\n            badgeName: args.badgeName\n        };\n\n        return await this.createGameEvent(args.gameId, args.gameTick, this.EVENT_TYPES.GAME_PLAYER_BADGE_PURCHASED, data);\n    }\n\n    async _deleteGameDiplomacyDeclarationsInTick(gameId: DBObjectId, gameTick: number, status: DiplomaticStatus) {\n        await this.eventRepo.deleteMany({\n            gameId,\n            tick: gameTick,\n            type: {\n                $in: [\n                    this.EVENT_TYPES.GAME_DIPLOMACY_PEACE_DECLARED, \n                    this.EVENT_TYPES.GAME_DIPLOMACY_WAR_DECLARED\n                ]\n            },\n            $or: [\n                { \n                    'data.playerIdFrom': status.playerIdFrom,\n                    'data.playerIdTo': status.playerIdTo\n                },\n                { \n                    'data.playerIdFrom': status.playerIdTo,\n                    'data.playerIdTo': status.playerIdFrom\n                }\n            ]\n        });\n    }\n\n    async createGameDiplomacyPeaceDeclared(args: GameDiplomacyPeaceDeclaredEvent) {\n        let data = args.status;\n\n        // Peace/war can be declared multiple times in a single tick, delete any existing declarations\n        await this._deleteGameDiplomacyDeclarationsInTick(args.gameId, args.gameTick, args.status);\n\n        return await this.createGameEvent(args.gameId, args.gameTick, this.EVENT_TYPES.GAME_DIPLOMACY_PEACE_DECLARED, data);\n    }\n\n    async createGameDiplomacyWarDeclared(args: GameDiplomacyWarDeclaredEvent) {\n        let data = args.status;\n\n        // Peace/war can be declared multiple times in a single tick, delete any existing declarations\n        await this._deleteGameDiplomacyDeclarationsInTick(args.gameId, args.gameTick, args.status);\n\n        return await this.createGameEvent(args.gameId, args.gameTick, this.EVENT_TYPES.GAME_DIPLOMACY_WAR_DECLARED, data);\n    }\n\n    async createPlayerDiplomacyStatusChanged(gameId: DBObjectId, gameTick: number, status: DiplomaticStatus) {\n        let data = status;\n\n        // Delete the event if it already exists - This prevents spam.\n        await this.deleteByEventType(gameId, gameTick, this.EVENT_TYPES.PLAYER_DIPLOMACY_STATUS_CHANGED);\n\n        await this.createPlayerEvent(gameId, gameTick, status.playerIdFrom, this.EVENT_TYPES.PLAYER_DIPLOMACY_STATUS_CHANGED, data);\n        await this.createPlayerEvent(gameId, gameTick, status.playerIdTo, this.EVENT_TYPES.PLAYER_DIPLOMACY_STATUS_CHANGED, data);\n    }\n\n};\n"],
  "mappings": "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",
  "names": ["ValidationError"]
}
