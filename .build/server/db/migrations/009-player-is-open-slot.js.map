{
  "version": 3,
  "sources": ["../../../../server/db/migrations/009-player-is-open-slot.js"],
  "sourcesContent": ["module.exports = {\n    async migrate(db) {\n        const games = db.collection('games');\n\n        // Completed games\n        await games.updateMany({\n            'state.endDate': { $ne: null },\n            'galaxy.players.isOpenSlot': { $eq: null }\n        }, {\n            $set: {\n                'galaxy.players.$[].isOpenSlot': false\n            }\n        });\n\n        // Not started/in progress games\n        // Ensure that unfilled slots have their slots open.\n        await games.updateMany({\n            'state.endDate': { $eq: null },\n            'settings.general.type': { $ne: 'tutorial' },\n            'galaxy.players.isOpenSlot': { $eq: null }\n        }, {\n            $set: {\n                'galaxy.players.$[p].isOpenSlot': true\n            }\n        }, {\n            arrayFilters: [\n                {\n                    'p.isOpenSlot': { $eq: null },\n                    'p.userId': { $eq: null }\n                }\n            ]\n        });\n\n        // In progress games\n        // Ensure that AFK players have their slots open.\n        await games.updateMany({\n            'state.endDate': { $eq: null },\n            'settings.general.type': { $ne: 'tutorial' },\n            'galaxy.players.isOpenSlot': { $eq: null }\n        }, {\n            $set: {\n                'galaxy.players.$[p].isOpenSlot': true\n            }\n        }, {\n            arrayFilters: [\n                {\n                    'p.isOpenSlot': { $eq: null },\n                    'p.userId': { $ne: null },\n                    'p.defeated': true,\n                    'p.afk': true\n                }\n            ]\n        });\n    }\n};\n"],
  "mappings": ";AAAA,OAAO,UAAU;AAAA,EACb,MAAM,QAAQ,IAAI;AACd,UAAM,QAAQ,GAAG,WAAW,OAAO;AAGnC,UAAM,MAAM,WAAW;AAAA,MACnB,iBAAiB,EAAE,KAAK,KAAK;AAAA,MAC7B,6BAA6B,EAAE,KAAK,KAAK;AAAA,IAC7C,GAAG;AAAA,MACC,MAAM;AAAA,QACF,iCAAiC;AAAA,MACrC;AAAA,IACJ,CAAC;AAID,UAAM,MAAM,WAAW;AAAA,MACnB,iBAAiB,EAAE,KAAK,KAAK;AAAA,MAC7B,yBAAyB,EAAE,KAAK,WAAW;AAAA,MAC3C,6BAA6B,EAAE,KAAK,KAAK;AAAA,IAC7C,GAAG;AAAA,MACC,MAAM;AAAA,QACF,kCAAkC;AAAA,MACtC;AAAA,IACJ,GAAG;AAAA,MACC,cAAc;AAAA,QACV;AAAA,UACI,gBAAgB,EAAE,KAAK,KAAK;AAAA,UAC5B,YAAY,EAAE,KAAK,KAAK;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ,CAAC;AAID,UAAM,MAAM,WAAW;AAAA,MACnB,iBAAiB,EAAE,KAAK,KAAK;AAAA,MAC7B,yBAAyB,EAAE,KAAK,WAAW;AAAA,MAC3C,6BAA6B,EAAE,KAAK,KAAK;AAAA,IAC7C,GAAG;AAAA,MACC,MAAM;AAAA,QACF,kCAAkC;AAAA,MACtC;AAAA,IACJ,GAAG;AAAA,MACC,cAAc;AAAA,QACV;AAAA,UACI,gBAAgB,EAAE,KAAK,KAAK;AAAA,UAC5B,YAAY,EAAE,KAAK,KAAK;AAAA,UACxB,cAAc;AAAA,UACd,SAAS;AAAA,QACb;AAAA,MACJ;AAAA,IACJ,CAAC;AAAA,EACL;AACJ;",
  "names": []
}
