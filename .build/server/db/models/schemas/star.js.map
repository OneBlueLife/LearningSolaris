{
  "version": 3,
  "sources": ["../../../../../server/db/models/schemas/star.ts"],
  "sourcesContent": ["const mongoose = require('mongoose');\nconst Schema = mongoose.Schema;\nconst Types = Schema.Types;\n\nconst schema = new Schema({\n    ownedByPlayerId: { type: Types.ObjectId, required: false, default: null },\n    name: { type: Types.String, required: true },\n    naturalResources: {\n        economy: { type: Types.Number, required: true },\n        industry: { type: Types.Number, required: true },\n        science: { type: Types.Number, required: true }\n    },\n    ships: { type: Types.Number, required: true, default: 0 }, // TODO: ships could be a computed field or instead returned to the client floored.\n    shipsActual: { type: Types.Number, required: true, default: 0 },\n    specialistId: { type: Types.Number, required: false, default: null },\n    specialistExpireTick: { type: Types.Number, required: false, default: null },\n    homeStar: { type: Types.Boolean, required: false, default: false },\n    warpGate: { type: Types.Boolean, required: true, default: false },\n    isNebula: { type: Types.Boolean, required: true, default: false },\n    isAsteroidField: { type: Types.Boolean, required: true, default: false },\n    isBinaryStar: { type: Types.Boolean, required: true, default: false },\n    isBlackHole: { type: Types.Boolean, required: true, default: false },\n    isPulsar: { type: Types.Boolean, required: true, default: false },\n    wormHoleToStarId: { type: Types.ObjectId, required: false, default: null },\n    ignoreBulkUpgrade: {\n        economy: { type: Types.Boolean, required: false, default: false },\n        industry: { type: Types.Boolean, required: false, default: false },\n        science: { type: Types.Boolean, required: false, default: false }\n    },\n    infrastructure: {\n        economy: { type: Types.Number, required: true, default: 0 },\n        industry: { type: Types.Number, required: true, default: 0 },\n        science: { type: Types.Number, required: true, default: 0 }\n    },\n    location: {\n        x: { type: Types.Number, required: true, default: 0 },\n        y: { type: Types.Number, required: true, default: 0 }\n    }\n});\n\nexport default schema;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAM,WAAW,QAAQ,UAAU;AACnC,MAAM,SAAS,SAAS;AACxB,MAAM,QAAQ,OAAO;AAErB,MAAM,SAAS,IAAI,OAAO;AAAA,EACtB,iBAAiB,EAAE,MAAM,MAAM,UAAU,UAAU,OAAO,SAAS,KAAK;AAAA,EACxE,MAAM,EAAE,MAAM,MAAM,QAAQ,UAAU,KAAK;AAAA,EAC3C,kBAAkB;AAAA,IACd,SAAS,EAAE,MAAM,MAAM,QAAQ,UAAU,KAAK;AAAA,IAC9C,UAAU,EAAE,MAAM,MAAM,QAAQ,UAAU,KAAK;AAAA,IAC/C,SAAS,EAAE,MAAM,MAAM,QAAQ,UAAU,KAAK;AAAA,EAClD;AAAA,EACA,OAAO,EAAE,MAAM,MAAM,QAAQ,UAAU,MAAM,SAAS,EAAE;AAAA,EACxD,aAAa,EAAE,MAAM,MAAM,QAAQ,UAAU,MAAM,SAAS,EAAE;AAAA,EAC9D,cAAc,EAAE,MAAM,MAAM,QAAQ,UAAU,OAAO,SAAS,KAAK;AAAA,EACnE,sBAAsB,EAAE,MAAM,MAAM,QAAQ,UAAU,OAAO,SAAS,KAAK;AAAA,EAC3E,UAAU,EAAE,MAAM,MAAM,SAAS,UAAU,OAAO,SAAS,MAAM;AAAA,EACjE,UAAU,EAAE,MAAM,MAAM,SAAS,UAAU,MAAM,SAAS,MAAM;AAAA,EAChE,UAAU,EAAE,MAAM,MAAM,SAAS,UAAU,MAAM,SAAS,MAAM;AAAA,EAChE,iBAAiB,EAAE,MAAM,MAAM,SAAS,UAAU,MAAM,SAAS,MAAM;AAAA,EACvE,cAAc,EAAE,MAAM,MAAM,SAAS,UAAU,MAAM,SAAS,MAAM;AAAA,EACpE,aAAa,EAAE,MAAM,MAAM,SAAS,UAAU,MAAM,SAAS,MAAM;AAAA,EACnE,UAAU,EAAE,MAAM,MAAM,SAAS,UAAU,MAAM,SAAS,MAAM;AAAA,EAChE,kBAAkB,EAAE,MAAM,MAAM,UAAU,UAAU,OAAO,SAAS,KAAK;AAAA,EACzE,mBAAmB;AAAA,IACf,SAAS,EAAE,MAAM,MAAM,SAAS,UAAU,OAAO,SAAS,MAAM;AAAA,IAChE,UAAU,EAAE,MAAM,MAAM,SAAS,UAAU,OAAO,SAAS,MAAM;AAAA,IACjE,SAAS,EAAE,MAAM,MAAM,SAAS,UAAU,OAAO,SAAS,MAAM;AAAA,EACpE;AAAA,EACA,gBAAgB;AAAA,IACZ,SAAS,EAAE,MAAM,MAAM,QAAQ,UAAU,MAAM,SAAS,EAAE;AAAA,IAC1D,UAAU,EAAE,MAAM,MAAM,QAAQ,UAAU,MAAM,SAAS,EAAE;AAAA,IAC3D,SAAS,EAAE,MAAM,MAAM,QAAQ,UAAU,MAAM,SAAS,EAAE;AAAA,EAC9D;AAAA,EACA,UAAU;AAAA,IACN,GAAG,EAAE,MAAM,MAAM,QAAQ,UAAU,MAAM,SAAS,EAAE;AAAA,IACpD,GAAG,EAAE,MAAM,MAAM,QAAQ,UAAU,MAAM,SAAS,EAAE;AAAA,EACxD;AACJ,CAAC;AAED,IAAO,eAAQ;",
  "names": []
}
