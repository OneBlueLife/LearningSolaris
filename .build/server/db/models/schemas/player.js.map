{
  "version": 3,
  "sources": ["../../../../../server/db/models/schemas/player.ts"],
  "sourcesContent": ["const mongoose = require('mongoose');\nconst Schema = mongoose.Schema;\nconst Types = Schema.Types;\n\nconst schema = new Schema({\n    userId: { type: Types.ObjectId, required: false, default: null },\n    homeStarId: { type: Types.ObjectId, required: true },\n    alias: { type: Types.String, required: true },\n    avatar: { type: Types.String, required: false, default: null },\n    notes: { type: Types.String, required: false, default: null },\n    colour: {\n        alias: { type: Types.String, required: true },\n        value: { type: Types.String, required: true }\n    },\n    shape: { type: Types.String, required: true, enum: ['circle', 'square', 'diamond', 'hexagon'], default: 'circle' },\n    lastSeen: { type: Types.Date, required: false, default: null },\n    lastSeenIP: { type: Types.String, required: false, default: null },\n    researchingNow: { type: Types.String, required: true, default: 'weapons' },\n    researchingNext: { type: Types.String, required: true, default: 'weapons' },\n    credits: { type: Types.Number, required: true },\n    creditsSpecialists: { type: Types.Number, required: true },\n    isOpenSlot: { type: Types.Boolean, required: true, default: true },\n    defeated: { type: Types.Boolean, required: false, default: false }, // TODO: We can remove this in favour of using defeatedDate below.\n    defeatedDate: { type: Types.Date, required: false, default: null },\n    afk: { type: Types.Boolean, required: false, default: false },      // TODO: Same treatment as with defeatedDate.\n    aiState: { type: Types.Mixed, required: false, default: null },\n    renownToGive: { type: Types.Number, required: true, default: 8 },\n    ready: { type: Types.Boolean, required: false, default: false },\n    readyToCycle: { type: Types.Boolean, required: false, default: false },\n    readyToQuit: { type: Types.Boolean, required: false, default: false },\n    missedTurns: { type: Types.Number, required: false, default: 0 },\n    hasSentTurnReminder: { type: Types.Boolean, required: false, default: false },\n    hasFilledAfkSlot: { type: Types.Boolean, required: false, default: false },\n    spectators: [{ type: Types.ObjectId, required: false, default: [] }], // User ids\n    research: {\n        // TODO: This would be arguably better if it was just progress points and remove level\n        // and then we can calculate the level before sending it to the client.\n        scanning: {\n            level: { type: Types.Number, required: true, default: 1  },\n            progress: { type: Types.Number, required: true, default: 0  },\n        },\n        hyperspace: {\n            level: { type: Types.Number, required: true, default: 1  },\n            progress: { type: Types.Number, required: true, default: 0  },\n        },\n        terraforming: {\n            level: { type: Types.Number, required: true, default: 1  },\n            progress: { type: Types.Number, required: true, default: 0  },\n        },\n        experimentation: {\n            level: { type: Types.Number, required: true, default: 1  },\n            progress: { type: Types.Number, required: true, default: 0  },\n        },\n        weapons: {\n            level: { type: Types.Number, required: true, default: 1  },\n            progress: { type: Types.Number, required: true, default: 0  },\n        },\n        banking: {\n            level: { type: Types.Number, required: true, default: 1  },\n            progress: { type: Types.Number, required: true, default: 0  },\n        },\n        manufacturing: {\n            level: { type: Types.Number, required: true, default: 1  },\n            progress: { type: Types.Number, required: true, default: 0  },\n        },\n        specialists: {\n            level: { type: Types.Number, required: true, default: 1  },\n            progress: { type: Types.Number, required: true, default: 0  },\n        }\n    },\n    ledger: {\n        credits: [\n            {\n                playerId: { type: Types.ObjectId, required: true },\n                debt: { type: Types.Number, required: true, default: 0  }\n            }\n        ],\n        creditsSpecialists: [\n            {\n                playerId: { type: Types.ObjectId, required: true },\n                debt: { type: Types.Number, required: true, default: 0  }\n            }\n        ],\n    },\n    reputations: [\n        {\n            playerId: { type: Types.ObjectId, required: true },\n            score: { type: Types.Number, required: true, default: 0  }\n        }\n    ],\n    diplomacy: [\n        {\n            playerId: { type: Types.ObjectId, required: true },\n            status: { type: Types.String, required: true }\n        }\n    ]\n});\n\nexport default schema;\n"],
  "mappings": "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",
  "names": []
}
